/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler {
#ifdef SWIG_DIRECTOR_UEH
    static void handler() {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.what() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }

      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;

      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will likely abort/terminate." << std::endl;
      throw;
    }

  public:

    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler) {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler() {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object, optionally taking ownership */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
      swig_incref();
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_GLenum swig_types[0]
#define SWIGTYPE_p_GLint swig_types[1]
#define SWIGTYPE_p_GLvoid swig_types[2]
#define SWIGTYPE_p_ILuint swig_types[3]
#define SWIGTYPE_p___int64 swig_types[4]
#define SWIGTYPE_p_a_4__float swig_types[5]
#define SWIGTYPE_p_char swig_types[6]
#define SWIGTYPE_p_float swig_types[7]
#define SWIGTYPE_p_int swig_types[8]
#define SWIGTYPE_p_long swig_types[9]
#define SWIGTYPE_p_mio__Box swig_types[10]
#define SWIGTYPE_p_mio__Int3 swig_types[11]
#define SWIGTYPE_p_mio__Matrix4x4 swig_types[12]
#define SWIGTYPE_p_mio__MioObject swig_types[13]
#define SWIGTYPE_p_mio__Point3 swig_types[14]
#define SWIGTYPE_p_mio__Quaternion swig_types[15]
#define SWIGTYPE_p_mio__Ray swig_types[16]
#define SWIGTYPE_p_mio__ReferenceCounted swig_types[17]
#define SWIGTYPE_p_mio__Rgb swig_types[18]
#define SWIGTYPE_p_mio__Rgba swig_types[19]
#define SWIGTYPE_p_mio__Transform swig_types[20]
#define SWIGTYPE_p_mio__Uv swig_types[21]
#define SWIGTYPE_p_mio__Vector3 swig_types[22]
#define SWIGTYPE_p_mio__curve__Curve_JointChange swig_types[23]
#define SWIGTYPE_p_mio__curve__Curve_Quaternion swig_types[24]
#define SWIGTYPE_p_mio__curve__Curve_Vector3 swig_types[25]
#define SWIGTYPE_p_mio__curve__Curve_float swig_types[26]
#define SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange swig_types[27]
#define SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion swig_types[28]
#define SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3 swig_types[29]
#define SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float swig_types[30]
#define SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange swig_types[31]
#define SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion swig_types[32]
#define SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3 swig_types[33]
#define SWIGTYPE_p_mio__curve__PolylineControlPoint_float swig_types[34]
#define SWIGTYPE_p_mio__curve__Polyline_JointChange swig_types[35]
#define SWIGTYPE_p_mio__curve__Polyline_Quaternion swig_types[36]
#define SWIGTYPE_p_mio__curve__Polyline_Vector3 swig_types[37]
#define SWIGTYPE_p_mio__curve__Polyline_float swig_types[38]
#define SWIGTYPE_p_mio__geometry__IndexedMesh swig_types[39]
#define SWIGTYPE_p_mio__geometry__Mesh swig_types[40]
#define SWIGTYPE_p_mio__geometry__MeshVisitor swig_types[41]
#define SWIGTYPE_p_mio__gl__GLRenderer swig_types[42]
#define SWIGTYPE_p_mio__gl__GLTexture swig_types[43]
#define SWIGTYPE_p_mio__ik__IKArmature swig_types[44]
#define SWIGTYPE_p_mio__ik__IKEndEffector swig_types[45]
#define SWIGTYPE_p_mio__ik__IKEndEffectorGoals swig_types[46]
#define SWIGTYPE_p_mio__ik__IKEndEffectorIterator swig_types[47]
#define SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator swig_types[48]
#define SWIGTYPE_p_mio__ik__IKJoint swig_types[49]
#define SWIGTYPE_p_mio__ik__IKJointIterator swig_types[50]
#define SWIGTYPE_p_mio__ik__IKJointParameters swig_types[51]
#define SWIGTYPE_p_mio__ik__IKPose swig_types[52]
#define SWIGTYPE_p_mio__ik__NamePositionPair swig_types[53]
#define SWIGTYPE_p_mio__il__ILImage swig_types[54]
#define SWIGTYPE_p_mio__il__ILImageService swig_types[55]
#define SWIGTYPE_p_mio__material__ByPolygonMaterialMapping swig_types[56]
#define SWIGTYPE_p_mio__material__Material swig_types[57]
#define SWIGTYPE_p_mio__material__MaterialList swig_types[58]
#define SWIGTYPE_p_mio__material__MaterialMapping swig_types[59]
#define SWIGTYPE_p_mio__material__MaterialMappingVisitor swig_types[60]
#define SWIGTYPE_p_mio__material__MaterialVisitor swig_types[61]
#define SWIGTYPE_p_mio__material__MqoMaterial swig_types[62]
#define SWIGTYPE_p_mio__material__PhongMaterial swig_types[63]
#define SWIGTYPE_p_mio__material__TexturedMqoMaterial swig_types[64]
#define SWIGTYPE_p_mio__material__TexturedPhongMaterial swig_types[65]
#define SWIGTYPE_p_mio__rigging__Armature swig_types[66]
#define SWIGTYPE_p_mio__rigging__Joint swig_types[67]
#define SWIGTYPE_p_mio__rigging__JointChange swig_types[68]
#define SWIGTYPE_p_mio__rigging__JointIterator swig_types[69]
#define SWIGTYPE_p_mio__rigging__NameJointChangePair swig_types[70]
#define SWIGTYPE_p_mio__rigging__NameJointChangePairIterator swig_types[71]
#define SWIGTYPE_p_mio__rigging__Pose swig_types[72]
#define SWIGTYPE_p_mio__rigging__PoseAnimation swig_types[73]
#define SWIGTYPE_p_mio__scenegraph__Group swig_types[74]
#define SWIGTYPE_p_mio__scenegraph__Node swig_types[75]
#define SWIGTYPE_p_mio__scenegraph__NodeVisitor swig_types[76]
#define SWIGTYPE_p_mio__scenegraph__RiggedPrimitive swig_types[77]
#define SWIGTYPE_p_mio__scenegraph__SimplePrimitive swig_types[78]
#define SWIGTYPE_p_mio__scenegraph__TransformNode swig_types[79]
#define SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping swig_types[80]
#define SWIGTYPE_p_mio__skinning__JointWeightMapping swig_types[81]
#define SWIGTYPE_p_mio__texture__ILTexture swig_types[82]
#define SWIGTYPE_p_mio__texture__IndexedTextureMapping swig_types[83]
#define SWIGTYPE_p_mio__texture__LazyILTexture swig_types[84]
#define SWIGTYPE_p_mio__texture__Texture swig_types[85]
#define SWIGTYPE_p_mio__texture__TextureMapping swig_types[86]
#define SWIGTYPE_p_mio__texture__TextureMappingVisitor swig_types[87]
#define SWIGTYPE_p_mio__texture__TextureVisitor swig_types[88]
#define SWIGTYPE_p_mio__visitor__OmniVisitor swig_types[89]
#define SWIGTYPE_p_ostream swig_types[90]
#define SWIGTYPE_p_p_char swig_types[91]
#define SWIGTYPE_p_p_unsigned_long swig_types[92]
#define SWIGTYPE_p_short swig_types[93]
#define SWIGTYPE_p_signed___int64 swig_types[94]
#define SWIGTYPE_p_signed_char swig_types[95]
#define SWIGTYPE_p_std__mapT_std__string_mio__ik__NamePositionPair_t swig_types[96]
#define SWIGTYPE_p_std__ostream swig_types[97]
#define SWIGTYPE_p_string swig_types[98]
#define SWIGTYPE_p_unsigned___int64 swig_types[99]
#define SWIGTYPE_p_unsigned_char swig_types[100]
#define SWIGTYPE_p_unsigned_int swig_types[101]
#define SWIGTYPE_p_unsigned_long swig_types[102]
#define SWIGTYPE_p_unsigned_short swig_types[103]
static swig_type_info *swig_types[105];
static swig_module_info swig_module = {swig_types, 104, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _cmio.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__cmio

#else
#  define SWIG_init    init_cmio

#endif
#define SWIG_name    "_cmio"

#define SWIGVERSION 0x030005 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <mio/vector3.h>


#include <float.h>


#include <math.h>


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}

SWIGINTERN float mio_Vector3___getitem__(mio::Vector3 *self,int position){
		switch(position)
		{
		case 0:
			return self->x;
		case 1:
			return self->y;
		case 2:
			return self->z;		
		default:
			throw mio::IndexException("index to Vector3 element out of range");
		}
	}
SWIGINTERN void mio_Vector3___setitem__(mio::Vector3 *self,int position,float value){
		switch(position)
		{
		case 0:
			self->x = value;
			break;
		case 1:
			self->y = value;
			break;
		case 2:
			self->z = value;
			break;		
		default:
			throw mio::IndexException("index to Vector3 element out of range");
		}
	}

#include <mio/point3.h>

SWIGINTERN float mio_Point3___getitem__(mio::Point3 *self,int position){
		switch(position)
		{
		case 0:
			return self->x;
		case 1:
			return self->y;
		case 2:
			return self->z;		
		default:
			throw mio::IndexException("index to Point3 element out of range");
		}
	}
SWIGINTERN void mio_Point3___setitem__(mio::Point3 *self,int position,float value){
		switch(position)
		{
		case 0:
			self->x = value;
			break;
		case 1:
			self->y = value;
			break;
		case 2:
			self->z = value;
			break;		
		default:
			throw mio::IndexException("index to Vector3 element out of range");
		}
	}

#include <mio/ray.h>


#include <mio/box.h>


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


#include <mio/matrix4x4.h>

SWIGINTERN float mio_Matrix4x4___getitem__(mio::Matrix4x4 *self,PyObject *key){
		if (!PySequence_Check(key))
			throw mio::TypeException("key is not of sequence type");
		if (PySequence_Length(key) < 2)			
			throw mio::TypeException("key has fewer than 2 components");		
		
		PyObject *ii = PySequence_GetItem(key, 0);
		PyObject *jj = PySequence_GetItem(key, 1);
		
		if (!PyInt_Check(ii) || !PyInt_Check(jj))
		{
			Py_DECREF(ii);
			Py_DECREF(jj);
			throw mio::TypeException("one of the indices is not an integer");
		}
		
		long i = PyInt_AsLong(ii);
		long j = PyInt_AsLong(jj);
		
		Py_DECREF(ii);
		Py_DECREF(jj);
		
		if (i < 0 || i > 3 || j < 0 || j > 3)
			throw mio::IndexException("index to Matrix4x4 element out of range");
		else	
			return self->_get(i,j);		
	}
SWIGINTERN void mio_Matrix4x4___setitem__(mio::Matrix4x4 *self,PyObject *key,float value){
		if (!PySequence_Check(key))
			throw mio::TypeException("key is not of sequence type");
		if (PySequence_Length(key) < 2)			
			throw mio::TypeException("key has fewer than 2 components");		
		
		PyObject *ii = PySequence_GetItem(key, 0);
		PyObject *jj = PySequence_GetItem(key, 1);
		
		if (!PyInt_Check(ii) || !PyInt_Check(jj))
		{
			Py_DECREF(ii);
			Py_DECREF(jj);
			throw mio::TypeException("one of the indices is not an integer");
		}
		
		long i = PyInt_AsLong(ii);
		long j = PyInt_AsLong(jj);
		
		Py_DECREF(ii);
		Py_DECREF(jj);
		
		if (i < 0 || i > 3 || j < 0 || j > 3)
			throw mio::IndexException("index to Matrix4x4 element out of range");
		else					
			self->_set(i,j,value);
	}

#include <mio/transform.h>


#include <mio/quaternion.h>


#include <mio/rgb.h>

SWIGINTERN float mio_Rgb___getitem__(mio::Rgb *self,int position){
		switch(position)
		{
		case 0:
			return self->r;
		case 1:
			return self->g;
		case 2:
			return self->b;		
		default:
			throw mio::IndexException("index to Rgb element out of range");
		}
	}
SWIGINTERN void mio_Rgb___setitem__(mio::Rgb *self,int position,float value){
		switch(position)
		{
		case 0:
			self->r = value;
			break;
		case 1:
			self->g = value;
			break;
		case 2:
			self->b = value;
			break;		
		default:
			throw mio::IndexException("index to Rgb element out of range");
		}
	}

#include <mio/rgba.h>

SWIGINTERN float mio_Rgba___getitem__(mio::Rgba *self,int position){
		switch(position)
		{
		case 0:
			return self->r;
		case 1:
			return self->g;
		case 2:
			return self->b;
		case 3:
			return self->a;
		default:
			throw mio::IndexException("index to Rgba element out of range");
		}
	}
SWIGINTERN void mio_Rgba___setitem__(mio::Rgba *self,int position,float value){
		switch(position)
		{
		case 0:
			self->r = value;
			break;
		case 1:
			self->g = value;
			break;
		case 2:
			self->b = value;
			break;	
		case 3:
			self->a = value;
			break;
		default:
			throw mio::IndexException("index to Rgba element out of range");
		}
	}

#include <mio/int3.h>

SWIGINTERN int mio_Int3___getitem__(mio::Int3 *self,int position){
		if (position < 0 || position > 2)
			throw mio::IndexException("index to Int3 out of range");
		else
			return self->_get(position);
	}
SWIGINTERN void mio_Int3___setitem__(mio::Int3 *self,int position,int value){
		if (position < 0 || position > 2)
			throw mio::IndexException("index to Int3 out of range");
		else
			return self->_set(position, value);
	}

#include <mio/uv.h>


#include <mio/reference_counted.h>


#include <mio/mio_object.h>


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< int >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


#include <mio/geometry/mesh.h>


#include <mio/geometry/indexed_mesh.h>


#include <mio/gl/gl_texture.h>


#include <mio/il/il_image.h>


#include <mio/il/il_image_service.h>


#include <mio/texture/texture.h>


#include <mio/texture/texture_mapping.h>


#include <mio/texture/indexed_texture_mapping.h>


#include <mio/texture/il_texture.h>


#include <mio/texture/lazy_il_texture.h>


#include <mio/material/material.h>


#include <mio/material/material_list.h>


#include <mio/material/material_mapping.h>


#include <mio/material/mqo_material.h>


#include <mio/material/phong_material.h>


#include <mio/material/textured_mqo_material.h>


#include <mio/material/textured_phong_material.h>


#include <mio/material/by_polygon_material_mapping.h>


#include <mio/rigging/joint_change.h>


#include <mio/rigging/joint.h>


#include <mio/rigging/pose.h>


#include <mio/rigging/armature.h>


#include <mio/ik/ik_joint_parameters.h>


#include <mio/ik/ik_end_effector.h>


#include <mio/ik/ik_joint.h>


#include <mio/ik/ik_end_effector_goals.h>


#include <mio/ik/ik_pose.h>


#include <mio/ik/ik_armature.h>


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


#include <mio/skinning/joint_weight_mapping.h>


#include <mio/skinning/indexed_joint_weight_mapping.h>


#include <mio/curve/curve.h>


#include <mio/curve/polyline.h>


#include <mio/rigging/pose_animation.h>


#include <mio/scenegraph/node.h>


#include <mio/scenegraph/transform_node.h>


#include <mio/scenegraph/group.h>


#include <mio/scenegraph/simple_primitive.h>


#include <mio/scenegraph/rigged_primitive.h>


#include <mio/geometry/mesh_visitor.h>


#include <mio/material/material_visitor.h>


#include <mio/material/material_mapping_visitor.h>


#include <mio/texture/texture_visitor.h>


#include <mio/texture/texture_mapping_visitor.h>


#include <mio/scenegraph/node_visitor.h>


#include <mio/visitor/omni_visitor.h>


#include <mio/gl/gl_renderer.h>



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "cmio_wrap.h"

SwigDirector_MeshVisitor::SwigDirector_MeshVisitor(PyObject *self): mio::geometry::MeshVisitor(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mio::geometry::MeshVisitor *)this, this); 
}




SwigDirector_MeshVisitor::~SwigDirector_MeshVisitor() {
}

void SwigDirector_MeshVisitor::visit_IndexedMesh(mio::geometry::IndexedMesh *mesh) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mesh), SWIGTYPE_p_mio__geometry__IndexedMesh,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MeshVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "visit_IndexedMesh";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_IndexedMesh");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'MeshVisitor.visit_IndexedMesh'");
    }
  }
}


SwigDirector_MaterialVisitor::SwigDirector_MaterialVisitor(PyObject *self): mio::material::MaterialVisitor(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mio::material::MaterialVisitor *)this, this); 
}




SwigDirector_MaterialVisitor::~SwigDirector_MaterialVisitor() {
}

void SwigDirector_MaterialVisitor::visit_PhongMaterial(mio::material::PhongMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__PhongMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaterialVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "visit_PhongMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_PhongMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'MaterialVisitor.visit_PhongMaterial'");
    }
  }
}


void SwigDirector_MaterialVisitor::visit_TexturedPhongMaterial(mio::material::TexturedPhongMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__TexturedPhongMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaterialVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "visit_TexturedPhongMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_TexturedPhongMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'MaterialVisitor.visit_TexturedPhongMaterial'");
    }
  }
}


void SwigDirector_MaterialVisitor::visit_MqoMaterial(mio::material::MqoMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__MqoMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaterialVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "visit_MqoMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_MqoMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'MaterialVisitor.visit_MqoMaterial'");
    }
  }
}


void SwigDirector_MaterialVisitor::visit_TexturedMqoMaterial(mio::material::TexturedMqoMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__TexturedMqoMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaterialVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "visit_TexturedMqoMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_TexturedMqoMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'MaterialVisitor.visit_TexturedMqoMaterial'");
    }
  }
}


SwigDirector_MaterialMappingVisitor::SwigDirector_MaterialMappingVisitor(PyObject *self): mio::material::MaterialMappingVisitor(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mio::material::MaterialMappingVisitor *)this, this); 
}




SwigDirector_MaterialMappingVisitor::~SwigDirector_MaterialMappingVisitor() {
}

void SwigDirector_MaterialMappingVisitor::visit_ByPolygonMaterialMapping(mio::material::MaterialMapping *mapping) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mapping), SWIGTYPE_p_mio__material__MaterialMapping,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaterialMappingVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "visit_ByPolygonMaterialMapping";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_ByPolygonMaterialMapping");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'MaterialMappingVisitor.visit_ByPolygonMaterialMapping'");
    }
  }
}


SwigDirector_TextureVisitor::SwigDirector_TextureVisitor(PyObject *self): mio::texture::TextureVisitor(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mio::texture::TextureVisitor *)this, this); 
}




SwigDirector_TextureVisitor::~SwigDirector_TextureVisitor() {
}

void SwigDirector_TextureVisitor::visit_ILTexture(mio::texture::ILTexture *texture) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(texture), SWIGTYPE_p_mio__texture__ILTexture,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TextureVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "visit_ILTexture";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_ILTexture");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'TextureVisitor.visit_ILTexture'");
    }
  }
}


void SwigDirector_TextureVisitor::visit_LazyILTexture(mio::texture::LazyILTexture *texture) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(texture), SWIGTYPE_p_mio__texture__LazyILTexture,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TextureVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "visit_LazyILTexture";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_LazyILTexture");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'TextureVisitor.visit_LazyILTexture'");
    }
  }
}


SwigDirector_TextureMappingVisitor::SwigDirector_TextureMappingVisitor(PyObject *self): mio::texture::TextureMappingVisitor(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mio::texture::TextureMappingVisitor *)this, this); 
}




SwigDirector_TextureMappingVisitor::~SwigDirector_TextureMappingVisitor() {
}

void SwigDirector_TextureMappingVisitor::visit_IndexedTextureMapping(mio::texture::IndexedTextureMapping *mapping) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mapping), SWIGTYPE_p_mio__texture__IndexedTextureMapping,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TextureMappingVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "visit_IndexedTextureMapping";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_IndexedTextureMapping");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'TextureMappingVisitor.visit_IndexedTextureMapping'");
    }
  }
}


SwigDirector_OmniVisitor::SwigDirector_OmniVisitor(PyObject *self): mio::visitor::OmniVisitor(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mio::visitor::OmniVisitor *)this, this); 
}




SwigDirector_OmniVisitor::~SwigDirector_OmniVisitor() {
}

void SwigDirector_OmniVisitor::visit_SimplePrimitive(mio::scenegraph::SimplePrimitive *primitive) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(primitive), SWIGTYPE_p_mio__scenegraph__SimplePrimitive,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "visit_SimplePrimitive";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_SimplePrimitive");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_SimplePrimitive'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_Group(mio::scenegraph::Group *group) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(group), SWIGTYPE_p_mio__scenegraph__Group,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "visit_Group";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_Group");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_Group'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_TransformNode(mio::scenegraph::TransformNode *transformNode) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(transformNode), SWIGTYPE_p_mio__scenegraph__TransformNode,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "visit_TransformNode";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_TransformNode");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_TransformNode'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_RiggedPrimitive(mio::scenegraph::RiggedPrimitive *primitive) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(primitive), SWIGTYPE_p_mio__scenegraph__RiggedPrimitive,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "visit_RiggedPrimitive";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_RiggedPrimitive");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_RiggedPrimitive'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_PhongMaterial(mio::material::PhongMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__PhongMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "visit_PhongMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_PhongMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_PhongMaterial'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_TexturedPhongMaterial(mio::material::TexturedPhongMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__TexturedPhongMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "visit_TexturedPhongMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_TexturedPhongMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_TexturedPhongMaterial'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_MqoMaterial(mio::material::MqoMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__MqoMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "visit_MqoMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_MqoMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_MqoMaterial'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_TexturedMqoMaterial(mio::material::TexturedMqoMaterial *material) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(material), SWIGTYPE_p_mio__material__TexturedMqoMaterial,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "visit_TexturedMqoMaterial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_TexturedMqoMaterial");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_TexturedMqoMaterial'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_ByPolygonMaterialMapping(mio::material::MaterialMapping *mapping) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mapping), SWIGTYPE_p_mio__material__MaterialMapping,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "visit_ByPolygonMaterialMapping";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_ByPolygonMaterialMapping");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_ByPolygonMaterialMapping'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_ILTexture(mio::texture::ILTexture *texture) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(texture), SWIGTYPE_p_mio__texture__ILTexture,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "visit_ILTexture";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_ILTexture");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_ILTexture'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_LazyILTexture(mio::texture::LazyILTexture *texture) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(texture), SWIGTYPE_p_mio__texture__LazyILTexture,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "visit_LazyILTexture";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_LazyILTexture");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_LazyILTexture'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_IndexedTextureMapping(mio::texture::IndexedTextureMapping *mapping) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mapping), SWIGTYPE_p_mio__texture__IndexedTextureMapping,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "visit_IndexedTextureMapping";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_IndexedTextureMapping");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_IndexedTextureMapping'");
    }
  }
}


void SwigDirector_OmniVisitor::visit_IndexedMesh(mio::geometry::IndexedMesh *mesh) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mesh), SWIGTYPE_p_mio__geometry__IndexedMesh,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call OmniVisitor.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "visit_IndexedMesh";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar((char *)"visit_IndexedMesh");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'OmniVisitor.visit_IndexedMesh'");
    }
  }
}


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_Vector3_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_x_set" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_x_get" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_y_set" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_y_get" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_z_set" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_z_get" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Vector3 *)new mio::Vector3();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = (mio::Vector3 *)new mio::Vector3(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Vector3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Vector3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (mio::Vector3 *)new mio::Vector3(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Vector3" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vector3" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  {
    try 
    {
      result = (mio::Vector3 *)new mio::Vector3((mio::Point3 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vector3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Vector3__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector3__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Vector3__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Vector3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Vector3::Vector3()\n"
    "    mio::Vector3::Vector3(float)\n"
    "    mio::Vector3::Vector3(float,float,float)\n"
    "    mio::Vector3::Vector3(mio::Point3 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Vector3___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___add__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3___add__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3___add__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->operator +((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___iadd__" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3___iadd__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3___iadd__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::Vector3 *) &(arg1)->operator +=((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___sub__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3___sub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3___sub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->operator -((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___isub__" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3___isub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3___isub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::Vector3 *) &(arg1)->operator -=((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___eq__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3___eq__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3___eq__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Vector3 const *)arg1)->operator ==((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___mul__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->operator *(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___imul__" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::Vector3 *) &(arg1)->operator *=(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___div__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->operator /(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___idiv__" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::Vector3 *) &(arg1)->operator /=(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___neg__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___neg__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->operator -();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___ne__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3___ne__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3___ne__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Vector3 const *)arg1)->operator !=((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_fill_array_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_fill_array_3",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_fill_array_3" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3_fill_array_3" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      (arg1)->fill_array_3(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_fill_array_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_fill_array_4",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_fill_array_4" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3_fill_array_4" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      (arg1)->fill_array_4(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_length_squared(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_length_squared",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_length_squared" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = (float)((mio::Vector3 const *)arg1)->length_squared();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_length" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = (float)((mio::Vector3 const *)arg1)->length();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___copy__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___deepcopy__" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = ((mio::Vector3 const *)arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_is_near" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3_is_near" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3_is_near" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Vector3_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)((mio::Vector3 const *)arg1)->is_near((mio::Vector3 const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3_is_near" "', argument " "1"" of type '" "mio::Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vector3_is_near" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vector3_is_near" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Vector3 const *)arg1)->is_near((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vector3_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Vector3_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Vector3_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Vector3::is_near(mio::Vector3 const &,float) const\n"
    "    mio::Vector3::is_near(mio::Vector3 const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Vector3___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___getitem__" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)mio_Vector3___getitem__(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Vector3___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3___setitem__" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Vector3___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      mio_Vector3___setitem__(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector3" "', argument " "1"" of type '" "mio::Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Vector3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___lshift____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"__lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (std::ostream *) &mio::operator <<(*arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Vector3 *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"__mul__",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__mul__" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = mio::operator *(arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"dot",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dot" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dot" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dot" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dot" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (float)mio::dot((mio::Vector3 const &)*arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_absdot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"absdot",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "absdot" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "absdot" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "absdot" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "absdot" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (float)mio::absdot((mio::Vector3 const &)*arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cross(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"cross",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cross" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cross" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cross" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cross" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = mio::cross((mio::Vector3 const &)*arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_normalize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"normalize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "normalize" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "normalize" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = mio::normalize((mio::Vector3 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_coordinate_system(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  mio::Vector3 *arg2 = (mio::Vector3 *) 0 ;
  mio::Vector3 *arg3 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"coordinate_system",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "coordinate_system" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "coordinate_system" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "coordinate_system" "', argument " "2"" of type '" "mio::Vector3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "coordinate_system" "', argument " "3"" of type '" "mio::Vector3 *""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  {
    try 
    {
      mio::coordinate_system((mio::Vector3 const &)*arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_spherical_direction__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"spherical_direction",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "spherical_direction" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "spherical_direction" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "spherical_direction" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = mio::spherical_direction(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_spherical_direction__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  mio::Vector3 *arg4 = 0 ;
  mio::Vector3 *arg5 = 0 ;
  mio::Vector3 *arg6 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"spherical_direction",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "spherical_direction" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "spherical_direction" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "spherical_direction" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "spherical_direction" "', argument " "4"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "spherical_direction" "', argument " "4"" of type '" "mio::Vector3 const &""'"); 
  }
  arg4 = reinterpret_cast< mio::Vector3 * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "spherical_direction" "', argument " "5"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "spherical_direction" "', argument " "5"" of type '" "mio::Vector3 const &""'"); 
  }
  arg5 = reinterpret_cast< mio::Vector3 * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "spherical_direction" "', argument " "6"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "spherical_direction" "', argument " "6"" of type '" "mio::Vector3 const &""'"); 
  }
  arg6 = reinterpret_cast< mio::Vector3 * >(argp6);
  {
    try 
    {
      result = mio::spherical_direction(arg1,arg2,arg3,(mio::Vector3 const &)*arg4,(mio::Vector3 const &)*arg5,(mio::Vector3 const &)*arg6);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_spherical_direction(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_spherical_direction__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Vector3, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_mio__Vector3, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_mio__Vector3, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_spherical_direction__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'spherical_direction'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::spherical_direction(float,float,float)\n"
    "    mio::spherical_direction(float,float,float,mio::Vector3 const &,mio::Vector3 const &,mio::Vector3 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_spherical_theta(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"spherical_theta",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "spherical_theta" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "spherical_theta" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = (float)mio::spherical_theta((mio::Vector3 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_spherical_phi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"spherical_phi",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "spherical_phi" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "spherical_phi" "', argument " "1"" of type '" "mio::Vector3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Vector3 * >(argp1);
  {
    try 
    {
      result = (float)mio::spherical_phi((mio::Vector3 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_x_set" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_x_get" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_y_set" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_y_get" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_z_set" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_z_get" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Point3",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Point3 *)new mio::Point3();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Point3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Point3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = (mio::Point3 *)new mio::Point3(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point3__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Point3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Point3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Point3" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Point3" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (mio::Point3 *)new mio::Point3(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Point3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Point3__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Point3__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Point3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Point3::Point3()\n"
    "    mio::Point3::Point3(float)\n"
    "    mio::Point3::Point3(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Point3___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___add__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___add__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___add__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->operator +((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___iadd__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___iadd__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___iadd__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::Point3 *) &(arg1)->operator +=((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___sub__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___sub__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___sub__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->operator -((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___sub__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___sub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___sub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->operator -((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Point3___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___isub__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___isub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___isub__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::Point3 *) &(arg1)->operator -=((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___iadd__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___iadd__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___iadd__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (mio::Point3 *) &(arg1)->operator +=((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Point3___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Point3::operator +=(mio::Vector3 const &)\n"
    "    mio::Point3::operator +=(mio::Point3 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Point3___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___add__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___add__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___add__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->operator +((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Point3___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___mul__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->operator *(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___imul__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::Point3 *) &(arg1)->operator *=(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___div__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->operator /(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___idiv__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___idiv__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::Point3 *) &(arg1)->operator /=(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___eq__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___eq__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___eq__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Point3 const *)arg1)->operator ==((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___ne__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3___ne__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3___ne__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Point3 const *)arg1)->operator !=((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_fill_array_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_fill_array_3",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_fill_array_3" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3_fill_array_3" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      (arg1)->fill_array_3(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_fill_array_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_fill_array_4",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_fill_array_4" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3_fill_array_4" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      (arg1)->fill_array_4(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___copy__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___deepcopy__" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  {
    try 
    {
      result = ((mio::Point3 const *)arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_is_near" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3_is_near" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3_is_near" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Point3_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)((mio::Point3 const *)arg1)->is_near((mio::Point3 const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3_is_near" "', argument " "1"" of type '" "mio::Point3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point3_is_near" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point3_is_near" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Point3 const *)arg1)->is_near((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Point3_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Point3_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Point3_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Point3::is_near(mio::Point3 const &,float) const\n"
    "    mio::Point3::is_near(mio::Point3 const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Point3___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___getitem__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)mio_Point3___getitem__(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point3___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Point3___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point3___setitem__" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point3___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Point3___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      mio_Point3___setitem__(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Point3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Point3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Point3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Point3" "', argument " "1"" of type '" "mio::Point3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Point3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Point3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"distance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "distance" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "distance" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "distance" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "distance" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (float)mio::distance((mio::Point3 const &)*arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_distance_squared(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"distance_squared",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "distance_squared" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "distance_squared" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "distance_squared" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "distance_squared" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (float)mio::distance_squared((mio::Point3 const &)*arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___lshift____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ostream *arg1 = 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ostream *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"__lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "ostream &""'"); 
  }
  arg1 = reinterpret_cast< ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (ostream *) &mio::operator <<(*arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Point3 *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"__mul__",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__mul__" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = mio::operator *(arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Ray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Ray",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Ray *)new mio::Ray();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Ray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Ray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Ray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Ray",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Ray" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Ray" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Ray" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Ray" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::Ray *)new mio::Ray((mio::Point3 const &)*arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Ray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Ray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Ray__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Ray__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Ray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Ray::Ray()\n"
    "    mio::Ray::Ray(mio::Point3 const &,mio::Vector3 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Ray___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *arg1 = (mio::Ray *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Ray___call__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Ray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Ray___call__" "', argument " "1"" of type '" "mio::Ray const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Ray * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Ray___call__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Ray const *)arg1)->operator ()(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Ray_origin_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *arg1 = (mio::Ray *) 0 ;
  mio::Point3 *arg2 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Ray_origin_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Ray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Ray_origin_set" "', argument " "1"" of type '" "mio::Ray *""'"); 
  }
  arg1 = reinterpret_cast< mio::Ray * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Ray_origin_set" "', argument " "2"" of type '" "mio::Point3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  if (arg1) (arg1)->origin = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Ray_origin_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *arg1 = (mio::Ray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Ray_origin_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Ray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Ray_origin_get" "', argument " "1"" of type '" "mio::Ray *""'"); 
  }
  arg1 = reinterpret_cast< mio::Ray * >(argp1);
  result = (mio::Point3 *)& ((arg1)->origin);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Ray_direction_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *arg1 = (mio::Ray *) 0 ;
  mio::Vector3 *arg2 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Ray_direction_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Ray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Ray_direction_set" "', argument " "1"" of type '" "mio::Ray *""'"); 
  }
  arg1 = reinterpret_cast< mio::Ray * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Ray_direction_set" "', argument " "2"" of type '" "mio::Vector3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  if (arg1) (arg1)->direction = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Ray_direction_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *arg1 = (mio::Ray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Ray_direction_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Ray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Ray_direction_get" "', argument " "1"" of type '" "mio::Ray *""'"); 
  }
  arg1 = reinterpret_cast< mio::Ray * >(argp1);
  result = (mio::Vector3 *)& ((arg1)->direction);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Ray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Ray *arg1 = (mio::Ray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Ray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Ray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Ray" "', argument " "1"" of type '" "mio::Ray *""'"); 
  }
  arg1 = reinterpret_cast< mio::Ray * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Ray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Ray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___lshift____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  mio::Ray *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"__lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Ray,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Ray &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Ray &""'"); 
  }
  arg2 = reinterpret_cast< mio::Ray * >(argp2);
  {
    try 
    {
      result = (std::ostream *) &mio::operator <<(*arg1,*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Box__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Box",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Box *)new mio::Box();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Box, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Box__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Box *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Box",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Box" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Box" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  {
    try 
    {
      result = (mio::Box *)new mio::Box((mio::Point3 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Box, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Box__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 *arg1 = 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Box *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Box",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Box" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Box" "', argument " "1"" of type '" "mio::Point3 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Point3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Box" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Box" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (mio::Box *)new mio::Box((mio::Point3 const &)*arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Box, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Box(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Box__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Box__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Point3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Box__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Box'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Box::Box()\n"
    "    mio::Box::Box(mio::Point3 const &)\n"
    "    mio::Box::Box(mio::Point3 const &,mio::Point3 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Box_overlaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Box *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_overlaps",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_overlaps" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Box,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_overlaps" "', argument " "2"" of type '" "mio::Box const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Box_overlaps" "', argument " "2"" of type '" "mio::Box const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Box * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Box const *)arg1)->overlaps((mio::Box const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_inside(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_inside",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_inside" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_inside" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Box_inside" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Box const *)arg1)->inside((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_expand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_expand",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_expand" "', argument " "1"" of type '" "mio::Box *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Box_expand" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      (arg1)->expand(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_volume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_volume",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_volume" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  {
    try 
    {
      result = (float)((mio::Box const *)arg1)->volume();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_surface_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_surface_area",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_surface_area" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  {
    try 
    {
      result = (float)((mio::Box const *)arg1)->surface_area();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_diameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_diameter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_diameter" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  {
    try 
    {
      result = (float)((mio::Box const *)arg1)->diameter();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_centroid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_centroid",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_centroid" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  {
    try 
    {
      result = ((mio::Box const *)arg1)->centroid();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_maximum_extent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_maximum_extent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_maximum_extent" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  {
    try 
    {
      result = (int)((mio::Box const *)arg1)->maximum_extent();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_bounding_sphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Point3 *arg2 = (mio::Point3 *) 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_bounding_sphere",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_bounding_sphere" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_bounding_sphere" "', argument " "2"" of type '" "mio::Point3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Box_bounding_sphere" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try 
    {
      ((mio::Box const *)arg1)->bounding_sphere(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_intersect_predicate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Ray *arg2 = 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_intersect_predicate",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_intersect_predicate" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Ray,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_intersect_predicate" "', argument " "2"" of type '" "mio::Ray const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Box_intersect_predicate" "', argument " "2"" of type '" "mio::Ray const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Ray * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Box_intersect_predicate" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Box_intersect_predicate" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try 
    {
      result = (bool)((mio::Box const *)arg1)->intersect_predicate((mio::Ray const &)*arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_intersect_predicate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Ray *arg2 = 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_intersect_predicate",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_intersect_predicate" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Ray,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_intersect_predicate" "', argument " "2"" of type '" "mio::Ray const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Box_intersect_predicate" "', argument " "2"" of type '" "mio::Ray const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Ray * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Box_intersect_predicate" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  {
    try 
    {
      result = (bool)((mio::Box const *)arg1)->intersect_predicate((mio::Ray const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_intersect_predicate__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Ray *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_intersect_predicate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_intersect_predicate" "', argument " "1"" of type '" "mio::Box const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Ray,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_intersect_predicate" "', argument " "2"" of type '" "mio::Ray const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Box_intersect_predicate" "', argument " "2"" of type '" "mio::Ray const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Ray * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Box const *)arg1)->intersect_predicate((mio::Ray const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_intersect_predicate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Box, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Ray, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Box_intersect_predicate__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Box, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Ray, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Box_intersect_predicate__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Box, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Ray, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Box_intersect_predicate__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Box_intersect_predicate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Box::intersect_predicate(mio::Ray const &,float *,float *) const\n"
    "    mio::Box::intersect_predicate(mio::Ray const &,float *) const\n"
    "    mio::Box::intersect_predicate(mio::Ray const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Box_min_point_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Point3 *arg2 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_min_point_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_min_point_set" "', argument " "1"" of type '" "mio::Box *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_min_point_set" "', argument " "2"" of type '" "mio::Point3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  if (arg1) (arg1)->min_point = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_min_point_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_min_point_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_min_point_get" "', argument " "1"" of type '" "mio::Box *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  result = (mio::Point3 *)& ((arg1)->min_point);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_max_point_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  mio::Point3 *arg2 = (mio::Point3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_max_point_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_max_point_set" "', argument " "1"" of type '" "mio::Box *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Point3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Box_max_point_set" "', argument " "2"" of type '" "mio::Point3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  if (arg1) (arg1)->max_point = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Box_max_point_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Box_max_point_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Box_max_point_get" "', argument " "1"" of type '" "mio::Box *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  result = (mio::Point3 *)& ((arg1)->max_point);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Point3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Box(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = (mio::Box *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Box",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Box, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Box" "', argument " "1"" of type '" "mio::Box *""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Box_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Box, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_union___SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Box result;
  
  if(!PyArg_UnpackTuple(args,(char *)"union_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Box,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "union_" "', argument " "1"" of type '" "mio::Box const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "union_" "', argument " "1"" of type '" "mio::Box const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "union_" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "union_" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = mio::union_((mio::Box const &)*arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Box(static_cast< const mio::Box& >(result))), SWIGTYPE_p_mio__Box, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_union___SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Box *arg1 = 0 ;
  mio::Box *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Box result;
  
  if(!PyArg_UnpackTuple(args,(char *)"union_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Box,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "union_" "', argument " "1"" of type '" "mio::Box const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "union_" "', argument " "1"" of type '" "mio::Box const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Box * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Box,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "union_" "', argument " "2"" of type '" "mio::Box const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "union_" "', argument " "2"" of type '" "mio::Box const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Box * >(argp2);
  {
    try 
    {
      result = mio::union_((mio::Box const &)*arg1,(mio::Box const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Box(static_cast< const mio::Box& >(result))), SWIGTYPE_p_mio__Box, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_union_(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Box, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_union___SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Box, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Box, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_union___SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'union_'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::union_(mio::Box const &,mio::Point3 const &)\n"
    "    mio::union_(mio::Box const &,mio::Box const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap___lshift____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  mio::Box *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"__lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Box,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Box const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "mio::Box const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Box * >(argp2);
  {
    try 
    {
      result = (std::ostream *) &mio::operator <<(*arg1,(mio::Box const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___lshift__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___lshift____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___lshift____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__Ray, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___lshift____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Box, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___lshift____SWIG_3(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_new_Matrix4x4__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Matrix4x4",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Matrix4x4 *)new mio::Matrix4x4();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Matrix4x4__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Matrix4x4",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Matrix4x4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = (mio::Matrix4x4 *)new mio::Matrix4x4(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Matrix4x4__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float (*arg1)[4] ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Matrix4x4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_a_4__float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Matrix4x4" "', argument " "1"" of type '" "float [4][4]""'"); 
  } 
  arg1 = reinterpret_cast< float (*)[4] >(argp1);
  {
    try 
    {
      result = (mio::Matrix4x4 *)new mio::Matrix4x4((float (*)[4])arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Matrix4x4__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  float arg15 ;
  float arg16 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  float val15 ;
  int ecode15 = 0 ;
  float val16 ;
  int ecode16 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  PyObject * obj13 = 0 ;
  PyObject * obj14 = 0 ;
  PyObject * obj15 = 0 ;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Matrix4x4",16,16,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13,&obj14,&obj15)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Matrix4x4" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Matrix4x4" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Matrix4x4" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Matrix4x4" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Matrix4x4" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Matrix4x4" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Matrix4x4" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Matrix4x4" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Matrix4x4" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Matrix4x4" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Matrix4x4" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_Matrix4x4" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(obj12, &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "new_Matrix4x4" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(obj13, &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_Matrix4x4" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  ecode15 = SWIG_AsVal_float(obj14, &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "new_Matrix4x4" "', argument " "15"" of type '" "float""'");
  } 
  arg15 = static_cast< float >(val15);
  ecode16 = SWIG_AsVal_float(obj15, &val16);
  if (!SWIG_IsOK(ecode16)) {
    SWIG_exception_fail(SWIG_ArgError(ecode16), "in method '" "new_Matrix4x4" "', argument " "16"" of type '" "float""'");
  } 
  arg16 = static_cast< float >(val16);
  {
    try 
    {
      result = (mio::Matrix4x4 *)new mio::Matrix4x4(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Matrix4x4(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[17];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 16) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Matrix4x4__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_a_4__float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Matrix4x4__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Matrix4x4__SWIG_1(self, args);
    }
  }
  if (argc == 16) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      {
                        int res = SWIG_AsVal_float(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_float(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_float(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            {
                              int res = SWIG_AsVal_float(argv[12], NULL);
                              _v = SWIG_CheckState(res);
                            }
                            if (_v) {
                              {
                                int res = SWIG_AsVal_float(argv[13], NULL);
                                _v = SWIG_CheckState(res);
                              }
                              if (_v) {
                                {
                                  int res = SWIG_AsVal_float(argv[14], NULL);
                                  _v = SWIG_CheckState(res);
                                }
                                if (_v) {
                                  {
                                    int res = SWIG_AsVal_float(argv[15], NULL);
                                    _v = SWIG_CheckState(res);
                                  }
                                  if (_v) {
                                    return _wrap_new_Matrix4x4__SWIG_3(self, args);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Matrix4x4'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Matrix4x4::Matrix4x4()\n"
    "    mio::Matrix4x4::Matrix4x4(float)\n"
    "    mio::Matrix4x4::Matrix4x4(float [4][4])\n"
    "    mio::Matrix4x4::Matrix4x4(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Matrix4x4__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4__get",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4__get" "', argument " "1"" of type '" "mio::Matrix4x4 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Matrix4x4__get" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Matrix4x4__get" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (float)((mio::Matrix4x4 const *)arg1)->_get(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4__set",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4__set" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Matrix4x4__set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Matrix4x4__set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Matrix4x4__set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      (arg1)->_set(arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___mul__" "', argument " "1"" of type '" "mio::Matrix4x4 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4___mul__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4___mul__" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = ((mio::Matrix4x4 const *)arg1)->operator *((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___mul__" "', argument " "1"" of type '" "mio::Matrix4x4 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4___mul__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4___mul__" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::Matrix4x4 const *)arg1)->operator *((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  mio::Matrix4x4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___mul__" "', argument " "1"" of type '" "mio::Matrix4x4 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4___mul__" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4___mul__" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  {
    try 
    {
      result = ((mio::Matrix4x4 const *)arg1)->operator *((mio::Matrix4x4 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Matrix4x4___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Matrix4x4___mul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Matrix4x4___mul____SWIG_2(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_get_column_major_array(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_get_column_major_array",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4_get_column_major_array" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4_get_column_major_array" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      (arg1)->get_column_major_array(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___copy__" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      result = (arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___deepcopy__" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      result = (arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  mio::Matrix4x4 *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4_is_near" "', argument " "1"" of type '" "mio::Matrix4x4 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4_is_near" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4_is_near" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Matrix4x4_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)((mio::Matrix4x4 const *)arg1)->is_near((mio::Matrix4x4 const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  mio::Matrix4x4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4_is_near" "', argument " "1"" of type '" "mio::Matrix4x4 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4_is_near" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4_is_near" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Matrix4x4 const *)arg1)->is_near((mio::Matrix4x4 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Matrix4x4_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Matrix4x4_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Matrix4x4_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Matrix4x4::is_near(mio::Matrix4x4 const &,float) const\n"
    "    mio::Matrix4x4::is_near(mio::Matrix4x4 const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_identity",0,0)) SWIG_fail;
  {
    try 
    {
      result = mio::Matrix4x4::identity();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_translate",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_translate" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Matrix4x4_translate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Matrix4x4_translate" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = mio::Matrix4x4::translate(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_translate_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_translate_x",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_translate_x" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::translate_x(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_translate_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_translate_y",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_translate_y" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::translate_y(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_translate_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_translate_z",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_translate_z" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::translate_z(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_scale__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_scale",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_scale" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Matrix4x4_scale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Matrix4x4_scale" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = mio::Matrix4x4::scale(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_scale__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_scale",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_scale" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::scale(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_scale(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Matrix4x4_scale__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Matrix4x4_scale__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Matrix4x4_scale'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Matrix4x4::scale(float,float,float)\n"
    "    mio::Matrix4x4::scale(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_scale_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_scale_x",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_scale_x" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::scale_x(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_scale_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_scale_y",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_scale_y" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::scale_y(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_scale_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_scale_z",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_scale_z" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::scale_z(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Vector3 arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_rotate",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_rotate" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4_rotate" "', argument " "2"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4_rotate" "', argument " "2"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = mio::Matrix4x4::rotate(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_rotate_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_rotate_x",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_rotate_x" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::rotate_x(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_rotate_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_rotate_y",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_rotate_y" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::rotate_y(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_rotate_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_rotate_z",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Matrix4x4_rotate_z" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Matrix4x4::rotate_z(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4_look_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Point3 arg1 ;
  mio::Point3 arg2 ;
  mio::Vector3 arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4_look_at",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Point3,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4_look_at" "', argument " "1"" of type '" "mio::Point3""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4_look_at" "', argument " "1"" of type '" "mio::Point3""'");
    } else {
      mio::Point3 * temp = reinterpret_cast< mio::Point3 * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Matrix4x4_look_at" "', argument " "2"" of type '" "mio::Point3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4_look_at" "', argument " "2"" of type '" "mio::Point3""'");
    } else {
      mio::Point3 * temp = reinterpret_cast< mio::Point3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Matrix4x4_look_at" "', argument " "3"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Matrix4x4_look_at" "', argument " "3"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try 
    {
      result = mio::Matrix4x4::look_at(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___getitem__" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  arg2 = obj1;
  {
    try 
    {
      result = (float)mio_Matrix4x4___getitem__(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Matrix4x4___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Matrix4x4___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Matrix4x4___setitem__" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  arg2 = obj1;
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Matrix4x4___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      mio_Matrix4x4___setitem__(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Matrix4x4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = (mio::Matrix4x4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Matrix4x4",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Matrix4x4" "', argument " "1"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Matrix4x4_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Matrix4x4, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"transpose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "transpose" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "transpose" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      result = mio::transpose((mio::Matrix4x4 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_inverse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"inverse",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "inverse" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "inverse" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      result = mio::inverse((mio::Matrix4x4 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_det(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"det",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "det" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "det" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      result = (float)mio::det((mio::Matrix4x4 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_m_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  mio::Matrix4x4 *arg2 = (mio::Matrix4x4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_m_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform_m_set" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Transform_m_set" "', argument " "2"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  if (arg1) (arg1)->m = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_m_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_m_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform_m_get" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  result = (mio::Matrix4x4 *)& ((arg1)->m);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_mi_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  mio::Matrix4x4 *arg2 = (mio::Matrix4x4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_mi_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform_mi_set" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Transform_mi_set" "', argument " "2"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  if (arg1) (arg1)->mi = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_mi_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_mi_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform_mi_get" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  result = (mio::Matrix4x4 *)& ((arg1)->mi);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_mit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  mio::Matrix4x4 *arg2 = (mio::Matrix4x4 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_mit_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform_mit_set" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Transform_mit_set" "', argument " "2"" of type '" "mio::Matrix4x4 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  if (arg1) (arg1)->mit = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_mit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_mit_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform_mit_get" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  result = (mio::Matrix4x4 *)& ((arg1)->mit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Matrix4x4, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Transform__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Transform",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Transform *)new mio::Transform();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Transform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Transform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = 0 ;
  mio::Matrix4x4 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Transform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Transform" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Transform" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Transform" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Transform" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  {
    try 
    {
      result = (mio::Transform *)new mio::Transform((mio::Matrix4x4 const &)*arg1,(mio::Matrix4x4 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Transform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Transform__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = 0 ;
  mio::Matrix4x4 *arg2 = 0 ;
  mio::Matrix4x4 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Transform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Transform",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Transform" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Transform" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Transform" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Transform" "', argument " "2"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Matrix4x4 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Transform" "', argument " "3"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Transform" "', argument " "3"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Matrix4x4 * >(argp3);
  {
    try 
    {
      result = (mio::Transform *)new mio::Transform((mio::Matrix4x4 const &)*arg1,(mio::Matrix4x4 const &)*arg2,(mio::Matrix4x4 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Transform, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Transform(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Transform__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Transform__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Transform__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Transform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Transform::Transform()\n"
    "    mio::Transform::Transform(mio::Matrix4x4 const &,mio::Matrix4x4 const &)\n"
    "    mio::Transform::Transform(mio::Matrix4x4 const &,mio::Matrix4x4 const &,mio::Matrix4x4 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Transform___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  mio::Transform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform___mul__" "', argument " "1"" of type '" "mio::Transform const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Transform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Transform___mul__" "', argument " "2"" of type '" "mio::Transform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Transform___mul__" "', argument " "2"" of type '" "mio::Transform const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Transform * >(argp2);
  {
    try 
    {
      result = ((mio::Transform const *)arg1)->operator *((mio::Transform const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  mio::Transform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Transform___imul__" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Transform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Transform___imul__" "', argument " "2"" of type '" "mio::Transform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Transform___imul__" "', argument " "2"" of type '" "mio::Transform const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Transform * >(argp2);
  {
    try 
    {
      result = (mio::Transform *) &(arg1)->operator *=((mio::Transform const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_identity",0,0)) SWIG_fail;
  {
    try 
    {
      result = mio::Transform::identity();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_translate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_translate",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_translate" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Transform_translate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Transform_translate" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = mio::Transform::translate(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_translate_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_translate_x",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_translate_x" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::translate_x(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_translate_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_translate_y",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_translate_y" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::translate_y(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_translate_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_translate_z",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_translate_z" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::translate_z(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_scale__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_scale",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_scale" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Transform_scale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Transform_scale" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = mio::Transform::scale(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_scale__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_scale",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_scale" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::scale(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_scale(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Transform_scale__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Transform_scale__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Transform_scale'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Transform::scale(float,float,float)\n"
    "    mio::Transform::scale(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Transform_scale_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_scale_x",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_scale_x" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::scale_x(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_scale_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_scale_y",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_scale_y" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::scale_y(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_scale_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_scale_z",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_scale_z" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::scale_z(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_rotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Vector3 arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_rotate",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_rotate" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Transform_rotate" "', argument " "2"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Transform_rotate" "', argument " "2"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = mio::Transform::rotate(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_rotate_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_rotate_x",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_rotate_x" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::rotate_x(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_rotate_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_rotate_y",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_rotate_y" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::rotate_y(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Transform_rotate_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Transform_rotate_z",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Transform_rotate_z" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = mio::Transform::rotate_z(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = (mio::Transform *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Transform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Transform, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Transform" "', argument " "1"" of type '" "mio::Transform *""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Transform_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Transform, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Quaternion_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_x_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_x_set" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quaternion_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_x_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_x_get" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_y_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_y_set" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quaternion_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_y_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_y_get" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_z_set" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quaternion_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_z_get" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_w_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_w_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_w_set" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quaternion_w_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->w = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_w_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_w_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_w_get" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  result = (float) ((arg1)->w);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quaternion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Quaternion",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Quaternion *)new mio::Quaternion();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quaternion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Quaternion",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Quaternion" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Quaternion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Quaternion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Quaternion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      result = (mio::Quaternion *)new mio::Quaternion(arg1,arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quaternion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Vector3 *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Quaternion",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Quaternion" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Quaternion" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Quaternion" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::Quaternion *)new mio::Quaternion(arg1,(mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quaternion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Matrix4x4 *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Matrix4x4,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Quaternion" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Quaternion" "', argument " "1"" of type '" "mio::Matrix4x4 const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Matrix4x4 * >(argp1);
  {
    try 
    {
      result = (mio::Quaternion *)new mio::Quaternion((mio::Matrix4x4 const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quaternion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Quaternion__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Quaternion__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Quaternion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_Quaternion__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Quaternion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Quaternion::Quaternion()\n"
    "    mio::Quaternion::Quaternion(float,float,float,float)\n"
    "    mio::Quaternion::Quaternion(float,mio::Vector3 const &)\n"
    "    mio::Quaternion::Quaternion(mio::Matrix4x4 const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Quaternion___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___add__" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion___add__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion___add__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->operator +((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___iadd__" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion___iadd__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion___iadd__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = (mio::Quaternion *) &(arg1)->operator +=((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___sub__" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion___sub__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion___sub__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->operator -((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___isub__" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion___isub__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion___isub__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = (mio::Quaternion *) &(arg1)->operator -=((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___mul__" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion___mul__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion___mul__" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->operator *((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___mul__" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quaternion___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->operator *(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Quaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Quaternion___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Quaternion___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Quaternion___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___imul__" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quaternion___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::Quaternion *) &(arg1)->operator *=(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_get_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_get_matrix",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_get_matrix" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->get_matrix();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___copy__" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion___deepcopy__" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_is_near" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion_is_near" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion_is_near" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Quaternion_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)((mio::Quaternion const *)arg1)->is_near((mio::Quaternion const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_is_near" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion_is_near" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion_is_near" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Quaternion const *)arg1)->is_near((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Quaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Quaternion_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Quaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Quaternion_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Quaternion_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Quaternion::is_near(mio::Quaternion const &,float) const\n"
    "    mio::Quaternion::is_near(mio::Quaternion const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Quaternion_rotate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_rotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_rotate" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion_rotate" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion_rotate" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->rotate((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_rotate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Quaternion_rotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quaternion_rotate" "', argument " "1"" of type '" "mio::Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quaternion_rotate" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quaternion_rotate" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = ((mio::Quaternion const *)arg1)->rotate((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quaternion_rotate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Quaternion_rotate__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Quaternion_rotate__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Quaternion_rotate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Quaternion::rotate(mio::Vector3 const &) const\n"
    "    mio::Quaternion::rotate(mio::Point3 const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Quaternion" "', argument " "1"" of type '" "mio::Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Quaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Quaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_conjugate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"conjugate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "conjugate" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "conjugate" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = mio::conjugate((mio::Quaternion const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_norm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"norm",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "norm" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "norm" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = (float)mio::norm((mio::Quaternion const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_norm_squared(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"norm_squared",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "norm_squared" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "norm_squared" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = (float)mio::norm_squared((mio::Quaternion const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_normalize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"normalize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "normalize" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "normalize" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = mio::normalize((mio::Quaternion const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_normalize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_normalize__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_normalize__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'normalize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::normalize(mio::Vector3 const &)\n"
    "    mio::normalize(mio::Quaternion const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_inverse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"inverse",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "inverse" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "inverse" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  {
    try 
    {
      result = mio::inverse((mio::Quaternion const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_inverse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Matrix4x4, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_inverse__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_inverse__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'inverse'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::inverse(mio::Matrix4x4 const &)\n"
    "    mio::inverse(mio::Quaternion const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"dot",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dot" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dot" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dot" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dot" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = (float)mio::dot((mio::Quaternion const &)*arg1,(mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dot(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dot__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Quaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dot__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'dot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::dot(mio::Vector3 const &,mio::Vector3 const &)\n"
    "    mio::dot(mio::Quaternion const &,mio::Quaternion const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_slerp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Quaternion *arg1 = 0 ;
  mio::Quaternion *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"slerp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "slerp" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "slerp" "', argument " "1"" of type '" "mio::Quaternion const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "slerp" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "slerp" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "slerp" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = mio::slerp((mio::Quaternion const &)*arg1,(mio::Quaternion const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_r_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_r_set" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb_r_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->r = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_r_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_r_get" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  result = (float) ((arg1)->r);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_g_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_g_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_g_set" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb_g_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->g = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_g_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_g_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_g_get" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  result = (float) ((arg1)->g);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_b_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_b_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_b_set" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb_b_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->b = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_b_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_b_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_b_get" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  result = (float) ((arg1)->b);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgb__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgb",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Rgb *)new mio::Rgb();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgb__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgb",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Rgb" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = (mio::Rgb *)new mio::Rgb(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgb__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Rgb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgb",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Rgb" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Rgb" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Rgb" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (mio::Rgb *)new mio::Rgb(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgb(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Rgb__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Rgb__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Rgb__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Rgb'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Rgb::Rgb()\n"
    "    mio::Rgb::Rgb(float)\n"
    "    mio::Rgb::Rgb(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rgb___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___add__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb___add__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb___add__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator +((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___sub__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb___sub__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb___sub__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator -((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___add__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb___add__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator +(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgb___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rgb___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rgb___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___iadd__" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb___iadd__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb___iadd__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = (mio::Rgb *) &(arg1)->operator +=((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___mul__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb___mul__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb___mul__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator *((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___mul__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator *(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgb___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rgb___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rgb___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___imul__" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb___imul__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb___imul__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = (mio::Rgb *) &(arg1)->operator *=((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___div__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb___div__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb___div__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator /((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___div__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->operator /(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgb___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rgb___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rgb___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___copy__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___deepcopy__" "', argument " "1"" of type '" "mio::Rgb const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  {
    try 
    {
      result = ((mio::Rgb const *)arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_is_near" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb_is_near" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb_is_near" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Rgb_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)(arg1)->is_near((mio::Rgb const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  mio::Rgb *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb_is_near" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgb_is_near" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgb_is_near" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = (bool)(arg1)->is_near((mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgb_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Rgb_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Rgb_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Rgb::is_near(mio::Rgb const &,float)\n"
    "    mio::Rgb::is_near(mio::Rgb const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rgb___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___getitem__" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)mio_Rgb___getitem__(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgb___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgb___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgb___setitem__" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgb___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Rgb___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      mio_Rgb___setitem__(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Rgb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgb *arg1 = (mio::Rgb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Rgb",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Rgb" "', argument " "1"" of type '" "mio::Rgb *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgb * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Rgb_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Rgb, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Rgb *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"__add__",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__add__" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__add__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__add__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = mio::operator +(arg1,(mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Rgb *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgb result;
  
  if(!PyArg_UnpackTuple(args,(char *)"__mul__",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__mul__" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgb,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "mio::Rgb const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgb * >(argp2);
  {
    try 
    {
      result = mio::operator *(arg1,(mio::Rgb const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgb(static_cast< const mio::Rgb& >(result))), SWIGTYPE_p_mio__Rgb, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_r_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_r_set" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba_r_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->r = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_r_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_r_get" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  result = (float) ((arg1)->r);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_g_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_g_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_g_set" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba_g_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->g = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_g_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_g_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_g_get" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  result = (float) ((arg1)->g);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_b_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_b_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_b_set" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba_b_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->b = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_b_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_b_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_b_get" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  result = (float) ((arg1)->b);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_a_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_a_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_a_set" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba_a_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->a = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_a_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_a_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_a_get" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  result = (float) ((arg1)->a);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgba__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgba",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Rgba *)new mio::Rgba();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgba__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgba",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Rgba" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = (mio::Rgba *)new mio::Rgba(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgba__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgba",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Rgba" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Rgba" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Rgba" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (mio::Rgba *)new mio::Rgba(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgba__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Rgba",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Rgba" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Rgba" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Rgba" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Rgba" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      result = (mio::Rgba *)new mio::Rgba(arg1,arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Rgba(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Rgba__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Rgba__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Rgba__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_Rgba__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Rgba'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Rgba::Rgba()\n"
    "    mio::Rgba::Rgba(float)\n"
    "    mio::Rgba::Rgba(float,float,float)\n"
    "    mio::Rgba::Rgba(float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rgba___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___add__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba___add__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba___add__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator +((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___sub__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba___sub__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba___sub__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator -((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___add__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba___add__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator +(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgba___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rgba___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rgba___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___iadd__" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba___iadd__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba___iadd__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = (mio::Rgba *) &(arg1)->operator +=((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___mul__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba___mul__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba___mul__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator *((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___mul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___mul__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator *(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgba___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rgba___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rgba___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___imul__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___imul__" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba___imul__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba___imul__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = (mio::Rgba *) &(arg1)->operator *=((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___div__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba___div__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba___div__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator /((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___div__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___div__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->operator /(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgba___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rgba___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Rgba_fill_array_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_fill_array_4",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_fill_array_4" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba_fill_array_4" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      (arg1)->fill_array_4(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_get_pointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_get_pointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_get_pointer" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  {
    try 
    {
      result = (float *)((mio::Rgba const *)arg1)->get_pointer();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___copy__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___deepcopy__" "', argument " "1"" of type '" "mio::Rgba const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  {
    try 
    {
      result = ((mio::Rgba const *)arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_is_near" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba_is_near" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba_is_near" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Rgba_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)(arg1)->is_near((mio::Rgba const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  mio::Rgba *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba_is_near" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rgba_is_near" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rgba_is_near" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = (bool)(arg1)->is_near((mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rgba_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Rgba_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Rgba_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Rgba::is_near(mio::Rgba const &,float)\n"
    "    mio::Rgba::is_near(mio::Rgba const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Rgba___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___getitem__" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)mio_Rgba___getitem__(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rgba___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Rgba___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rgba___setitem__" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rgba___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Rgba___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      mio_Rgba___setitem__(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Rgba(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba *arg1 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Rgba",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Rgba, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Rgba" "', argument " "1"" of type '" "mio::Rgba *""'"); 
  }
  arg1 = reinterpret_cast< mio::Rgba * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Rgba_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Rgba, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Rgba *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"__add__",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__add__" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__add__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__add__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = mio::operator +(arg1,(mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap___mul____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Rgba *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Rgba result;
  
  if(!PyArg_UnpackTuple(args,(char *)"__mul__",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__mul__" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "mio::Rgba const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  {
    try 
    {
      result = mio::operator *(arg1,(mio::Rgba const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Rgba(static_cast< const mio::Rgba& >(result))), SWIGTYPE_p_mio__Rgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___mul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgb, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___mul____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap___mul____SWIG_3(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_new_Int3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Int3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Int3",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Int3 *)new mio::Int3();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Int3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Int3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Int3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Int3",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Int3" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Int3" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Int3" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (mio::Int3 *)new mio::Int3(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Int3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Int3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Int3__SWIG_0(self, args);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Int3__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Int3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Int3::Int3()\n"
    "    mio::Int3::Int3(int,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Int3__get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Int3 *arg1 = (mio::Int3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Int3__get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Int3__get" "', argument " "1"" of type '" "mio::Int3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Int3__get" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->_get(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Int3__set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Int3 *arg1 = (mio::Int3 *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Int3__set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Int3__set" "', argument " "1"" of type '" "mio::Int3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Int3__set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Int3__set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->_set(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Int3___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Int3 *arg1 = (mio::Int3 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Int3___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Int3___getitem__" "', argument " "1"" of type '" "mio::Int3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Int3___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)mio_Int3___getitem__(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Int3___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Int3 *arg1 = (mio::Int3 *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Int3___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Int3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Int3___setitem__" "', argument " "1"" of type '" "mio::Int3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Int3 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Int3___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Int3___setitem__" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      mio_Int3___setitem__(arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Int3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Int3 *arg1 = (mio::Int3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Int3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Int3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Int3" "', argument " "1"" of type '" "mio::Int3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::Int3 * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Int3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Int3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Uv_u_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *arg1 = (mio::Uv *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Uv_u_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Uv, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Uv_u_set" "', argument " "1"" of type '" "mio::Uv *""'"); 
  }
  arg1 = reinterpret_cast< mio::Uv * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Uv_u_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->u = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Uv_u_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *arg1 = (mio::Uv *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Uv_u_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Uv, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Uv_u_get" "', argument " "1"" of type '" "mio::Uv *""'"); 
  }
  arg1 = reinterpret_cast< mio::Uv * >(argp1);
  result = (float) ((arg1)->u);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Uv_v_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *arg1 = (mio::Uv *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Uv_v_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Uv, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Uv_v_set" "', argument " "1"" of type '" "mio::Uv *""'"); 
  }
  arg1 = reinterpret_cast< mio::Uv * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Uv_v_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->v = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Uv_v_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *arg1 = (mio::Uv *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Uv_v_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Uv, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Uv_v_get" "', argument " "1"" of type '" "mio::Uv *""'"); 
  }
  arg1 = reinterpret_cast< mio::Uv * >(argp1);
  result = (float) ((arg1)->v);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Uv__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Uv",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::Uv *)new mio::Uv();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Uv, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Uv__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Uv *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Uv",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Uv" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try 
    {
      result = (mio::Uv *)new mio::Uv(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Uv, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Uv__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Uv *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Uv",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Uv" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Uv" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::Uv *)new mio::Uv(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Uv, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Uv(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Uv__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Uv__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Uv__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Uv'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::Uv::Uv()\n"
    "    mio::Uv::Uv(float)\n"
    "    mio::Uv::Uv(float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Uv___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *arg1 = (mio::Uv *) 0 ;
  mio::Uv *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Uv___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Uv, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Uv___eq__" "', argument " "1"" of type '" "mio::Uv const *""'"); 
  }
  arg1 = reinterpret_cast< mio::Uv * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Uv,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Uv___eq__" "', argument " "2"" of type '" "mio::Uv const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Uv___eq__" "', argument " "2"" of type '" "mio::Uv const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Uv * >(argp2);
  {
    try 
    {
      result = (bool)((mio::Uv const *)arg1)->operator ==((mio::Uv const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Uv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Uv *arg1 = (mio::Uv *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Uv",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__Uv, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Uv" "', argument " "1"" of type '" "mio::Uv *""'"); 
  }
  arg1 = reinterpret_cast< mio::Uv * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Uv_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__Uv, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ReferenceCounted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ReferenceCounted *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ReferenceCounted",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ReferenceCounted *)new mio::ReferenceCounted();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ReferenceCounted, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ReferenceCounted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ReferenceCounted *arg1 = (mio::ReferenceCounted *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ReferenceCounted",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ReferenceCounted, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ReferenceCounted" "', argument " "1"" of type '" "mio::ReferenceCounted *""'"); 
  }
  arg1 = reinterpret_cast< mio::ReferenceCounted * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReferenceCounted_inc_ref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ReferenceCounted *arg1 = (mio::ReferenceCounted *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ReferenceCounted_inc_ref",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ReferenceCounted, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCounted_inc_ref" "', argument " "1"" of type '" "mio::ReferenceCounted *""'"); 
  }
  arg1 = reinterpret_cast< mio::ReferenceCounted * >(argp1);
  {
    try 
    {
      (arg1)->inc_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReferenceCounted_dec_ref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ReferenceCounted *arg1 = (mio::ReferenceCounted *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ReferenceCounted_dec_ref",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ReferenceCounted, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCounted_dec_ref" "', argument " "1"" of type '" "mio::ReferenceCounted *""'"); 
  }
  arg1 = reinterpret_cast< mio::ReferenceCounted * >(argp1);
  {
    try 
    {
      (arg1)->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReferenceCounted_get_ref_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ReferenceCounted *arg1 = (mio::ReferenceCounted *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ReferenceCounted_get_ref_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ReferenceCounted, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCounted_get_ref_count" "', argument " "1"" of type '" "mio::ReferenceCounted *""'"); 
  }
  arg1 = reinterpret_cast< mio::ReferenceCounted * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_ref_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ReferenceCounted_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ReferenceCounted, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MioObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::MioObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MioObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MioObject" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::MioObject *)new mio::MioObject((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__MioObject, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MioObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::MioObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MioObject",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::MioObject *)new mio::MioObject();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__MioObject, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MioObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MioObject__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MioObject__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_MioObject'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::MioObject::MioObject(char const *)\n"
    "    mio::MioObject::MioObject()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MioObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::MioObject *arg1 = (mio::MioObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MioObject",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__MioObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MioObject" "', argument " "1"" of type '" "mio::MioObject *""'"); 
  }
  arg1 = reinterpret_cast< mio::MioObject * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MioObject_get_uid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::MioObject *arg1 = (mio::MioObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MioObject_get_uid",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__MioObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MioObject_get_uid" "', argument " "1"" of type '" "mio::MioObject const *""'"); 
  }
  arg1 = reinterpret_cast< mio::MioObject * >(argp1);
  {
    try 
    {
      result = (char *)((mio::MioObject const *)arg1)->get_uid();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MioObject_set_uid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::MioObject *arg1 = (mio::MioObject *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MioObject_set_uid",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__MioObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MioObject_set_uid" "', argument " "1"" of type '" "mio::MioObject *""'"); 
  }
  arg1 = reinterpret_cast< mio::MioObject * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MioObject_set_uid" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      (arg1)->set_uid((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *MioObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__MioObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Mesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Mesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Mesh" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_bounding_box(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Box result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_bounding_box",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_bounding_box" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  {
    try 
    {
      result = ((mio::geometry::Mesh const *)arg1)->get_bounding_box();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Box(static_cast< const mio::Box& >(result))), SWIGTYPE_p_mio__Box, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh__get_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh__get_vertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh__get_vertex" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh__get_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::geometry::Mesh const *)arg1)->_get_vertex(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_vertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_vertex" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh_get_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::geometry::Mesh const *)arg1)->get_vertex(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh__get_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh__get_normal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh__get_normal" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh__get_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::geometry::Mesh const *)arg1)->_get_normal(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_normal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_normal" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh_get_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::geometry::Mesh const *)arg1)->get_normal(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_polygon_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_polygon_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_polygon_count" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh__get_polygon_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh__get_polygon_vertex_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh__get_polygon_vertex_count" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh__get_polygon_vertex_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_vertex_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_polygon_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_polygon_vertex_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_polygon_vertex_count" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh_get_polygon_vertex_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_vertex_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh__get_polygon_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh__get_polygon_vertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh__get_polygon_vertex" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh__get_polygon_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh__get_polygon_vertex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->_get_polygon_vertex(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_polygon_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_polygon_vertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_polygon_vertex" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh_get_polygon_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh_get_polygon_vertex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->get_polygon_vertex(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh__get_polygon_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh__get_polygon_normal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh__get_polygon_normal" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh__get_polygon_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh__get_polygon_normal" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->_get_polygon_normal(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_polygon_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_polygon_normal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_polygon_normal" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh_get_polygon_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh_get_polygon_normal" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->get_polygon_normal(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_vertex_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_vertex_count" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  {
    try 
    {
      result = (int)((mio::geometry::Mesh const *)arg1)->get_vertex_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_get_normal_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_get_normal_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_get_normal_count" "', argument " "1"" of type '" "mio::geometry::Mesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  {
    try 
    {
      result = (int)((mio::geometry::Mesh const *)arg1)->get_normal_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  mio::geometry::MeshVisitor *arg2 = (mio::geometry::MeshVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Mesh_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh_accept" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__geometry__MeshVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mesh_accept" "', argument " "2"" of type '" "mio::geometry::MeshVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::geometry::MeshVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Mesh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__geometry__Mesh, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IndexedMesh__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::geometry::IndexedMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IndexedMesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexedMesh" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::geometry::IndexedMesh *)new mio::geometry::IndexedMesh((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__IndexedMesh, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexedMesh__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IndexedMesh",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::geometry::IndexedMesh *)new mio::geometry::IndexedMesh();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__IndexedMesh, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexedMesh(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IndexedMesh__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IndexedMesh__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IndexedMesh'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::geometry::IndexedMesh::IndexedMesh(char const *)\n"
    "    mio::geometry::IndexedMesh::IndexedMesh()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IndexedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IndexedMesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IndexedMesh" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  mio::geometry::MeshVisitor *arg2 = (mio::geometry::MeshVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_accept" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__geometry__MeshVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexedMesh_accept" "', argument " "2"" of type '" "mio::geometry::MeshVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::geometry::MeshVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_get_bounding_box(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Box result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_get_bounding_box",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_get_bounding_box" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      result = ((mio::geometry::IndexedMesh const *)arg1)->get_bounding_box();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Box(static_cast< const mio::Box& >(result))), SWIGTYPE_p_mio__Box, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_validate_bounding_box(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_validate_bounding_box",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_validate_bounding_box" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      ((mio::geometry::IndexedMesh const *)arg1)->validate_bounding_box();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_invalidate_bounding_box(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_invalidate_bounding_box",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_invalidate_bounding_box" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      ((mio::geometry::IndexedMesh const *)arg1)->invalidate_bounding_box();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_vertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_vertex" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::geometry::IndexedMesh const *)arg1)->_get_vertex(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_normal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_normal" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::geometry::IndexedMesh const *)arg1)->_get_normal(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_get_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_get_vertex_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_get_vertex_count" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      result = (int)((mio::geometry::IndexedMesh const *)arg1)->get_vertex_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_get_normal_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_get_normal_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_get_normal_count" "', argument " "1"" of type '" "mio::geometry::IndexedMesh const *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      result = (int)((mio::geometry::IndexedMesh const *)arg1)->get_normal_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_append_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_append_vertex",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_append_vertex" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexedMesh_append_vertex" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedMesh_append_vertex" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      (arg1)->append_vertex((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_append_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_append_normal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_append_normal" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexedMesh_append_normal" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedMesh_append_normal" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      (arg1)->append_normal((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__set_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  mio::Vector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__set_normal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__set_normal" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__set_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IndexedMesh__set_normal" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedMesh__set_normal" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  {
    try 
    {
      (arg1)->_set_normal(arg2,(mio::Vector3 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_set_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  mio::Vector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_set_normal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_set_normal" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh_set_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IndexedMesh_set_normal" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedMesh_set_normal" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  {
    try 
    {
      (arg1)->set_normal(arg2,(mio::Vector3 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__set_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  mio::Point3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__set_vertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__set_vertex" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__set_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IndexedMesh__set_vertex" "', argument " "3"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedMesh__set_vertex" "', argument " "3"" of type '" "mio::Point3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Point3 * >(argp3);
  {
    try 
    {
      (arg1)->_set_vertex(arg2,(mio::Point3 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_set_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  mio::Point3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_set_vertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_set_vertex" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh_set_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IndexedMesh_set_vertex" "', argument " "3"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedMesh_set_vertex" "', argument " "3"" of type '" "mio::Point3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Point3 * >(argp3);
  {
    try 
    {
      (arg1)->set_vertex(arg2,(mio::Point3 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_append_new_polygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_append_new_polygon",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_append_new_polygon" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      (arg1)->append_new_polygon();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_append_vertex_normal_index_to_last_polygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_append_vertex_normal_index_to_last_polygon",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_append_vertex_normal_index_to_last_polygon" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh_append_vertex_normal_index_to_last_polygon" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh_append_vertex_normal_index_to_last_polygon" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->append_vertex_normal_index_to_last_polygon(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_get_polygon_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_get_polygon_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_get_polygon_count" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_polygon_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_polygon_vertex_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_polygon_vertex_count" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_polygon_vertex_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_vertex_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_polygon_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_polygon_vertex",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_polygon_vertex" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_polygon_vertex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh__get_polygon_vertex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->_get_polygon_vertex(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_polygon_normal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_polygon_normal",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_polygon_normal" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_polygon_normal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh__get_polygon_normal" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->_get_polygon_normal(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_polygon_vertex_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_polygon_vertex_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_polygon_vertex_index" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_polygon_vertex_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh__get_polygon_vertex_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_vertex_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_get_polygon_vertex_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_get_polygon_vertex_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_get_polygon_vertex_index" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh_get_polygon_vertex_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh_get_polygon_vertex_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_vertex_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh__get_polygon_normal_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh__get_polygon_normal_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh__get_polygon_normal_index" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh__get_polygon_normal_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh__get_polygon_normal_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_normal_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh_get_polygon_normal_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh_get_polygon_normal_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh_get_polygon_normal_index" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedMesh_get_polygon_normal_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedMesh_get_polygon_normal_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_normal_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedMesh___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::geometry::IndexedMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedMesh___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedMesh___copy__" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  {
    try 
    {
      result = (mio::geometry::IndexedMesh *)(arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IndexedMesh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__geometry__IndexedMesh, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GLTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_GLTexture",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::gl::GLTexture *)new mio::gl::GLTexture();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__gl__GLTexture, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GLTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLTexture *arg1 = (mio::gl::GLTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_GLTexture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLTexture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GLTexture" "', argument " "1"" of type '" "mio::gl::GLTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLTexture * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLTexture_bind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLTexture *arg1 = (mio::gl::GLTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLTexture_bind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLTexture_bind" "', argument " "1"" of type '" "mio::gl::GLTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLTexture * >(argp1);
  {
    try 
    {
      (arg1)->bind();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLTexture_download(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLTexture *arg1 = (mio::gl::GLTexture *) 0 ;
  GLint arg2 ;
  int arg3 ;
  int arg4 ;
  GLenum arg5 ;
  GLenum arg6 ;
  GLvoid *arg7 = (GLvoid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLTexture_download",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLTexture_download" "', argument " "1"" of type '" "mio::gl::GLTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLTexture * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_GLint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLTexture_download" "', argument " "2"" of type '" "GLint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GLTexture_download" "', argument " "2"" of type '" "GLint""'");
    } else {
      GLint * temp = reinterpret_cast< GLint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GLTexture_download" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GLTexture_download" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_GLenum,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GLTexture_download" "', argument " "5"" of type '" "GLenum""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GLTexture_download" "', argument " "5"" of type '" "GLenum""'");
    } else {
      GLenum * temp = reinterpret_cast< GLenum * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_GLenum,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "GLTexture_download" "', argument " "6"" of type '" "GLenum""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GLTexture_download" "', argument " "6"" of type '" "GLenum""'");
    } else {
      GLenum * temp = reinterpret_cast< GLenum * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_GLvoid, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GLTexture_download" "', argument " "7"" of type '" "GLvoid const *""'"); 
  }
  arg7 = reinterpret_cast< GLvoid * >(argp7);
  {
    try 
    {
      (arg1)->download(arg2,arg3,arg4,arg5,arg6,(GLvoid const *)arg7);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLTexture_build_mipmap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLTexture *arg1 = (mio::gl::GLTexture *) 0 ;
  GLint arg2 ;
  int arg3 ;
  int arg4 ;
  GLenum arg5 ;
  GLenum arg6 ;
  GLvoid *arg7 = (GLvoid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLTexture_build_mipmap",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLTexture_build_mipmap" "', argument " "1"" of type '" "mio::gl::GLTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLTexture * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_GLint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLTexture_build_mipmap" "', argument " "2"" of type '" "GLint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GLTexture_build_mipmap" "', argument " "2"" of type '" "GLint""'");
    } else {
      GLint * temp = reinterpret_cast< GLint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GLTexture_build_mipmap" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GLTexture_build_mipmap" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_GLenum,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GLTexture_build_mipmap" "', argument " "5"" of type '" "GLenum""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GLTexture_build_mipmap" "', argument " "5"" of type '" "GLenum""'");
    } else {
      GLenum * temp = reinterpret_cast< GLenum * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_GLenum,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "GLTexture_build_mipmap" "', argument " "6"" of type '" "GLenum""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GLTexture_build_mipmap" "', argument " "6"" of type '" "GLenum""'");
    } else {
      GLenum * temp = reinterpret_cast< GLenum * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_GLvoid, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "GLTexture_build_mipmap" "', argument " "7"" of type '" "GLvoid const *""'"); 
  }
  arg7 = reinterpret_cast< GLvoid * >(argp7);
  {
    try 
    {
      (arg1)->build_mipmap(arg2,arg3,arg4,arg5,arg6,(GLvoid const *)arg7);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GLTexture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__gl__GLTexture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ILImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  string *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::il::ILImage *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ILImage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_string,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ILImage" "', argument " "1"" of type '" "string const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ILImage" "', argument " "1"" of type '" "string const &""'"); 
  }
  arg1 = reinterpret_cast< string * >(argp1);
  {
    try 
    {
      result = (mio::il::ILImage *)new mio::il::ILImage((string const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__il__ILImage, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ILImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ILImage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ILImage" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImage_get_file_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImage_get_file_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImage_get_file_name" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      result = (char *)(arg1)->get_file_name();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImage_build_mipmap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImage_build_mipmap",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImage_build_mipmap" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      (arg1)->build_mipmap();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImage_bind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImage_bind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImage_bind" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      (arg1)->bind();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImage_get_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::gl::GLTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImage_get_texture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImage_get_texture" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      result = (mio::gl::GLTexture *)(arg1)->get_texture();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__gl__GLTexture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImage_get_image_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImage_get_image_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImage_get_image_id" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_image_id();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ILImage_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__il__ILImage, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_ILImageService(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ILImageService",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ILImageService" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_get_image__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::il::ILImage *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_get_image",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_get_image" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_string,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_get_image" "', argument " "2"" of type '" "string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ILImageService_get_image" "', argument " "2"" of type '" "string const &""'"); 
  }
  arg2 = reinterpret_cast< string * >(argp2);
  {
    try 
    {
      result = (mio::il::ILImage *)(arg1)->get_image((string const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_get_image__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  ILuint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::il::ILImage *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_get_image",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_get_image" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ILuint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_get_image" "', argument " "2"" of type '" "ILuint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ILImageService_get_image" "', argument " "2"" of type '" "ILuint""'");
    } else {
      ILuint * temp = reinterpret_cast< ILuint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = (mio::il::ILImage *)(arg1)->get_image(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_get_image(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImageService, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_string, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ILImageService_get_image__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImageService, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ILuint, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ILImageService_get_image__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ILImageService_get_image'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::il::ILImageService::get_image(string const &)\n"
    "    mio::il::ILImageService::get_image(ILuint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ILImageService_has_image_with_file_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_has_image_with_file_name",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_has_image_with_file_name" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_string,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_has_image_with_file_name" "', argument " "2"" of type '" "string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ILImageService_has_image_with_file_name" "', argument " "2"" of type '" "string const &""'"); 
  }
  arg2 = reinterpret_cast< string * >(argp2);
  {
    try 
    {
      result = (bool)(arg1)->has_image_with_file_name((string const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_has_image_with_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  ILuint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_has_image_with_id",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_has_image_with_id" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ILuint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_has_image_with_id" "', argument " "2"" of type '" "ILuint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ILImageService_has_image_with_id" "', argument " "2"" of type '" "ILuint""'");
    } else {
      ILuint * temp = reinterpret_cast< ILuint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = (bool)(arg1)->has_image_with_id(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_remove__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_remove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_remove" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_string,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_remove" "', argument " "2"" of type '" "string const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ILImageService_remove" "', argument " "2"" of type '" "string const &""'"); 
  }
  arg2 = reinterpret_cast< string * >(argp2);
  {
    try 
    {
      (arg1)->remove((string const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_remove__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  ILuint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_remove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_remove" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ILuint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_remove" "', argument " "2"" of type '" "ILuint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ILImageService_remove" "', argument " "2"" of type '" "ILuint""'");
    } else {
      ILuint * temp = reinterpret_cast< ILuint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      (arg1)->remove(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_remove__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *arg1 = (mio::il::ILImageService *) 0 ;
  mio::il::ILImage *arg2 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_remove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILImageService_remove" "', argument " "1"" of type '" "mio::il::ILImageService *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImageService * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILImageService_remove" "', argument " "2"" of type '" "mio::il::ILImage *""'"); 
  }
  arg2 = reinterpret_cast< mio::il::ILImage * >(argp2);
  {
    try 
    {
      (arg1)->remove(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_remove(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImageService, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_string, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ILImageService_remove__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImageService, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ILuint, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ILImageService_remove__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImageService, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__il__ILImage, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ILImageService_remove__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ILImageService_remove'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::il::ILImageService::remove(string const &)\n"
    "    mio::il::ILImageService::remove(ILuint)\n"
    "    mio::il::ILImageService::remove(mio::il::ILImage *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ILImageService_v(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImageService *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_v",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::il::ILImageService *)mio::il::ILImageService::v();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__il__ILImageService, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILImageService_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILImageService_init",0,0)) SWIG_fail;
  {
    try 
    {
      mio::il::ILImageService::init();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ILImageService_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__il__ILImageService, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Texture__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::Texture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Texture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Texture" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::texture::Texture *)new mio::texture::Texture((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__Texture, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Texture__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::Texture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Texture",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::texture::Texture *)new mio::texture::Texture();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__Texture, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Texture(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Texture__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Texture__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Texture'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::texture::Texture::Texture(char const *)\n"
    "    mio::texture::Texture::Texture()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::Texture *arg1 = (mio::texture::Texture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Texture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__Texture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Texture" "', argument " "1"" of type '" "mio::texture::Texture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::Texture * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Texture_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::Texture *arg1 = (mio::texture::Texture *) 0 ;
  mio::texture::TextureVisitor *arg2 = (mio::texture::TextureVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Texture_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Texture_accept" "', argument " "1"" of type '" "mio::texture::Texture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::Texture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Texture_accept" "', argument " "2"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Texture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__Texture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_TextureMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TextureMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TextureMapping" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMapping_get_polygon_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMapping_get_polygon_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMapping_get_polygon_count" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMapping__get_polygon_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMapping__get_polygon_vertex_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMapping__get_polygon_vertex_count" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TextureMapping__get_polygon_vertex_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_vertex_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMapping_get_polygon_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMapping_get_polygon_vertex_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMapping_get_polygon_vertex_count" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TextureMapping_get_polygon_vertex_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_vertex_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMapping__get_polygon_tex_coord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Uv result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMapping__get_polygon_tex_coord",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMapping__get_polygon_tex_coord" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TextureMapping__get_polygon_tex_coord" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TextureMapping__get_polygon_tex_coord" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->_get_polygon_tex_coord(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Uv(static_cast< const mio::Uv& >(result))), SWIGTYPE_p_mio__Uv, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMapping_get_polygon_tex_coord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Uv result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMapping_get_polygon_tex_coord",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMapping_get_polygon_tex_coord" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TextureMapping_get_polygon_tex_coord" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TextureMapping_get_polygon_tex_coord" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->get_polygon_tex_coord(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Uv(static_cast< const mio::Uv& >(result))), SWIGTYPE_p_mio__Uv, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMapping_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMapping *arg1 = (mio::texture::TextureMapping *) 0 ;
  mio::texture::TextureMappingVisitor *arg2 = (mio::texture::TextureMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMapping_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMapping_accept" "', argument " "1"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TextureMapping_accept" "', argument " "2"" of type '" "mio::texture::TextureMappingVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMappingVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TextureMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__TextureMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IndexedTextureMapping__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::IndexedTextureMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IndexedTextureMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexedTextureMapping" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::texture::IndexedTextureMapping *)new mio::texture::IndexedTextureMapping((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__IndexedTextureMapping, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexedTextureMapping__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IndexedTextureMapping",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::texture::IndexedTextureMapping *)new mio::texture::IndexedTextureMapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__IndexedTextureMapping, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexedTextureMapping(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IndexedTextureMapping__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IndexedTextureMapping__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IndexedTextureMapping'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::texture::IndexedTextureMapping::IndexedTextureMapping(char const *)\n"
    "    mio::texture::IndexedTextureMapping::IndexedTextureMapping()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IndexedTextureMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IndexedTextureMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IndexedTextureMapping" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping__get_tex_coord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Uv result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping__get_tex_coord",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping__get_tex_coord" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping__get_tex_coord" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::texture::IndexedTextureMapping const *)arg1)->_get_tex_coord(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Uv(static_cast< const mio::Uv& >(result))), SWIGTYPE_p_mio__Uv, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_get_tex_coord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Uv result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_get_tex_coord",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_get_tex_coord" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping_get_tex_coord" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::texture::IndexedTextureMapping const *)arg1)->get_tex_coord(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Uv(static_cast< const mio::Uv& >(result))), SWIGTYPE_p_mio__Uv, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_append_tex_coord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  mio::Uv *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_append_tex_coord",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_append_tex_coord" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Uv,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexedTextureMapping_append_tex_coord" "', argument " "2"" of type '" "mio::Uv const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexedTextureMapping_append_tex_coord" "', argument " "2"" of type '" "mio::Uv const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Uv * >(argp2);
  {
    try 
    {
      (arg1)->append_tex_coord((mio::Uv const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_get_tex_coord_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_get_tex_coord_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_get_tex_coord_count" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  {
    try 
    {
      result = (int)((mio::texture::IndexedTextureMapping const *)arg1)->get_tex_coord_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_get_polygon_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_get_polygon_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_get_polygon_count" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping__get_polygon_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping__get_polygon_vertex_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping__get_polygon_vertex_count" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping__get_polygon_vertex_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_vertex_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping__get_polygon_tex_coord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::Uv result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping__get_polygon_tex_coord",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping__get_polygon_tex_coord" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping__get_polygon_tex_coord" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedTextureMapping__get_polygon_tex_coord" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (arg1)->_get_polygon_tex_coord(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Uv(static_cast< const mio::Uv& >(result))), SWIGTYPE_p_mio__Uv, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping__get_polygon_tex_coord_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping__get_polygon_tex_coord_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping__get_polygon_tex_coord_index" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping__get_polygon_tex_coord_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedTextureMapping__get_polygon_tex_coord_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)(arg1)->_get_polygon_tex_coord_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_get_polygon_tex_coord_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_get_polygon_tex_coord_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_get_polygon_tex_coord_index" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping_get_polygon_tex_coord_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedTextureMapping_get_polygon_tex_coord_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)(arg1)->get_polygon_tex_coord_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_append_new_polgon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_append_new_polgon",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_append_new_polgon" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  {
    try 
    {
      (arg1)->append_new_polgon();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_append_tex_coord_index_to_last_polygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_append_tex_coord_index_to_last_polygon",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_append_tex_coord_index_to_last_polygon" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedTextureMapping_append_tex_coord_index_to_last_polygon" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->append_tex_coord_index_to_last_polygon(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedTextureMapping_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::IndexedTextureMapping *arg1 = (mio::texture::IndexedTextureMapping *) 0 ;
  mio::texture::TextureMappingVisitor *arg2 = (mio::texture::TextureMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedTextureMapping_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedTextureMapping_accept" "', argument " "1"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexedTextureMapping_accept" "', argument " "2"" of type '" "mio::texture::TextureMappingVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMappingVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IndexedTextureMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__IndexedTextureMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ILTexture__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::texture::ILTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ILTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ILTexture" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ILTexture" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::texture::ILTexture *)new mio::texture::ILTexture(arg1,(char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__ILTexture, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ILTexture__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::il::ILImage *arg1 = (mio::il::ILImage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::ILTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ILTexture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ILTexture" "', argument " "1"" of type '" "mio::il::ILImage *""'"); 
  }
  arg1 = reinterpret_cast< mio::il::ILImage * >(argp1);
  {
    try 
    {
      result = (mio::texture::ILTexture *)new mio::texture::ILTexture(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__ILTexture, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ILTexture(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ILTexture__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__il__ILImage, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ILTexture__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ILTexture'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::texture::ILTexture::ILTexture(mio::il::ILImage *,char const *)\n"
    "    mio::texture::ILTexture::ILTexture(mio::il::ILImage *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ILTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::ILTexture *arg1 = (mio::texture::ILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ILTexture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__ILTexture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ILTexture" "', argument " "1"" of type '" "mio::texture::ILTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::ILTexture * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILTexture_get_image(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::ILTexture *arg1 = (mio::texture::ILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::il::ILImage *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILTexture_get_image",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__ILTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILTexture_get_image" "', argument " "1"" of type '" "mio::texture::ILTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::ILTexture * >(argp1);
  {
    try 
    {
      result = (mio::il::ILImage *)(arg1)->get_image();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__il__ILImage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ILTexture_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::ILTexture *arg1 = (mio::texture::ILTexture *) 0 ;
  mio::texture::TextureVisitor *arg2 = (mio::texture::TextureVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ILTexture_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__ILTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ILTexture_accept" "', argument " "1"" of type '" "mio::texture::ILTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::ILTexture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ILTexture_accept" "', argument " "2"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ILTexture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__ILTexture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LazyILTexture__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::texture::LazyILTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LazyILTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LazyILTexture" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LazyILTexture" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::texture::LazyILTexture *)new mio::texture::LazyILTexture((char const *)arg1,(char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__LazyILTexture, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LazyILTexture__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::LazyILTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LazyILTexture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LazyILTexture" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::texture::LazyILTexture *)new mio::texture::LazyILTexture((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__LazyILTexture, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LazyILTexture(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_LazyILTexture__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_LazyILTexture__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_LazyILTexture'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::texture::LazyILTexture::LazyILTexture(char const *,char const *)\n"
    "    mio::texture::LazyILTexture::LazyILTexture(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_LazyILTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::LazyILTexture *arg1 = (mio::texture::LazyILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_LazyILTexture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__LazyILTexture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LazyILTexture" "', argument " "1"" of type '" "mio::texture::LazyILTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::LazyILTexture * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LazyILTexture_get_il_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::LazyILTexture *arg1 = (mio::texture::LazyILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::ILTexture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LazyILTexture_get_il_texture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__LazyILTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LazyILTexture_get_il_texture" "', argument " "1"" of type '" "mio::texture::LazyILTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::LazyILTexture * >(argp1);
  {
    try 
    {
      result = (mio::texture::ILTexture *)(arg1)->get_il_texture();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__ILTexture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LazyILTexture_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::LazyILTexture *arg1 = (mio::texture::LazyILTexture *) 0 ;
  mio::texture::TextureVisitor *arg2 = (mio::texture::TextureVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LazyILTexture_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__LazyILTexture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LazyILTexture_accept" "', argument " "1"" of type '" "mio::texture::LazyILTexture *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::LazyILTexture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LazyILTexture_accept" "', argument " "2"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LazyILTexture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__LazyILTexture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::Material *arg1 = (mio::material::Material *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Material",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__Material, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Material" "', argument " "1"" of type '" "mio::material::Material *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::Material * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Material_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::Material *arg1 = (mio::material::Material *) 0 ;
  mio::material::MaterialVisitor *arg2 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Material_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__Material, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Material_accept" "', argument " "1"" of type '" "mio::material::Material *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::Material * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Material_accept" "', argument " "2"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Material_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__Material, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MaterialList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MaterialList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MaterialList" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::material::MaterialList *)new mio::material::MaterialList((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialList, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaterialList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MaterialList",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::material::MaterialList *)new mio::material::MaterialList();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialList, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaterialList(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MaterialList__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MaterialList__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_MaterialList'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::material::MaterialList::MaterialList(char const *)\n"
    "    mio::material::MaterialList::MaterialList()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MaterialList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialList *arg1 = (mio::material::MaterialList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MaterialList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialList, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MaterialList" "', argument " "1"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialList * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialList_append_material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialList *arg1 = (mio::material::MaterialList *) 0 ;
  mio::material::Material *arg2 = (mio::material::Material *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialList_append_material",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialList_append_material" "', argument " "1"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialList * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__Material, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialList_append_material" "', argument " "2"" of type '" "mio::material::Material *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::Material * >(argp2);
  {
    try 
    {
      (arg1)->append_material(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialList_get_material_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialList *arg1 = (mio::material::MaterialList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialList_get_material_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialList_get_material_count" "', argument " "1"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialList * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_material_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialList__get_material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialList *arg1 = (mio::material::MaterialList *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::material::Material *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialList__get_material",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialList__get_material" "', argument " "1"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialList * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaterialList__get_material" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::material::Material *)(arg1)->_get_material(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__Material, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialList_get_material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialList *arg1 = (mio::material::MaterialList *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::material::Material *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialList_get_material",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialList_get_material" "', argument " "1"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialList * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaterialList_get_material" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::material::Material *)(arg1)->get_material(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__Material, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MaterialList_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__MaterialList, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_MaterialMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMapping *arg1 = (mio::material::MaterialMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MaterialMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MaterialMapping" "', argument " "1"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMapping * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialMapping__get_material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMapping *arg1 = (mio::material::MaterialMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialMapping__get_material",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialMapping__get_material" "', argument " "1"" of type '" "mio::material::MaterialMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaterialMapping__get_material" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)((mio::material::MaterialMapping const *)arg1)->_get_material(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialMapping_get_material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMapping *arg1 = (mio::material::MaterialMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialMapping_get_material",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialMapping_get_material" "', argument " "1"" of type '" "mio::material::MaterialMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaterialMapping_get_material" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)((mio::material::MaterialMapping const *)arg1)->get_material(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialMapping_get_polygon_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMapping *arg1 = (mio::material::MaterialMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialMapping_get_polygon_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialMapping_get_polygon_count" "', argument " "1"" of type '" "mio::material::MaterialMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMapping * >(argp1);
  {
    try 
    {
      result = (int)((mio::material::MaterialMapping const *)arg1)->get_polygon_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialMapping_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMapping *arg1 = (mio::material::MaterialMapping *) 0 ;
  mio::material::MaterialMappingVisitor *arg2 = (mio::material::MaterialMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialMapping_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialMapping_accept" "', argument " "1"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialMapping_accept" "', argument " "2"" of type '" "mio::material::MaterialMappingVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialMappingVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MaterialMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__MaterialMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MqoMaterial_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  mio::Rgba *arg2 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_color_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_color_set" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MqoMaterial_color_set" "', argument " "2"" of type '" "mio::Rgba *""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  if (arg1) (arg1)->color = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_color_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_color_get" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  result = (mio::Rgba *)& ((arg1)->color);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_ambient_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_ambient_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_ambient_set" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MqoMaterial_ambient_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->ambient = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_ambient_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_ambient_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_ambient_get" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  result = (float) ((arg1)->ambient);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_diffuse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_diffuse_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_diffuse_set" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MqoMaterial_diffuse_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->diffuse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_diffuse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_diffuse_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_diffuse_get" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  result = (float) ((arg1)->diffuse);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_specular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_specular_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_specular_set" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MqoMaterial_specular_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->specular = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_specular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_specular_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_specular_get" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  result = (float) ((arg1)->specular);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_emission_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_emission_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_emission_set" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MqoMaterial_emission_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->emission = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_emission_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_emission_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_emission_get" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  result = (float) ((arg1)->emission);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_power_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_power_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_power_set" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MqoMaterial_power_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->power = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_power_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_power_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_power_get" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  result = (float) ((arg1)->power);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MqoMaterial__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  char *arg7 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  mio::material::MqoMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MqoMaterial",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MqoMaterial" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MqoMaterial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MqoMaterial" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_MqoMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_MqoMaterial" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_MqoMaterial" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  {
    try 
    {
      result = (mio::material::MqoMaterial *)new mio::material::MqoMaterial(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MqoMaterial, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MqoMaterial__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  mio::material::MqoMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MqoMaterial",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MqoMaterial" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MqoMaterial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MqoMaterial" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_MqoMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_MqoMaterial" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try 
    {
      result = (mio::material::MqoMaterial *)new mio::material::MqoMaterial(arg1,arg2,arg3,arg4,arg5,arg6);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MqoMaterial, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MqoMaterial(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_MqoMaterial__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_MqoMaterial__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_MqoMaterial'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::material::MqoMaterial::MqoMaterial(mio::Rgba,float,float,float,float,float,char const *)\n"
    "    mio::material::MqoMaterial::MqoMaterial(mio::Rgba,float,float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MqoMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MqoMaterial",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MqoMaterial" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MqoMaterial_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MqoMaterial *arg1 = (mio::material::MqoMaterial *) 0 ;
  mio::material::MaterialVisitor *arg2 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MqoMaterial_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MqoMaterial_accept" "', argument " "1"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MqoMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MqoMaterial_accept" "', argument " "2"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MqoMaterial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__MqoMaterial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PhongMaterial_ambient_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  mio::Rgba *arg2 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_ambient_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_ambient_set" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhongMaterial_ambient_set" "', argument " "2"" of type '" "mio::Rgba *""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  if (arg1) (arg1)->ambient = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_ambient_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_ambient_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_ambient_get" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  result = (mio::Rgba *)& ((arg1)->ambient);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_diffuse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  mio::Rgba *arg2 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_diffuse_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_diffuse_set" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhongMaterial_diffuse_set" "', argument " "2"" of type '" "mio::Rgba *""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  if (arg1) (arg1)->diffuse = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_diffuse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_diffuse_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_diffuse_get" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  result = (mio::Rgba *)& ((arg1)->diffuse);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_specular_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  mio::Rgba *arg2 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_specular_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_specular_set" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhongMaterial_specular_set" "', argument " "2"" of type '" "mio::Rgba *""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  if (arg1) (arg1)->specular = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_specular_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_specular_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_specular_get" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  result = (mio::Rgba *)& ((arg1)->specular);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_emission_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  mio::Rgba *arg2 = (mio::Rgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_emission_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_emission_set" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Rgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhongMaterial_emission_set" "', argument " "2"" of type '" "mio::Rgba *""'"); 
  }
  arg2 = reinterpret_cast< mio::Rgba * >(argp2);
  if (arg1) (arg1)->emission = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_emission_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Rgba *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_emission_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_emission_get" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  result = (mio::Rgba *)& ((arg1)->emission);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Rgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_shininess_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_shininess_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_shininess_set" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhongMaterial_shininess_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->shininess = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_shininess_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_shininess_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_shininess_get" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  result = (float) ((arg1)->shininess);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PhongMaterial__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  mio::Rgba arg2 ;
  mio::Rgba arg3 ;
  mio::Rgba arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  mio::material::PhongMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PhongMaterial",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_PhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_PhongMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_AsCharPtrAndSize(obj5, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_PhongMaterial" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = reinterpret_cast< char * >(buf6);
  {
    try 
    {
      result = (mio::material::PhongMaterial *)new mio::material::PhongMaterial(arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__PhongMaterial, SWIG_POINTER_NEW |  0 );
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc6 == SWIG_NEWOBJ) delete[] buf6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PhongMaterial__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  mio::Rgba arg2 ;
  mio::Rgba arg3 ;
  mio::Rgba arg4 ;
  float arg5 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  mio::material::PhongMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PhongMaterial",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_PhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_PhongMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try 
    {
      result = (mio::material::PhongMaterial *)new mio::material::PhongMaterial(arg1,arg2,arg3,arg4,arg5);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__PhongMaterial, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PhongMaterial(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Rgba, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Rgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_PhongMaterial__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Rgba, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Rgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_AsCharPtrAndSize(argv[5], 0, NULL, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_PhongMaterial__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_PhongMaterial'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::material::PhongMaterial::PhongMaterial(mio::Rgba,mio::Rgba,mio::Rgba,mio::Rgba,float,char const *)\n"
    "    mio::material::PhongMaterial::PhongMaterial(mio::Rgba,mio::Rgba,mio::Rgba,mio::Rgba,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PhongMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PhongMaterial",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PhongMaterial" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhongMaterial_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::PhongMaterial *arg1 = (mio::material::PhongMaterial *) 0 ;
  mio::material::MaterialVisitor *arg2 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PhongMaterial_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhongMaterial_accept" "', argument " "1"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::PhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhongMaterial_accept" "', argument " "2"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PhongMaterial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__PhongMaterial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TexturedMqoMaterial__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  mio::texture::Texture *arg7 = (mio::texture::Texture *) 0 ;
  char *arg8 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 ;
  char *buf8 = 0 ;
  int alloc8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  mio::material::TexturedMqoMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TexturedMqoMaterial",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TexturedMqoMaterial" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TexturedMqoMaterial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TexturedMqoMaterial" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TexturedMqoMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_TexturedMqoMaterial" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_TexturedMqoMaterial" "', argument " "7"" of type '" "mio::texture::Texture *""'"); 
  }
  arg7 = reinterpret_cast< mio::texture::Texture * >(argp7);
  res8 = SWIG_AsCharPtrAndSize(obj7, &buf8, NULL, &alloc8);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "new_TexturedMqoMaterial" "', argument " "8"" of type '" "char const *""'");
  }
  arg8 = reinterpret_cast< char * >(buf8);
  {
    try 
    {
      result = (mio::material::TexturedMqoMaterial *)new mio::material::TexturedMqoMaterial(arg1,arg2,arg3,arg4,arg5,arg6,arg7,(char const *)arg8);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__TexturedMqoMaterial, SWIG_POINTER_NEW |  0 );
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc8 == SWIG_NEWOBJ) delete[] buf8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TexturedMqoMaterial__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  mio::texture::Texture *arg7 = (mio::texture::Texture *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  mio::material::TexturedMqoMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TexturedMqoMaterial",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TexturedMqoMaterial" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TexturedMqoMaterial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TexturedMqoMaterial" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TexturedMqoMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_TexturedMqoMaterial" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_TexturedMqoMaterial" "', argument " "7"" of type '" "mio::texture::Texture *""'"); 
  }
  arg7 = reinterpret_cast< mio::texture::Texture * >(argp7);
  {
    try 
    {
      result = (mio::material::TexturedMqoMaterial *)new mio::material::TexturedMqoMaterial(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__TexturedMqoMaterial, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TexturedMqoMaterial(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 7) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_mio__texture__Texture, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_TexturedMqoMaterial__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_mio__texture__Texture, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  int res = SWIG_AsCharPtrAndSize(argv[7], 0, NULL, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_new_TexturedMqoMaterial__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_TexturedMqoMaterial'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::material::TexturedMqoMaterial::TexturedMqoMaterial(mio::Rgba,float,float,float,float,float,mio::texture::Texture *,char const *)\n"
    "    mio::material::TexturedMqoMaterial::TexturedMqoMaterial(mio::Rgba,float,float,float,float,float,mio::texture::Texture *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TexturedMqoMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedMqoMaterial *arg1 = (mio::material::TexturedMqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TexturedMqoMaterial",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedMqoMaterial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::material::TexturedMqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedMqoMaterial * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TexturedMqoMaterial_get_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedMqoMaterial *arg1 = (mio::material::TexturedMqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::Texture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TexturedMqoMaterial_get_texture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedMqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TexturedMqoMaterial_get_texture" "', argument " "1"" of type '" "mio::material::TexturedMqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedMqoMaterial * >(argp1);
  {
    try 
    {
      result = (mio::texture::Texture *)(arg1)->get_texture();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TexturedMqoMaterial_set_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedMqoMaterial *arg1 = (mio::material::TexturedMqoMaterial *) 0 ;
  mio::texture::Texture *arg2 = (mio::texture::Texture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TexturedMqoMaterial_set_texture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedMqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TexturedMqoMaterial_set_texture" "', argument " "1"" of type '" "mio::material::TexturedMqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedMqoMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TexturedMqoMaterial_set_texture" "', argument " "2"" of type '" "mio::texture::Texture *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::Texture * >(argp2);
  {
    try 
    {
      (arg1)->set_texture(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TexturedMqoMaterial_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedMqoMaterial *arg1 = (mio::material::TexturedMqoMaterial *) 0 ;
  mio::material::MaterialVisitor *arg2 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TexturedMqoMaterial_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedMqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TexturedMqoMaterial_accept" "', argument " "1"" of type '" "mio::material::TexturedMqoMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedMqoMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TexturedMqoMaterial_accept" "', argument " "2"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TexturedMqoMaterial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__TexturedMqoMaterial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TexturedPhongMaterial__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  mio::Rgba arg2 ;
  mio::Rgba arg3 ;
  mio::Rgba arg4 ;
  float arg5 ;
  mio::texture::Texture *arg6 = (mio::texture::Texture *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  mio::material::TexturedPhongMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TexturedPhongMaterial",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TexturedPhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TexturedPhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_TexturedPhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TexturedPhongMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_TexturedPhongMaterial" "', argument " "6"" of type '" "mio::texture::Texture *""'"); 
  }
  arg6 = reinterpret_cast< mio::texture::Texture * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_TexturedPhongMaterial" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  {
    try 
    {
      result = (mio::material::TexturedPhongMaterial *)new mio::material::TexturedPhongMaterial(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__TexturedPhongMaterial, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TexturedPhongMaterial__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Rgba arg1 ;
  mio::Rgba arg2 ;
  mio::Rgba arg3 ;
  mio::Rgba arg4 ;
  float arg5 ;
  mio::texture::Texture *arg6 = (mio::texture::Texture *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  mio::material::TexturedPhongMaterial *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TexturedPhongMaterial",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TexturedPhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "2"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TexturedPhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "3"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Rgba,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_TexturedPhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TexturedPhongMaterial" "', argument " "4"" of type '" "mio::Rgba""'");
    } else {
      mio::Rgba * temp = reinterpret_cast< mio::Rgba * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TexturedPhongMaterial" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_TexturedPhongMaterial" "', argument " "6"" of type '" "mio::texture::Texture *""'"); 
  }
  arg6 = reinterpret_cast< mio::texture::Texture * >(argp6);
  {
    try 
    {
      result = (mio::material::TexturedPhongMaterial *)new mio::material::TexturedPhongMaterial(arg1,arg2,arg3,arg4,arg5,arg6);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__TexturedPhongMaterial, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TexturedPhongMaterial(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Rgba, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Rgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mio__texture__Texture, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_TexturedPhongMaterial__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Rgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Rgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Rgba, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Rgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mio__texture__Texture, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_TexturedPhongMaterial__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_TexturedPhongMaterial'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::material::TexturedPhongMaterial::TexturedPhongMaterial(mio::Rgba,mio::Rgba,mio::Rgba,mio::Rgba,float,mio::texture::Texture *,char const *)\n"
    "    mio::material::TexturedPhongMaterial::TexturedPhongMaterial(mio::Rgba,mio::Rgba,mio::Rgba,mio::Rgba,float,mio::texture::Texture *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TexturedPhongMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedPhongMaterial *arg1 = (mio::material::TexturedPhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TexturedPhongMaterial",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedPhongMaterial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::material::TexturedPhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedPhongMaterial * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TexturedPhongMaterial_get_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedPhongMaterial *arg1 = (mio::material::TexturedPhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::Texture *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TexturedPhongMaterial_get_texture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedPhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TexturedPhongMaterial_get_texture" "', argument " "1"" of type '" "mio::material::TexturedPhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedPhongMaterial * >(argp1);
  {
    try 
    {
      result = (mio::texture::Texture *)(arg1)->get_texture();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TexturedPhongMaterial_set_texture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedPhongMaterial *arg1 = (mio::material::TexturedPhongMaterial *) 0 ;
  mio::texture::Texture *arg2 = (mio::texture::Texture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TexturedPhongMaterial_set_texture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedPhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TexturedPhongMaterial_set_texture" "', argument " "1"" of type '" "mio::material::TexturedPhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedPhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__Texture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TexturedPhongMaterial_set_texture" "', argument " "2"" of type '" "mio::texture::Texture *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::Texture * >(argp2);
  {
    try 
    {
      (arg1)->set_texture(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TexturedPhongMaterial_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::TexturedPhongMaterial *arg1 = (mio::material::TexturedPhongMaterial *) 0 ;
  mio::material::MaterialVisitor *arg2 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TexturedPhongMaterial_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__TexturedPhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TexturedPhongMaterial_accept" "', argument " "1"" of type '" "mio::material::TexturedPhongMaterial *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::TexturedPhongMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TexturedPhongMaterial_accept" "', argument " "2"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TexturedPhongMaterial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__TexturedPhongMaterial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ByPolygonMaterialMapping__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::material::ByPolygonMaterialMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ByPolygonMaterialMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ByPolygonMaterialMapping" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::material::ByPolygonMaterialMapping *)new mio::material::ByPolygonMaterialMapping((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ByPolygonMaterialMapping__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::ByPolygonMaterialMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ByPolygonMaterialMapping",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::material::ByPolygonMaterialMapping *)new mio::material::ByPolygonMaterialMapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ByPolygonMaterialMapping(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ByPolygonMaterialMapping__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ByPolygonMaterialMapping__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ByPolygonMaterialMapping'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::material::ByPolygonMaterialMapping::ByPolygonMaterialMapping(char const *)\n"
    "    mio::material::ByPolygonMaterialMapping::ByPolygonMaterialMapping()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ByPolygonMaterialMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::ByPolygonMaterialMapping *arg1 = (mio::material::ByPolygonMaterialMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ByPolygonMaterialMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ByPolygonMaterialMapping" "', argument " "1"" of type '" "mio::material::ByPolygonMaterialMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::ByPolygonMaterialMapping * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByPolygonMaterialMapping__get_material(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::ByPolygonMaterialMapping *arg1 = (mio::material::ByPolygonMaterialMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ByPolygonMaterialMapping__get_material",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByPolygonMaterialMapping__get_material" "', argument " "1"" of type '" "mio::material::ByPolygonMaterialMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::ByPolygonMaterialMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ByPolygonMaterialMapping__get_material" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)((mio::material::ByPolygonMaterialMapping const *)arg1)->_get_material(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByPolygonMaterialMapping_append_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::ByPolygonMaterialMapping *arg1 = (mio::material::ByPolygonMaterialMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ByPolygonMaterialMapping_append_mapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByPolygonMaterialMapping_append_mapping" "', argument " "1"" of type '" "mio::material::ByPolygonMaterialMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::ByPolygonMaterialMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ByPolygonMaterialMapping_append_mapping" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->append_mapping(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByPolygonMaterialMapping_get_polygon_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::ByPolygonMaterialMapping *arg1 = (mio::material::ByPolygonMaterialMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ByPolygonMaterialMapping_get_polygon_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByPolygonMaterialMapping_get_polygon_count" "', argument " "1"" of type '" "mio::material::ByPolygonMaterialMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::ByPolygonMaterialMapping * >(argp1);
  {
    try 
    {
      result = (int)((mio::material::ByPolygonMaterialMapping const *)arg1)->get_polygon_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByPolygonMaterialMapping_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::ByPolygonMaterialMapping *arg1 = (mio::material::ByPolygonMaterialMapping *) 0 ;
  mio::material::MaterialMappingVisitor *arg2 = (mio::material::MaterialMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ByPolygonMaterialMapping_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByPolygonMaterialMapping_accept" "', argument " "1"" of type '" "mio::material::ByPolygonMaterialMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::ByPolygonMaterialMapping * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ByPolygonMaterialMapping_accept" "', argument " "2"" of type '" "mio::material::MaterialMappingVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialMappingVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ByPolygonMaterialMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__ByPolygonMaterialMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_JointChange_position_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  mio::Vector3 *arg2 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange_position_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange_position_set" "', argument " "1"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JointChange_position_set" "', argument " "2"" of type '" "mio::Vector3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  if (arg1) (arg1)->position = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointChange_position_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange_position_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange_position_get" "', argument " "1"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  result = (mio::Vector3 *)& ((arg1)->position);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointChange_orientation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  mio::Quaternion *arg2 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange_orientation_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange_orientation_set" "', argument " "1"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JointChange_orientation_set" "', argument " "2"" of type '" "mio::Quaternion *""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  if (arg1) (arg1)->orientation = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointChange_orientation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange_orientation_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange_orientation_get" "', argument " "1"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  result = (mio::Quaternion *)& ((arg1)->orientation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JointChange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 arg1 ;
  mio::Quaternion arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_JointChange",2,2,&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_JointChange" "', argument " "1"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_JointChange" "', argument " "1"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_JointChange" "', argument " "2"" of type '" "mio::Quaternion""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_JointChange" "', argument " "2"" of type '" "mio::Quaternion""'");
    } else {
      mio::Quaternion * temp = reinterpret_cast< mio::Quaternion * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = (mio::rigging::JointChange *)new mio::rigging::JointChange(arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JointChange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Vector3 arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_JointChange",1,1,&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_JointChange" "', argument " "1"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_JointChange" "', argument " "1"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    try 
    {
      result = (mio::rigging::JointChange *)new mio::rigging::JointChange(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JointChange__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_JointChange",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::rigging::JointChange *)new mio::rigging::JointChange();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JointChange(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_JointChange__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_JointChange__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Quaternion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_JointChange__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_JointChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::JointChange::JointChange(mio::Vector3,mio::Quaternion)\n"
    "    mio::rigging::JointChange::JointChange(mio::Vector3)\n"
    "    mio::rigging::JointChange::JointChange()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_JointChange___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange___copy__" "', argument " "1"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  {
    try 
    {
      result = (arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointChange_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  mio::rigging::JointChange *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange_is_near" "', argument " "1"" of type '" "mio::rigging::JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JointChange_is_near" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JointChange_is_near" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JointChange_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)((mio::rigging::JointChange const *)arg1)->is_near((mio::rigging::JointChange const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointChange_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  mio::rigging::JointChange *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointChange_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointChange_is_near" "', argument " "1"" of type '" "mio::rigging::JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JointChange_is_near" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JointChange_is_near" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  {
    try 
    {
      result = (bool)((mio::rigging::JointChange const *)arg1)->is_near((mio::rigging::JointChange const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointChange_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__JointChange, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__rigging__JointChange, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_JointChange_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__JointChange, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__rigging__JointChange, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_JointChange_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'JointChange_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::JointChange::is_near(mio::rigging::JointChange const &,float) const\n"
    "    mio::rigging::JointChange::is_near(mio::rigging::JointChange const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_JointChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointChange *arg1 = (mio::rigging::JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JointChange" "', argument " "1"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointChange * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JointChange_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__JointChange, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Joint_index_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_index_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_index_set" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Joint_index_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->index = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_index_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_index_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_index_get" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  result = (int) ((arg1)->index);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_parent_index_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_parent_index_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_parent_index_set" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Joint_parent_index_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->parent_index = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_parent_index_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_parent_index_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_parent_index_get" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  result = (int) ((arg1)->parent_index);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_position_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  mio::Vector3 *arg2 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_position_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_position_set" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joint_position_set" "', argument " "2"" of type '" "mio::Vector3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  if (arg1) (arg1)->position = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_position_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_position_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_position_get" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  result = (mio::Vector3 *)& ((arg1)->position);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_orientation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  mio::Quaternion *arg2 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_orientation_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_orientation_set" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joint_orientation_set" "', argument " "2"" of type '" "mio::Quaternion *""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  if (arg1) (arg1)->orientation = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_orientation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_orientation_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_orientation_get" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  result = (mio::Quaternion *)& ((arg1)->orientation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  mio::Vector3 arg2 ;
  mio::Quaternion arg3 ;
  int arg4 ;
  int arg5 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Joint",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Quaternion,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Joint" "', argument " "3"" of type '" "mio::Quaternion""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "3"" of type '" "mio::Quaternion""'");
    } else {
      mio::Quaternion * temp = reinterpret_cast< mio::Quaternion * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Joint" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Joint" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try 
    {
      result = (mio::rigging::Joint *)new mio::rigging::Joint((char const *)arg1,arg2,arg3,arg4,arg5);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  mio::Vector3 arg2 ;
  mio::Quaternion arg3 ;
  int arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Joint",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Quaternion,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Joint" "', argument " "3"" of type '" "mio::Quaternion""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "3"" of type '" "mio::Quaternion""'");
    } else {
      mio::Quaternion * temp = reinterpret_cast< mio::Quaternion * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Joint" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try 
    {
      result = (mio::rigging::Joint *)new mio::rigging::Joint((char const *)arg1,arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  mio::Vector3 arg2 ;
  mio::Quaternion arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Joint",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Quaternion,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Joint" "', argument " "3"" of type '" "mio::Quaternion""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "3"" of type '" "mio::Quaternion""'");
    } else {
      mio::Quaternion * temp = reinterpret_cast< mio::Quaternion * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try 
    {
      result = (mio::rigging::Joint *)new mio::rigging::Joint((char const *)arg1,arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  mio::Vector3 arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "2"" of type '" "mio::Vector3""'");
    } else {
      mio::Vector3 * temp = reinterpret_cast< mio::Vector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = (mio::rigging::Joint *)new mio::rigging::Joint((char const *)arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Joint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::rigging::Joint *)new mio::rigging::Joint((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Joint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__rigging__Joint,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joint" "', argument " "1"" of type '" "mio::rigging::Joint const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joint" "', argument " "1"" of type '" "mio::rigging::Joint const &""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Joint *)new mio::rigging::Joint((mio::rigging::Joint const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__rigging__Joint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Joint__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Joint__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Joint__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Quaternion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Joint__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Quaternion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_Joint__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Quaternion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_Joint__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Joint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Joint::Joint(char const *,mio::Vector3,mio::Quaternion,int,int)\n"
    "    mio::rigging::Joint::Joint(char const *,mio::Vector3,mio::Quaternion,int)\n"
    "    mio::rigging::Joint::Joint(char const *,mio::Vector3,mio::Quaternion)\n"
    "    mio::rigging::Joint::Joint(char const *,mio::Vector3)\n"
    "    mio::rigging::Joint::Joint(char const *)\n"
    "    mio::rigging::Joint::Joint(mio::rigging::Joint const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Joint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Joint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Joint" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_get_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_get_name" "', argument " "1"" of type '" "mio::rigging::Joint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      result = (char *)((mio::rigging::Joint const *)arg1)->get_name();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_get_translation_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_get_translation_matrix",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_get_translation_matrix" "', argument " "1"" of type '" "mio::rigging::Joint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      result = ((mio::rigging::Joint const *)arg1)->get_translation_matrix();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_get_translation_transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_get_translation_transform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_get_translation_transform" "', argument " "1"" of type '" "mio::rigging::Joint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      result = ((mio::rigging::Joint const *)arg1)->get_translation_transform();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_get_rotation_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_get_rotation_matrix",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_get_rotation_matrix" "', argument " "1"" of type '" "mio::rigging::Joint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      result = ((mio::rigging::Joint const *)arg1)->get_rotation_matrix();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_get_rotation_transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_get_rotation_transform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_get_rotation_transform" "', argument " "1"" of type '" "mio::rigging::Joint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  {
    try 
    {
      result = ((mio::rigging::Joint const *)arg1)->get_rotation_transform();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_apply_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  mio::rigging::JointChange *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_apply_joint_change",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_apply_joint_change" "', argument " "1"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joint_apply_joint_change" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Joint_apply_joint_change" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  {
    try 
    {
      (arg1)->apply_joint_change((mio::rigging::JointChange const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joint_get_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Joint *arg1 = (mio::rigging::Joint *) 0 ;
  mio::rigging::Joint *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Joint_get_joint_change",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joint_get_joint_change" "', argument " "1"" of type '" "mio::rigging::Joint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Joint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Joint,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joint_get_joint_change" "', argument " "2"" of type '" "mio::rigging::Joint const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Joint_get_joint_change" "', argument " "2"" of type '" "mio::rigging::Joint const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Joint * >(argp2);
  {
    try 
    {
      result = ((mio::rigging::Joint const *)arg1)->get_joint_change((mio::rigging::Joint const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Joint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__Joint, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_NameJointChangePair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  mio::rigging::JointChange arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::NameJointChangePair *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NameJointChangePair",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NameJointChangePair" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NameJointChangePair" "', argument " "2"" of type '" "mio::rigging::JointChange""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NameJointChangePair" "', argument " "2"" of type '" "mio::rigging::JointChange""'");
    } else {
      mio::rigging::JointChange * temp = reinterpret_cast< mio::rigging::JointChange * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try 
    {
      result = (mio::rigging::NameJointChangePair *)new mio::rigging::NameJointChangePair((char const *)arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__NameJointChangePair, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NameJointChangePair_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePair *arg1 = (mio::rigging::NameJointChangePair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NameJointChangePair_get_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__NameJointChangePair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NameJointChangePair_get_name" "', argument " "1"" of type '" "mio::rigging::NameJointChangePair const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::NameJointChangePair * >(argp1);
  {
    try 
    {
      result = (char *)((mio::rigging::NameJointChangePair const *)arg1)->get_name();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NameJointChangePair_get_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePair *arg1 = (mio::rigging::NameJointChangePair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"NameJointChangePair_get_joint_change",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__NameJointChangePair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NameJointChangePair_get_joint_change" "', argument " "1"" of type '" "mio::rigging::NameJointChangePair const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::NameJointChangePair * >(argp1);
  {
    try 
    {
      result = ((mio::rigging::NameJointChangePair const *)arg1)->get_joint_change();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NameJointChangePair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePair *arg1 = (mio::rigging::NameJointChangePair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_NameJointChangePair",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__NameJointChangePair, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NameJointChangePair" "', argument " "1"" of type '" "mio::rigging::NameJointChangePair *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::NameJointChangePair * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NameJointChangePair_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__NameJointChangePair, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Pose__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Pose",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::rigging::Pose *)new mio::rigging::Pose();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Pose, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Pose__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Pose *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Pose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__rigging__Pose,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Pose" "', argument " "1"" of type '" "mio::rigging::Pose const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Pose" "', argument " "1"" of type '" "mio::rigging::Pose const &""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Pose *)new mio::rigging::Pose((mio::rigging::Pose const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Pose, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Pose(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Pose__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__rigging__Pose, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Pose__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Pose'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Pose::Pose()\n"
    "    mio::rigging::Pose::Pose(mio::rigging::Pose const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Pose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Pose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Pose" "', argument " "1"" of type '" "mio::rigging::Pose *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pose_has_joint_change_of(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pose_has_joint_change_of",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pose_has_joint_change_of" "', argument " "1"" of type '" "mio::rigging::Pose const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Pose_has_joint_change_of" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (bool)((mio::rigging::Pose const *)arg1)->has_joint_change_of((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pose_get_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pose_get_joint_change",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pose_get_joint_change" "', argument " "1"" of type '" "mio::rigging::Pose const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Pose_get_joint_change" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = ((mio::rigging::Pose const *)arg1)->get_joint_change((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pose_set_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  char *arg2 = (char *) 0 ;
  mio::rigging::JointChange *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pose_set_joint_change",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pose_set_joint_change" "', argument " "1"" of type '" "mio::rigging::Pose *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Pose_set_joint_change" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pose_set_joint_change" "', argument " "3"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Pose_set_joint_change" "', argument " "3"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg3 = reinterpret_cast< mio::rigging::JointChange * >(argp3);
  {
    try 
    {
      (arg1)->set_joint_change((char const *)arg2,(mio::rigging::JointChange const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pose_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pose_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pose_clear" "', argument " "1"" of type '" "mio::rigging::Pose *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  {
    try 
    {
      (arg1)->clear();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pose_get_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::NameJointChangePairIterator result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pose_get_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pose_get_iterator" "', argument " "1"" of type '" "mio::rigging::Pose *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  {
    try 
    {
      result = (arg1)->get_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::NameJointChangePairIterator(static_cast< const mio::rigging::NameJointChangePairIterator& >(result))), SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Pose_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__Pose, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_NameJointChangePairIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePairIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NameJointChangePairIterator",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::rigging::NameJointChangePairIterator *)new mio::rigging::NameJointChangePairIterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NameJointChangePairIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Pose *arg1 = (mio::rigging::Pose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::NameJointChangePairIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NameJointChangePairIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NameJointChangePairIterator" "', argument " "1"" of type '" "mio::rigging::Pose *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Pose * >(argp1);
  {
    try 
    {
      result = (mio::rigging::NameJointChangePairIterator *)new mio::rigging::NameJointChangePairIterator(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NameJointChangePairIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_NameJointChangePairIterator__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_NameJointChangePairIterator__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_NameJointChangePairIterator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::NameJointChangePairIterator::NameJointChangePairIterator()\n"
    "    mio::rigging::NameJointChangePairIterator::NameJointChangePairIterator(mio::rigging::Pose *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_NameJointChangePairIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePairIterator *arg1 = (mio::rigging::NameJointChangePairIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_NameJointChangePairIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NameJointChangePairIterator" "', argument " "1"" of type '" "mio::rigging::NameJointChangePairIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::NameJointChangePairIterator * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NameJointChangePairIterator_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePairIterator *arg1 = (mio::rigging::NameJointChangePairIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"NameJointChangePairIterator_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NameJointChangePairIterator_has_next" "', argument " "1"" of type '" "mio::rigging::NameJointChangePairIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::NameJointChangePairIterator * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NameJointChangePairIterator_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::NameJointChangePairIterator *arg1 = (mio::rigging::NameJointChangePairIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::rigging::NameJointChangePair > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"NameJointChangePairIterator_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NameJointChangePairIterator_get_next" "', argument " "1"" of type '" "mio::rigging::NameJointChangePairIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::NameJointChangePairIterator * >(argp1);
  {
    try 
    {
      result = (arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::NameJointChangePair(static_cast< const mio::rigging::NameJointChangePair& >(result))), SWIGTYPE_p_mio__rigging__NameJointChangePair, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NameJointChangePairIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__NameJointChangePairIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Armature__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Armature" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::rigging::Armature *)new mio::rigging::Armature((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Armature__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Armature",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::rigging::Armature *)new mio::rigging::Armature();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Armature__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Armature",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Armature" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Armature" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::rigging::Armature *)new mio::rigging::Armature(arg1,(char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Armature__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Armature" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)new mio::rigging::Armature(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Armature(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Armature__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Armature__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Armature__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Armature__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Armature'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::Armature(char const *)\n"
    "    mio::rigging::Armature::Armature()\n"
    "    mio::rigging::Armature::Armature(mio::rigging::Armature *,char const *)\n"
    "    mio::rigging::Armature::Armature(mio::rigging::Armature *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Armature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Armature" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_append_joint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  mio::rigging::Joint *arg2 = (mio::rigging::Joint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_append_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_append_joint" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_append_joint" "', argument " "2"" of type '" "mio::rigging::Joint *""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Joint * >(argp2);
  {
    try 
    {
      (arg1)->append_joint(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature__get_joint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__get_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__get_joint" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__get_joint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::rigging::Joint *)(arg1)->_get_joint(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_get_joint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::rigging::Joint *)(arg1)->get_joint(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature__set_joint_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  mio::Vector3 *arg3 = 0 ;
  mio::Quaternion *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__set_joint_parameter",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__set_joint_parameter" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__set_joint_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Armature__set_joint_parameter" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature__set_joint_parameter" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Armature__set_joint_parameter" "', argument " "4"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature__set_joint_parameter" "', argument " "4"" of type '" "mio::Quaternion const &""'"); 
  }
  arg4 = reinterpret_cast< mio::Quaternion * >(argp4);
  {
    try 
    {
      (arg1)->_set_joint_parameter(arg2,(mio::Vector3 const &)*arg3,(mio::Quaternion const &)*arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_set_joint_parameter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  mio::Vector3 *arg3 = 0 ;
  mio::Quaternion *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_set_joint_parameter",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_set_joint_parameter" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_set_joint_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Armature_set_joint_parameter" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_set_joint_parameter" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Armature_set_joint_parameter" "', argument " "4"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_set_joint_parameter" "', argument " "4"" of type '" "mio::Quaternion const &""'"); 
  }
  arg4 = reinterpret_cast< mio::Quaternion * >(argp4);
  {
    try 
    {
      (arg1)->set_joint_parameter(arg2,(mio::Vector3 const &)*arg3,(mio::Quaternion const &)*arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_set_joint_parameter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  mio::Vector3 *arg3 = 0 ;
  mio::Quaternion *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_set_joint_parameter",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_set_joint_parameter" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_set_joint_parameter" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Armature_set_joint_parameter" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_set_joint_parameter" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Armature_set_joint_parameter" "', argument " "4"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_set_joint_parameter" "', argument " "4"" of type '" "mio::Quaternion const &""'"); 
  }
  arg4 = reinterpret_cast< mio::Quaternion * >(argp4);
  {
    try 
    {
      (arg1)->set_joint_parameter((char const *)arg2,(mio::Vector3 const &)*arg3,(mio::Quaternion const &)*arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_set_joint_parameter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Vector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Quaternion, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Armature_set_joint_parameter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mio__Vector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mio__Quaternion, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Armature_set_joint_parameter__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_set_joint_parameter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::set_joint_parameter(int,mio::Vector3 const &,mio::Quaternion const &)\n"
    "    mio::rigging::Armature::set_joint_parameter(char const *,mio::Vector3 const &,mio::Quaternion const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_joint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::rigging::Joint *)(arg1)->get_joint((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Armature_get_joint__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Armature_get_joint__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_get_joint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::get_joint(int)\n"
    "    mio::rigging::Armature::get_joint(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_count" "', argument " "1"" of type '" "mio::rigging::Armature const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (int)((mio::rigging::Armature const *)arg1)->get_joint_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature__set_parent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__set_parent",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__set_parent" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__set_parent" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Armature__set_parent" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->_set_parent(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_set_parent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_set_parent",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_set_parent" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_set_parent" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Armature_set_parent" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->set_parent(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_set_parent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_set_parent",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_set_parent" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_set_parent" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Armature_set_parent" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try 
    {
      (arg1)->set_parent((char const *)arg2,(char const *)arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_set_parent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Armature_set_parent__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Armature_set_parent__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_set_parent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::set_parent(int,int)\n"
    "    mio::rigging::Armature::set_parent(char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature__get_joint_world_position(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__get_joint_world_position",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__get_joint_world_position" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__get_joint_world_position" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->_get_joint_world_position(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_world_position__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_world_position",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_world_position" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_get_joint_world_position" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->get_joint_world_position(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature__get_joint_world_orientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__get_joint_world_orientation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__get_joint_world_orientation" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__get_joint_world_orientation" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->_get_joint_world_orientation(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_world_orientation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_world_orientation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_world_orientation" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_get_joint_world_orientation" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->get_joint_world_orientation(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_world_position__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_world_position",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_world_position" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_joint_world_position" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (arg1)->get_joint_world_position((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_world_position(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Armature_get_joint_world_position__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Armature_get_joint_world_position__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_get_joint_world_position'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::get_joint_world_position(int)\n"
    "    mio::rigging::Armature::get_joint_world_position(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_world_orientation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_world_orientation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_world_orientation" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_joint_world_orientation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (arg1)->get_joint_world_orientation((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_world_orientation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Armature_get_joint_world_orientation__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Armature_get_joint_world_orientation__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_get_joint_world_orientation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::get_joint_world_orientation(int)\n"
    "    mio::rigging::Armature::get_joint_world_orientation(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature__get_joint_to_world_matrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__get_joint_to_world_matrix",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__get_joint_to_world_matrix" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__get_joint_to_world_matrix" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->_get_joint_to_world_matrix(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_to_world_matrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_to_world_matrix",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_to_world_matrix" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_get_joint_to_world_matrix" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->get_joint_to_world_matrix(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_to_world_matrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Matrix4x4 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_to_world_matrix",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_to_world_matrix" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_joint_to_world_matrix" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (arg1)->get_joint_to_world_matrix((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Matrix4x4(static_cast< const mio::Matrix4x4& >(result))), SWIGTYPE_p_mio__Matrix4x4, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_to_world_matrix(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Armature_get_joint_to_world_matrix__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Armature_get_joint_to_world_matrix__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_get_joint_to_world_matrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::get_joint_to_world_matrix(int)\n"
    "    mio::rigging::Armature::get_joint_to_world_matrix(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature__get_joint_to_world_transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature__get_joint_to_world_transform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature__get_joint_to_world_transform" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature__get_joint_to_world_transform" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->_get_joint_to_world_transform(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_to_world_transform__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_to_world_transform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_to_world_transform" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Armature_get_joint_to_world_transform" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (arg1)->get_joint_to_world_transform(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_to_world_transform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Transform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_to_world_transform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_to_world_transform" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_joint_to_world_transform" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (arg1)->get_joint_to_world_transform(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Transform(static_cast< const mio::Transform& >(result))), SWIGTYPE_p_mio__Transform, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_to_world_transform(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Armature_get_joint_to_world_transform__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Armature_get_joint_to_world_transform__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_get_joint_to_world_transform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::get_joint_to_world_transform(int)\n"
    "    mio::rigging::Armature::get_joint_to_world_transform(char *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature_get_pose__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  mio::rigging::Armature *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_pose",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_pose" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_get_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__rigging__Armature,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Armature_get_pose" "', argument " "3"" of type '" "mio::rigging::Armature &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_get_pose" "', argument " "3"" of type '" "mio::rigging::Armature &""'"); 
  }
  arg3 = reinterpret_cast< mio::rigging::Armature * >(argp3);
  {
    try 
    {
      (arg1)->get_pose(*arg2,*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_pose__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  mio::rigging::Armature *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Pose *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_pose",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_pose" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Armature,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_get_pose" "', argument " "2"" of type '" "mio::rigging::Armature &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_get_pose" "', argument " "2"" of type '" "mio::rigging::Armature &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Armature * >(argp2);
  {
    try 
    {
      result = (mio::rigging::Pose *)(arg1)->get_pose(*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_pose(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Armature_get_pose__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Armature_get_pose__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Armature_get_pose'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::Armature::get_pose(mio::rigging::Pose &,mio::rigging::Armature &)\n"
    "    mio::rigging::Armature::get_pose(mio::rigging::Armature &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Armature_morph(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  mio::rigging::Armature *arg2 = 0 ;
  mio::rigging::Pose *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_morph",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_morph" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Armature,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Armature_morph" "', argument " "2"" of type '" "mio::rigging::Armature &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_morph" "', argument " "2"" of type '" "mio::rigging::Armature &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Armature * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__rigging__Pose,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Armature_morph" "', argument " "3"" of type '" "mio::rigging::Pose const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Armature_morph" "', argument " "3"" of type '" "mio::rigging::Pose const &""'"); 
  }
  arg3 = reinterpret_cast< mio::rigging::Pose * >(argp3);
  {
    try 
    {
      (arg1)->morph(*arg2,(mio::rigging::Pose const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature___copy__" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)(arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature___deepcopy__" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)(arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Armature_get_joint_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointIterator result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Armature_get_joint_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Armature_get_joint_iterator" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (arg1)->get_joint_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointIterator(static_cast< const mio::rigging::JointIterator& >(result))), SWIGTYPE_p_mio__rigging__JointIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Armature_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__Armature, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_JointIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_JointIterator",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::rigging::JointIterator *)new mio::rigging::JointIterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__JointIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JointIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_JointIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_JointIterator" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (mio::rigging::JointIterator *)new mio::rigging::JointIterator(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__JointIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JointIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_JointIterator__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_JointIterator__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_JointIterator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::JointIterator::JointIterator()\n"
    "    mio::rigging::JointIterator::JointIterator(mio::rigging::Armature *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_JointIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointIterator *arg1 = (mio::rigging::JointIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_JointIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JointIterator" "', argument " "1"" of type '" "mio::rigging::JointIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointIterator * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointIterator_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointIterator *arg1 = (mio::rigging::JointIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointIterator_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointIterator_has_next" "', argument " "1"" of type '" "mio::rigging::JointIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointIterator * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointIterator_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::JointIterator *arg1 = (mio::rigging::JointIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Joint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointIterator_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__JointIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointIterator_get_next" "', argument " "1"" of type '" "mio::rigging::JointIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::JointIterator * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Joint *)(arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Joint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JointIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__JointIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *X_ROTATE_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "X_ROTATE",SWIG_From_int(static_cast< int >(0)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *Y_ROTATE_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "Y_ROTATE",SWIG_From_int(static_cast< int >(1)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *Z_ROTATE_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "Z_ROTATE",SWIG_From_int(static_cast< int >(2)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *X_TRANSLATE_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "X_TRANSLATE",SWIG_From_int(static_cast< int >(3)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *Y_TRANSLATE_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "Y_TRANSLATE",SWIG_From_int(static_cast< int >(4)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *Z_TRANSLATE_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "Z_TRANSLATE",SWIG_From_int(static_cast< int >(5)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *IK_JOINT_PARAMETER_COUNT_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "IK_JOINT_PARAMETER_COUNT",SWIG_From_int(static_cast< int >(6)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *_wrap_new_IKJointParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKJointParameters",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::IKJointParameters *)new mio::ik::IKJointParameters();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJointParameters, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointParameters___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointParameters___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointParameters___getitem__" "', argument " "1"" of type '" "mio::ik::IKJointParameters *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJointParameters___getitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->__getitem__(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointParameters___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointParameters___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointParameters___setitem__" "', argument " "1"" of type '" "mio::ik::IKJointParameters *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJointParameters___setitem__" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJointParameters___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->__setitem__(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointParameters_is_near__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  mio::ik::IKJointParameters *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointParameters_is_near",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointParameters_is_near" "', argument " "1"" of type '" "mio::ik::IKJointParameters const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__ik__IKJointParameters,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJointParameters_is_near" "', argument " "2"" of type '" "mio::ik::IKJointParameters const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJointParameters_is_near" "', argument " "2"" of type '" "mio::ik::IKJointParameters const &""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKJointParameters * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJointParameters_is_near" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      result = (bool)((mio::ik::IKJointParameters const *)arg1)->is_near((mio::ik::IKJointParameters const &)*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointParameters_is_near__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  mio::ik::IKJointParameters *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointParameters_is_near",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointParameters_is_near" "', argument " "1"" of type '" "mio::ik::IKJointParameters const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__ik__IKJointParameters,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJointParameters_is_near" "', argument " "2"" of type '" "mio::ik::IKJointParameters const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJointParameters_is_near" "', argument " "2"" of type '" "mio::ik::IKJointParameters const &""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKJointParameters * >(argp2);
  {
    try 
    {
      result = (bool)((mio::ik::IKJointParameters const *)arg1)->is_near((mio::ik::IKJointParameters const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointParameters_is_near(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKJointParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__ik__IKJointParameters, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKJointParameters_is_near__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKJointParameters, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__ik__IKJointParameters, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IKJointParameters_is_near__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKJointParameters_is_near'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKJointParameters::is_near(mio::ik::IKJointParameters const &,float) const\n"
    "    mio::ik::IKJointParameters::is_near(mio::ik::IKJointParameters const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKJointParameters___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKJointParameters result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointParameters___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointParameters___copy__" "', argument " "1"" of type '" "mio::ik::IKJointParameters *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  {
    try 
    {
      result = (arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKJointParameters(static_cast< const mio::ik::IKJointParameters& >(result))), SWIGTYPE_p_mio__ik__IKJointParameters, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointParameters___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKJointParameters result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointParameters___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointParameters___deepcopy__" "', argument " "1"" of type '" "mio::ik::IKJointParameters *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  {
    try 
    {
      result = (arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKJointParameters(static_cast< const mio::ik::IKJointParameters& >(result))), SWIGTYPE_p_mio__ik__IKJointParameters, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IKJointParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointParameters *arg1 = (mio::ik::IKJointParameters *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKJointParameters",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointParameters, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKJointParameters" "', argument " "1"" of type '" "mio::ik::IKJointParameters *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointParameters * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKJointParameters_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKJointParameters, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKEndEffector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKEndEffector" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IKEndEffector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)new mio::ik::IKEndEffector((char const *)arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKEndEffector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffector",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__ik__IKEndEffector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKEndEffector" "', argument " "1"" of type '" "mio::ik::IKEndEffector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IKEndEffector" "', argument " "1"" of type '" "mio::ik::IKEndEffector const &""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)new mio::ik::IKEndEffector((mio::ik::IKEndEffector const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKEndEffector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__ik__IKEndEffector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IKEndEffector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_IKEndEffector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IKEndEffector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKEndEffector::IKEndEffector(char const *,int)\n"
    "    mio::ik::IKEndEffector::IKEndEffector(mio::ik::IKEndEffector const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IKEndEffector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKEndEffector",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKEndEffector" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector_get_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector_get_index",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector_get_index" "', argument " "1"" of type '" "mio::ik::IKEndEffector const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      result = (int)((mio::ik::IKEndEffector const *)arg1)->get_index();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector_get_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector_get_name" "', argument " "1"" of type '" "mio::ik::IKEndEffector const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      result = (char *)((mio::ik::IKEndEffector const *)arg1)->get_name();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector_append_ik_joint_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector_append_ik_joint_index",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector_append_ik_joint_index" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKEndEffector_append_ik_joint_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->append_ik_joint_index(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector___copy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::ik::IKEndEffector > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector___copy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector___copy__" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      result = (arg1)->__copy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKEndEffector(static_cast< const mio::ik::IKEndEffector& >(result))), SWIGTYPE_p_mio__ik__IKEndEffector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector___deepcopy__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::ik::IKEndEffector > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector___deepcopy__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector___deepcopy__" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      result = (arg1)->__deepcopy__();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKEndEffector(static_cast< const mio::ik::IKEndEffector& >(result))), SWIGTYPE_p_mio__ik__IKEndEffector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector_get_ik_joint_index_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector_get_ik_joint_index_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector_get_ik_joint_index_count" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_ik_joint_index_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector__get_ik_joint_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector__get_ik_joint_index",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector__get_ik_joint_index" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKEndEffector__get_ik_joint_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->_get_ik_joint_index(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector_get_ik_joint_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector_get_ik_joint_index",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector_get_ik_joint_index" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKEndEffector_get_ik_joint_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)(arg1)->get_ik_joint_index(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffector_is_influenced_by(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffector *arg1 = (mio::ik::IKEndEffector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffector_is_influenced_by",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffector_is_influenced_by" "', argument " "1"" of type '" "mio::ik::IKEndEffector *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffector * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKEndEffector_is_influenced_by" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (bool)(arg1)->is_influenced_by(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKEndEffector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKEndEffector, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKJoint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKJoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKJoint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IKJoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::ik::IKJoint *)new mio::ik::IKJoint((char const *)arg1,arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKJoint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKJoint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__ik__IKJoint,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKJoint" "', argument " "1"" of type '" "mio::ik::IKJoint const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IKJoint" "', argument " "1"" of type '" "mio::ik::IKJoint const &""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKJoint *)new mio::ik::IKJoint((mio::ik::IKJoint const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKJoint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__ik__IKJoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IKJoint__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_IKJoint__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IKJoint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKJoint::IKJoint(char const *,int)\n"
    "    mio::ik::IKJoint::IKJoint(mio::ik::IKJoint const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IKJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKJoint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKJoint" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_name" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (char *)((mio::ik::IKJoint const *)arg1)->get_name();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__set_limit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__set_limit",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__set_limit" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__set_limit" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJoint__set_limit" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKJoint__set_limit" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      (arg1)->_set_limit(arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_set_limit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_set_limit",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_set_limit" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_set_limit" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJoint_set_limit" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKJoint_set_limit" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      (arg1)->set_limit(arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__get_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__get_lower_bound",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__get_lower_bound" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__get_lower_bound" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->_get_lower_bound(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_lower_bound",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_lower_bound" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_get_lower_bound" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->get_lower_bound(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__get_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__get_upper_bound",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__get_upper_bound" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__get_upper_bound" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->_get_upper_bound(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_upper_bound",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_upper_bound" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_get_upper_bound" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->get_upper_bound(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__enable_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__enable_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__enable_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__enable_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->_enable_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_enable_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_enable_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_enable_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_enable_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->enable_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__disable_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__disable_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__disable_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__disable_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->_disable_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_disable_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_disable_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_disable_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_disable_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->disable_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__is_parameter_enabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__is_parameter_enabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__is_parameter_enabled" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__is_parameter_enabled" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (bool)(arg1)->_is_parameter_enabled(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_is_parameter_enabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_is_parameter_enabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_is_parameter_enabled" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_is_parameter_enabled" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (bool)(arg1)->is_parameter_enabled(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_index",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_index" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_index();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__get_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__get_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__get_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__get_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->_get_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_get_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->get_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__set_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__set_parameter",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__set_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__set_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJoint__set_parameter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->_set_parameter(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_set_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_set_parameter",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_set_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_set_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJoint_set_parameter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->set_parameter(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__get_stiffness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__get_stiffness",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__get_stiffness" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__get_stiffness" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->_get_stiffness(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_stiffness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_stiffness",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_stiffness" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_get_stiffness" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (float)(arg1)->get_stiffness(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint__set_stiffness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__set_stiffness",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__set_stiffness" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__set_stiffness" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJoint__set_stiffness" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->_set_stiffness(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_set_stiffness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_set_stiffness",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_set_stiffness" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_set_stiffness" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKJoint_set_stiffness" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->set_stiffness(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_assign_joint_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  mio::ik::IKJointParameters *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_assign_joint_parameters",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_assign_joint_parameters" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__ik__IKJointParameters,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJoint_assign_joint_parameters" "', argument " "2"" of type '" "mio::ik::IKJointParameters const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJoint_assign_joint_parameters" "', argument " "2"" of type '" "mio::ik::IKJointParameters const &""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKJointParameters * >(argp2);
  {
    try 
    {
      (arg1)->assign_joint_parameters((mio::ik::IKJointParameters const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_set_according_to_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  mio::rigging::JointChange *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_set_according_to_joint_change",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_set_according_to_joint_change" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJoint_set_according_to_joint_change" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJoint_set_according_to_joint_change" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  {
    try 
    {
      (arg1)->set_according_to_joint_change((mio::rigging::JointChange const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_yaw_quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_yaw_quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_yaw_quaternion" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->get_yaw_quaternion();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_pitch_quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_pitch_quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_pitch_quaternion" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->get_pitch_quaternion();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_roll_quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_roll_quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_roll_quaternion" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->get_roll_quaternion();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_rotation_axis_in_joint_space(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_rotation_axis_in_joint_space",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_rotation_axis_in_joint_space" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_get_rotation_axis_in_joint_space" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->get_rotation_axis_in_joint_space(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_position_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_position_change",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_position_change" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->get_position_change();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_orientation_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_orientation_change",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_orientation_change" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->get_orientation_change();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_yaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_yaw",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_yaw" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (float)((mio::ik::IKJoint const *)arg1)->get_yaw();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_pitch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_pitch",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_pitch" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (float)((mio::ik::IKJoint const *)arg1)->get_pitch();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_roll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_roll" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (float)((mio::ik::IKJoint const *)arg1)->get_roll();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_rotate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_rotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_rotate" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJoint_rotate" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJoint_rotate" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->rotate((mio::Vector3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_rotate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_rotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_rotate" "', argument " "1"" of type '" "mio::ik::IKJoint const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJoint_rotate" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJoint_rotate" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = ((mio::ik::IKJoint const *)arg1)->rotate((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_rotate(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKJoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Vector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKJoint_rotate__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKJoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKJoint_rotate__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKJoint_rotate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKJoint::rotate(mio::Vector3 const &) const\n"
    "    mio::ik::IKJoint::rotate(mio::Point3 const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKJoint__clamp_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint__clamp_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint__clamp_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint__clamp_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->_clamp_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_clamp_parameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_clamp_parameter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_clamp_parameter" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKJoint_clamp_parameter" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      (arg1)->clamp_parameter(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_clamp_all_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_clamp_all_parameters",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_clamp_all_parameters" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      (arg1)->clamp_all_parameters();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_rotation_axis_to_joint_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_rotation_axis_to_joint_rotation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_rotation_axis_to_joint_rotation" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (arg1)->get_rotation_axis_to_joint_rotation();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_set_rotation_to_axis_joint_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_set_rotation_to_axis_joint_rotation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_set_rotation_to_axis_joint_rotation" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKJoint_set_rotation_to_axis_joint_rotation" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKJoint_set_rotation_to_axis_joint_rotation" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      (arg1)->set_rotation_to_axis_joint_rotation((mio::Quaternion const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_dof(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_dof",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_dof" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_dof();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_get_joint_change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_get_joint_change",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_get_joint_change" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      result = (arg1)->get_joint_change();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJoint_clear_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJoint *arg1 = (mio::ik::IKJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJoint_clear_parameters",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJoint_clear_parameters" "', argument " "1"" of type '" "mio::ik::IKJoint *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJoint * >(argp1);
  {
    try 
    {
      (arg1)->clear_parameters();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKJoint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKJoint, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_NamePositionPair__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::NamePositionPair *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NamePositionPair",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::NamePositionPair *)new mio::ik::NamePositionPair();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__NamePositionPair, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NamePositionPair__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  mio::Point3 *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::NamePositionPair *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NamePositionPair",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NamePositionPair" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NamePositionPair" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NamePositionPair" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      result = (mio::ik::NamePositionPair *)new mio::ik::NamePositionPair((char const *)arg1,(mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__NamePositionPair, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NamePositionPair__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::NamePositionPair *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::NamePositionPair *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NamePositionPair",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__ik__NamePositionPair,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NamePositionPair" "', argument " "1"" of type '" "mio::ik::NamePositionPair const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NamePositionPair" "', argument " "1"" of type '" "mio::ik::NamePositionPair const &""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::NamePositionPair * >(argp1);
  {
    try 
    {
      result = (mio::ik::NamePositionPair *)new mio::ik::NamePositionPair((mio::ik::NamePositionPair const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__NamePositionPair, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NamePositionPair(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_NamePositionPair__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__ik__NamePositionPair, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_NamePositionPair__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mio__Point3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_NamePositionPair__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_NamePositionPair'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::NamePositionPair::NamePositionPair()\n"
    "    mio::ik::NamePositionPair::NamePositionPair(char const *,mio::Point3 const &)\n"
    "    mio::ik::NamePositionPair::NamePositionPair(mio::ik::NamePositionPair const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_NamePositionPair_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::NamePositionPair *arg1 = (mio::ik::NamePositionPair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NamePositionPair_get_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__NamePositionPair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NamePositionPair_get_name" "', argument " "1"" of type '" "mio::ik::NamePositionPair *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::NamePositionPair * >(argp1);
  {
    try 
    {
      result = (char *)(arg1)->get_name();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NamePositionPair_get_position(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::NamePositionPair *arg1 = (mio::ik::NamePositionPair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"NamePositionPair_get_position",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__NamePositionPair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NamePositionPair_get_position" "', argument " "1"" of type '" "mio::ik::NamePositionPair *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::NamePositionPair * >(argp1);
  {
    try 
    {
      result = (arg1)->get_position();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NamePositionPair_set_position(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::NamePositionPair *arg1 = (mio::ik::NamePositionPair *) 0 ;
  mio::Point3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NamePositionPair_set_position",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__NamePositionPair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NamePositionPair_set_position" "', argument " "1"" of type '" "mio::ik::NamePositionPair *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::NamePositionPair * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NamePositionPair_set_position" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NamePositionPair_set_position" "', argument " "2"" of type '" "mio::Point3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Point3 * >(argp2);
  {
    try 
    {
      (arg1)->set_position((mio::Point3 const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NamePositionPair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::NamePositionPair *arg1 = (mio::ik::NamePositionPair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_NamePositionPair",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__NamePositionPair, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NamePositionPair" "', argument " "1"" of type '" "mio::ik::NamePositionPair *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::NamePositionPair * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NamePositionPair_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__NamePositionPair, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKEndEffectorGoals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffectorGoals",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::IKEndEffectorGoals *)new mio::ik::IKEndEffectorGoals();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffectorGoals, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IKEndEffectorGoals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *arg1 = (mio::ik::IKEndEffectorGoals *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKEndEffectorGoals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKEndEffectorGoals" "', argument " "1"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorGoals_set_end_effector_position(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *arg1 = (mio::ik::IKEndEffectorGoals *) 0 ;
  char *arg2 = (char *) 0 ;
  mio::Point3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorGoals_set_end_effector_position",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorGoals_set_end_effector_position" "', argument " "1"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKEndEffectorGoals_set_end_effector_position" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Point3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IKEndEffectorGoals_set_end_effector_position" "', argument " "3"" of type '" "mio::Point3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKEndEffectorGoals_set_end_effector_position" "', argument " "3"" of type '" "mio::Point3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Point3 * >(argp3);
  {
    try 
    {
      (arg1)->set_end_effector_position((char const *)arg2,(mio::Point3 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorGoals_get_end_effector_position(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *arg1 = (mio::ik::IKEndEffectorGoals *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Point3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorGoals_get_end_effector_position",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorGoals_get_end_effector_position" "', argument " "1"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKEndEffectorGoals_get_end_effector_position" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (arg1)->get_end_effector_position((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Point3(static_cast< const mio::Point3& >(result))), SWIGTYPE_p_mio__Point3, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorGoals_get_designated_end_effector_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *arg1 = (mio::ik::IKEndEffectorGoals *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorGoals_get_designated_end_effector_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorGoals_get_designated_end_effector_count" "', argument " "1"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_designated_end_effector_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorGoals_get_end_effector_position_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *arg1 = (mio::ik::IKEndEffectorGoals *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffectorPositionIterator result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorGoals_get_end_effector_position_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorGoals_get_end_effector_position_iterator" "', argument " "1"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp1);
  {
    try 
    {
      result = (arg1)->get_end_effector_position_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKEndEffectorPositionIterator(static_cast< const mio::ik::IKEndEffectorPositionIterator& >(result))), SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKEndEffectorGoals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKEndEffectorGoals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKEndEffectorPositionIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorPositionIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffectorPositionIterator",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::IKEndEffectorPositionIterator *)new mio::ik::IKEndEffectorPositionIterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKEndEffectorPositionIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorGoals *arg1 = (mio::ik::IKEndEffectorGoals *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffectorPositionIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffectorPositionIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKEndEffectorPositionIterator" "', argument " "1"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKEndEffectorPositionIterator *)new mio::ik::IKEndEffectorPositionIterator(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKEndEffectorPositionIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IKEndEffectorPositionIterator__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IKEndEffectorPositionIterator__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IKEndEffectorPositionIterator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKEndEffectorPositionIterator::IKEndEffectorPositionIterator()\n"
    "    mio::ik::IKEndEffectorPositionIterator::IKEndEffectorPositionIterator(mio::ik::IKEndEffectorGoals *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IKEndEffectorPositionIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorPositionIterator *arg1 = (mio::ik::IKEndEffectorPositionIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKEndEffectorPositionIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKEndEffectorPositionIterator" "', argument " "1"" of type '" "mio::ik::IKEndEffectorPositionIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorPositionIterator * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorPositionIterator_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorPositionIterator *arg1 = (mio::ik::IKEndEffectorPositionIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorPositionIterator_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorPositionIterator_has_next" "', argument " "1"" of type '" "mio::ik::IKEndEffectorPositionIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorPositionIterator * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorPositionIterator_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorPositionIterator *arg1 = (mio::ik::IKEndEffectorPositionIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::NamePositionPair result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorPositionIterator_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorPositionIterator_get_next" "', argument " "1"" of type '" "mio::ik::IKEndEffectorPositionIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorPositionIterator * >(argp1);
  {
    try 
    {
      result = (arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::NamePositionPair(static_cast< const mio::ik::NamePositionPair& >(result))), SWIGTYPE_p_mio__ik__NamePositionPair, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKEndEffectorPositionIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKEndEffectorPositionIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKPose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKPose *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKPose",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::IKPose *)new mio::ik::IKPose();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKPose, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IKPose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKPose *arg1 = (mio::ik::IKPose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKPose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKPose, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKPose" "', argument " "1"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKPose * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKPose_get_normal_pose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKPose *arg1 = (mio::ik::IKPose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Pose *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKPose_get_normal_pose",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKPose_get_normal_pose" "', argument " "1"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKPose * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Pose *)(arg1)->get_normal_pose();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKPose_set_normal_pose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKPose *arg1 = (mio::ik::IKPose *) 0 ;
  mio::rigging::Pose *arg2 = (mio::rigging::Pose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKPose_set_normal_pose",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKPose_set_normal_pose" "', argument " "1"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKPose * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKPose_set_normal_pose" "', argument " "2"" of type '" "mio::rigging::Pose *""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  {
    try 
    {
      (arg1)->set_normal_pose(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKPose_get_end_effector_goals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKPose *arg1 = (mio::ik::IKPose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffectorGoals *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKPose_get_end_effector_goals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKPose_get_end_effector_goals" "', argument " "1"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKPose * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKEndEffectorGoals *)(arg1)->get_end_effector_goals();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKPose_set_end_effector_goals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKPose *arg1 = (mio::ik::IKPose *) 0 ;
  mio::ik::IKEndEffectorGoals *arg2 = (mio::ik::IKEndEffectorGoals *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKPose_set_end_effector_goals",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKPose_set_end_effector_goals" "', argument " "1"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKPose * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKPose_set_end_effector_goals" "', argument " "2"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp2);
  {
    try 
    {
      (arg1)->set_end_effector_goals(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKPose_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKPose, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DEFAULT_MAX_ITERATION_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "DEFAULT_MAX_ITERATION",SWIG_From_int(static_cast< int >(20)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *DEFAULT_ERROR_THRESHOLD_swigconstant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *module;
  PyObject *d;
  if (!PyArg_UnpackTuple(args,(char*)"swigconstant", 1, 1,&module)) return NULL;
  d = PyModule_GetDict(module);
  if (!d) return NULL;
  SWIG_Python_SetConstant(d, "DEFAULT_ERROR_THRESHOLD",SWIG_From_double(static_cast< double >(0.0001)));
  return SWIG_Py_Void();
}


SWIGINTERN PyObject *_wrap_new_IKArmature__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKArmature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKArmature",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKArmature" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_IKArmature" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::ik::IKArmature *)new mio::ik::IKArmature(arg1,(char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKArmature, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKArmature__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::Armature *arg1 = (mio::rigging::Armature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKArmature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKArmature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKArmature" "', argument " "1"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::Armature * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKArmature *)new mio::ik::IKArmature(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKArmature, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKArmature(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IKArmature__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_IKArmature__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IKArmature'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::IKArmature(mio::rigging::Armature *,char const *)\n"
    "    mio::ik::IKArmature::IKArmature(mio::rigging::Armature *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IKArmature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKArmature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKArmature" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_end_effector_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_end_effector_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_end_effector_count" "', argument " "1"" of type '" "mio::ik::IKArmature const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (int)((mio::ik::IKArmature const *)arg1)->get_end_effector_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_end_effector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_end_effector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_end_effector" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKArmature_get_end_effector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)(arg1)->get_end_effector(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_end_effector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_end_effector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_end_effector" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_get_end_effector" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)(arg1)->get_end_effector((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_end_effector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IKArmature_get_end_effector__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKArmature_get_end_effector__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_get_end_effector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::get_end_effector(int)\n"
    "    mio::ik::IKArmature::get_end_effector(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKArmature_make_end_effector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_make_end_effector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_make_end_effector" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKArmature_make_end_effector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)(arg1)->make_end_effector(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_make_end_effector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_make_end_effector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_make_end_effector" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_make_end_effector" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)(arg1)->make_end_effector((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_make_end_effector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IKArmature_make_end_effector__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKArmature_make_end_effector__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_make_end_effector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::make_end_effector(int)\n"
    "    mio::ik::IKArmature::make_end_effector(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_end_effector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffectorIterator result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_end_effector_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_end_effector_iterator" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (arg1)->get_end_effector_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKEndEffectorIterator(static_cast< const mio::ik::IKEndEffectorIterator& >(result))), SWIGTYPE_p_mio__ik__IKEndEffectorIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_add_ik_joint_to_end_effector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_add_ik_joint_to_end_effector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_add_ik_joint_to_end_effector" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKArmature_add_ik_joint_to_end_effector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKArmature_add_ik_joint_to_end_effector" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->add_ik_joint_to_end_effector(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_add_ik_joint_to_end_effector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_add_ik_joint_to_end_effector",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_add_ik_joint_to_end_effector" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_add_ik_joint_to_end_effector" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IKArmature_add_ik_joint_to_end_effector" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try 
    {
      (arg1)->add_ik_joint_to_end_effector((char const *)arg2,(char const *)arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_add_ik_joint_to_end_effector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IKArmature_add_ik_joint_to_end_effector__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_IKArmature_add_ik_joint_to_end_effector__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_add_ik_joint_to_end_effector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::add_ik_joint_to_end_effector(int,int)\n"
    "    mio::ik::IKArmature::add_ik_joint_to_end_effector(char const *,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_ik_joint_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_ik_joint_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_ik_joint_count" "', argument " "1"" of type '" "mio::ik::IKArmature const *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (int)((mio::ik::IKArmature const *)arg1)->get_ik_joint_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_ik_joint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_ik_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_ik_joint" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKArmature_get_ik_joint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::ik::IKJoint *)(arg1)->get_ik_joint(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_ik_joint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_ik_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_ik_joint" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_get_ik_joint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::ik::IKJoint *)(arg1)->get_ik_joint((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_ik_joint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IKArmature_get_ik_joint__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKArmature_get_ik_joint__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_get_ik_joint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::get_ik_joint(int)\n"
    "    mio::ik::IKArmature::get_ik_joint(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKArmature_make_ik_joint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_make_ik_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_make_ik_joint" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IKArmature_make_ik_joint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::ik::IKJoint *)(arg1)->make_ik_joint(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_make_ik_joint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_make_ik_joint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_make_ik_joint" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_make_ik_joint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::ik::IKJoint *)(arg1)->make_ik_joint((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_make_ik_joint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IKArmature_make_ik_joint__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKArmature_make_ik_joint__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_make_ik_joint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::make_ik_joint(int)\n"
    "    mio::ik::IKArmature::make_ik_joint(char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_ik_joint_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKJointIterator result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_ik_joint_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_ik_joint_iterator" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (arg1)->get_ik_joint_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::ik::IKJointIterator(static_cast< const mio::ik::IKJointIterator& >(result))), SWIGTYPE_p_mio__ik__IKJointIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_morphed_armature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_morphed_armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_morphed_armature" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)(arg1)->get_morphed_armature();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_get_rest_armature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_get_rest_armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_get_rest_armature" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)(arg1)->get_rest_armature();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKEndEffectorGoals *arg2 = (mio::ik::IKEndEffectorGoals *) 0 ;
  int arg3 ;
  float arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKArmature_solve" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKArmature_solve" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IKArmature_solve" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try 
    {
      (arg1)->solve(arg2,arg3,arg4,arg5);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKEndEffectorGoals *arg2 = (mio::ik::IKEndEffectorGoals *) 0 ;
  int arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKArmature_solve" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKArmature_solve" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      (arg1)->solve(arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKEndEffectorGoals *arg2 = (mio::ik::IKEndEffectorGoals *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKArmature_solve" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->solve(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKEndEffectorGoals *arg2 = (mio::ik::IKEndEffectorGoals *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKEndEffectorGoals *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKEndEffectorGoals * >(argp2);
  {
    try 
    {
      (arg1)->solve(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKPose *arg2 = (mio::ik::IKPose *) 0 ;
  int arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKPose * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKArmature_solve" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKArmature_solve" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      (arg1)->solve(arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKPose *arg2 = (mio::ik::IKPose *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKPose * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IKArmature_solve" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      (arg1)->solve(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::ik::IKPose *arg2 = (mio::ik::IKPose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve" "', argument " "2"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg2 = reinterpret_cast< mio::ik::IKPose * >(argp2);
  {
    try 
    {
      (arg1)->solve(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKArmature_solve__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKPose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IKArmature_solve__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKPose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IKArmature_solve__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IKArmature_solve__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_IKArmature_solve__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKPose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_IKArmature_solve__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__ik__IKEndEffectorGoals, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_IKArmature_solve__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_solve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKEndEffectorGoals *,int,float,bool)\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKEndEffectorGoals *,int,float)\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKEndEffectorGoals *,int)\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKEndEffectorGoals *)\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKPose *,int,float)\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKPose *,int)\n"
    "    mio::ik::IKArmature::solve(mio::ik::IKPose *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve_for_pose__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  mio::ik::IKPose *arg3 = (mio::ik::IKPose *) 0 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve_for_pose",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve_for_pose" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve_for_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKArmature_solve_for_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IKArmature_solve_for_pose" "', argument " "3"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg3 = reinterpret_cast< mio::ik::IKPose * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKArmature_solve_for_pose" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "IKArmature_solve_for_pose" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try 
    {
      (arg1)->solve_for_pose(*arg2,arg3,arg4,arg5);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve_for_pose__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  mio::ik::IKPose *arg3 = (mio::ik::IKPose *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve_for_pose",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve_for_pose" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve_for_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKArmature_solve_for_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IKArmature_solve_for_pose" "', argument " "3"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg3 = reinterpret_cast< mio::ik::IKPose * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IKArmature_solve_for_pose" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try 
    {
      (arg1)->solve_for_pose(*arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve_for_pose__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  mio::ik::IKPose *arg3 = (mio::ik::IKPose *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKArmature_solve_for_pose",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKArmature_solve_for_pose" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IKArmature_solve_for_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IKArmature_solve_for_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__ik__IKPose, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IKArmature_solve_for_pose" "', argument " "3"" of type '" "mio::ik::IKPose *""'"); 
  }
  arg3 = reinterpret_cast< mio::ik::IKPose * >(argp3);
  {
    try 
    {
      (arg1)->solve_for_pose(*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKArmature_solve_for_pose(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__ik__IKPose, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_IKArmature_solve_for_pose__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__ik__IKPose, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_IKArmature_solve_for_pose__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__ik__IKPose, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_IKArmature_solve_for_pose__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IKArmature_solve_for_pose'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKArmature::solve_for_pose(mio::rigging::Pose &,mio::ik::IKPose *,int,float)\n"
    "    mio::ik::IKArmature::solve_for_pose(mio::rigging::Pose &,mio::ik::IKPose *,int)\n"
    "    mio::ik::IKArmature::solve_for_pose(mio::rigging::Pose &,mio::ik::IKPose *)\n");
  return 0;
}


SWIGINTERN PyObject *IKArmature_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKArmature, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKEndEffectorIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffectorIterator",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::IKEndEffectorIterator *)new mio::ik::IKEndEffectorIterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffectorIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKEndEffectorIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffectorIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKEndEffectorIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKEndEffectorIterator" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKEndEffectorIterator *)new mio::ik::IKEndEffectorIterator(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffectorIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKEndEffectorIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IKEndEffectorIterator__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IKEndEffectorIterator__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IKEndEffectorIterator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKEndEffectorIterator::IKEndEffectorIterator()\n"
    "    mio::ik::IKEndEffectorIterator::IKEndEffectorIterator(mio::ik::IKArmature *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IKEndEffectorIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorIterator *arg1 = (mio::ik::IKEndEffectorIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKEndEffectorIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKEndEffectorIterator" "', argument " "1"" of type '" "mio::ik::IKEndEffectorIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorIterator * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorIterator_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorIterator *arg1 = (mio::ik::IKEndEffectorIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKEndEffector *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorIterator_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorIterator_get_next" "', argument " "1"" of type '" "mio::ik::IKEndEffectorIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorIterator * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKEndEffector *)(arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKEndEffector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKEndEffectorIterator_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKEndEffectorIterator *arg1 = (mio::ik::IKEndEffectorIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKEndEffectorIterator_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKEndEffectorIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKEndEffectorIterator_has_next" "', argument " "1"" of type '" "mio::ik::IKEndEffectorIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKEndEffectorIterator * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKEndEffectorIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKEndEffectorIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IKJointIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKJointIterator",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::ik::IKJointIterator *)new mio::ik::IKJointIterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJointIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKJointIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKArmature *arg1 = (mio::ik::IKArmature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKJointIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IKJointIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKArmature, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IKJointIterator" "', argument " "1"" of type '" "mio::ik::IKArmature *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKArmature * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKJointIterator *)new mio::ik::IKJointIterator(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJointIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IKJointIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IKJointIterator__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__ik__IKArmature, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IKJointIterator__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IKJointIterator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::ik::IKJointIterator::IKJointIterator()\n"
    "    mio::ik::IKJointIterator::IKJointIterator(mio::ik::IKArmature *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IKJointIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointIterator *arg1 = (mio::ik::IKJointIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IKJointIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IKJointIterator" "', argument " "1"" of type '" "mio::ik::IKJointIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointIterator * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointIterator_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointIterator *arg1 = (mio::ik::IKJointIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::ik::IKJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointIterator_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointIterator_get_next" "', argument " "1"" of type '" "mio::ik::IKJointIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointIterator * >(argp1);
  {
    try 
    {
      result = (mio::ik::IKJoint *)(arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__ik__IKJoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IKJointIterator_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::ik::IKJointIterator *arg1 = (mio::ik::IKJointIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IKJointIterator_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__ik__IKJointIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IKJointIterator_has_next" "', argument " "1"" of type '" "mio::ik::IKJointIterator *""'"); 
  }
  arg1 = reinterpret_cast< mio::ik::IKJointIterator * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IKJointIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__ik__IKJointIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_JointWeightMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::JointWeightMapping *arg1 = (mio::skinning::JointWeightMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_JointWeightMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__JointWeightMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JointWeightMapping" "', argument " "1"" of type '" "mio::skinning::JointWeightMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::JointWeightMapping * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointWeightMapping_get_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::JointWeightMapping *arg1 = (mio::skinning::JointWeightMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointWeightMapping_get_vertex_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__JointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointWeightMapping_get_vertex_count" "', argument " "1"" of type '" "mio::skinning::JointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::JointWeightMapping * >(argp1);
  {
    try 
    {
      result = (int)((mio::skinning::JointWeightMapping const *)arg1)->get_vertex_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointWeightMapping_get_influencing_joint_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::JointWeightMapping *arg1 = (mio::skinning::JointWeightMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointWeightMapping_get_influencing_joint_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__JointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointWeightMapping_get_influencing_joint_count" "', argument " "1"" of type '" "mio::skinning::JointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::JointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JointWeightMapping_get_influencing_joint_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)((mio::skinning::JointWeightMapping const *)arg1)->get_influencing_joint_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointWeightMapping_get_influencing_joint_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::JointWeightMapping *arg1 = (mio::skinning::JointWeightMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointWeightMapping_get_influencing_joint_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__JointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointWeightMapping_get_influencing_joint_index" "', argument " "1"" of type '" "mio::skinning::JointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::JointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JointWeightMapping_get_influencing_joint_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JointWeightMapping_get_influencing_joint_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)((mio::skinning::JointWeightMapping const *)arg1)->get_influencing_joint_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JointWeightMapping_get_influencing_joint_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::JointWeightMapping *arg1 = (mio::skinning::JointWeightMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"JointWeightMapping_get_influencing_joint_weight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__JointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JointWeightMapping_get_influencing_joint_weight" "', argument " "1"" of type '" "mio::skinning::JointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::JointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JointWeightMapping_get_influencing_joint_weight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JointWeightMapping_get_influencing_joint_weight" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (float)((mio::skinning::JointWeightMapping const *)arg1)->get_influencing_joint_weight(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JointWeightMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__skinning__JointWeightMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IndexedJointWeightMapping__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::skinning::IndexedJointWeightMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IndexedJointWeightMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexedJointWeightMapping" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::skinning::IndexedJointWeightMapping *)new mio::skinning::IndexedJointWeightMapping((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexedJointWeightMapping__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_IndexedJointWeightMapping",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::skinning::IndexedJointWeightMapping *)new mio::skinning::IndexedJointWeightMapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexedJointWeightMapping(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IndexedJointWeightMapping__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IndexedJointWeightMapping__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IndexedJointWeightMapping'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::skinning::IndexedJointWeightMapping::IndexedJointWeightMapping(char const *)\n"
    "    mio::skinning::IndexedJointWeightMapping::IndexedJointWeightMapping()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IndexedJointWeightMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_IndexedJointWeightMapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IndexedJointWeightMapping" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping_get_vertex_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping_get_vertex_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping_get_vertex_count" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  {
    try 
    {
      result = (int)((mio::skinning::IndexedJointWeightMapping const *)arg1)->get_vertex_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping_append_new_vertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping_append_new_vertex",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping_append_new_vertex" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  {
    try 
    {
      (arg1)->append_new_vertex();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping__append_joint_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping__append_joint_weight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping__append_joint_weight" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping__append_joint_weight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedJointWeightMapping__append_joint_weight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->_append_joint_weight(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping_append_joint_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping_append_joint_weight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping_append_joint_weight" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping_append_joint_weight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedJointWeightMapping_append_joint_weight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      (arg1)->append_joint_weight(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping__get_influencing_joint_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping__get_influencing_joint_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping__get_influencing_joint_count" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping__get_influencing_joint_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)((mio::skinning::IndexedJointWeightMapping const *)arg1)->_get_influencing_joint_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping_get_influencing_joint_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping_get_influencing_joint_count",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping_get_influencing_joint_count" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping_get_influencing_joint_count" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (int)((mio::skinning::IndexedJointWeightMapping const *)arg1)->get_influencing_joint_count(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping__get_influencing_joint_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping__get_influencing_joint_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping__get_influencing_joint_index" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping__get_influencing_joint_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedJointWeightMapping__get_influencing_joint_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)((mio::skinning::IndexedJointWeightMapping const *)arg1)->_get_influencing_joint_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping_get_influencing_joint_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping_get_influencing_joint_index",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping_get_influencing_joint_index" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping_get_influencing_joint_index" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedJointWeightMapping_get_influencing_joint_index" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (int)((mio::skinning::IndexedJointWeightMapping const *)arg1)->get_influencing_joint_index(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping__get_influencing_joint_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping__get_influencing_joint_weight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping__get_influencing_joint_weight" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping__get_influencing_joint_weight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedJointWeightMapping__get_influencing_joint_weight" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (float)((mio::skinning::IndexedJointWeightMapping const *)arg1)->_get_influencing_joint_weight(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexedJointWeightMapping_get_influencing_joint_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::skinning::IndexedJointWeightMapping *arg1 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"IndexedJointWeightMapping_get_influencing_joint_weight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexedJointWeightMapping_get_influencing_joint_weight" "', argument " "1"" of type '" "mio::skinning::IndexedJointWeightMapping const *""'"); 
  }
  arg1 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexedJointWeightMapping_get_influencing_joint_weight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IndexedJointWeightMapping_get_influencing_joint_weight" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try 
    {
      result = (float)((mio::skinning::IndexedJointWeightMapping const *)arg1)->get_influencing_joint_weight(arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IndexedJointWeightMapping_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Curve_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_float *arg1 = (mio::curve::Curve_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Curve_float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Curve_float" "', argument " "1"" of type '" "mio::curve::Curve_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_float * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_float_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_float *arg1 = (mio::curve::Curve_float *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_float_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_float_evaluate" "', argument " "1"" of type '" "mio::curve::Curve_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_float_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (float)((mio::curve::Curve_float const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_float_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_float *arg1 = (mio::curve::Curve_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_float_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_float_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Curve_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_float * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_float const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_float_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_float *arg1 = (mio::curve::Curve_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_float_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_float_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Curve_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_float * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_float const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_float___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_float *arg1 = (mio::curve::Curve_float *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_float___call__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_float___call__" "', argument " "1"" of type '" "mio::curve::Curve_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_float___call__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (float)((mio::curve::Curve_float const *)arg1)->operator ()(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Curve_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Curve_float, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Curve_Vector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Vector3 *arg1 = (mio::curve::Curve_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Curve_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Curve_Vector3" "', argument " "1"" of type '" "mio::curve::Curve_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Vector3 * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Vector3_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Vector3 *arg1 = (mio::curve::Curve_Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Vector3_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Vector3_evaluate" "', argument " "1"" of type '" "mio::curve::Curve_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_Vector3_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Curve_Vector3 const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Vector3_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Vector3 *arg1 = (mio::curve::Curve_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Vector3_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Vector3_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Curve_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Vector3 * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_Vector3 const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Vector3_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Vector3 *arg1 = (mio::curve::Curve_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Vector3_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Vector3_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Curve_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Vector3 * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_Vector3 const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Vector3___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Vector3 *arg1 = (mio::curve::Curve_Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Vector3___call__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Vector3___call__" "', argument " "1"" of type '" "mio::curve::Curve_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_Vector3___call__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Curve_Vector3 const *)arg1)->operator ()(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Curve_Vector3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Curve_Vector3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Curve_Quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Quaternion *arg1 = (mio::curve::Curve_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Curve_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Curve_Quaternion" "', argument " "1"" of type '" "mio::curve::Curve_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Quaternion * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Quaternion_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Quaternion *arg1 = (mio::curve::Curve_Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Quaternion_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Quaternion_evaluate" "', argument " "1"" of type '" "mio::curve::Curve_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_Quaternion_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Curve_Quaternion const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Quaternion_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Quaternion *arg1 = (mio::curve::Curve_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Quaternion_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Quaternion_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Curve_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Quaternion * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_Quaternion const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Quaternion_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Quaternion *arg1 = (mio::curve::Curve_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Quaternion_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Quaternion_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Curve_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Quaternion * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_Quaternion const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_Quaternion___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_Quaternion *arg1 = (mio::curve::Curve_Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_Quaternion___call__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_Quaternion___call__" "', argument " "1"" of type '" "mio::curve::Curve_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_Quaternion___call__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Curve_Quaternion const *)arg1)->operator ()(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Curve_Quaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Curve_Quaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Curve_JointChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_JointChange *arg1 = (mio::curve::Curve_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Curve_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_JointChange, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Curve_JointChange" "', argument " "1"" of type '" "mio::curve::Curve_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_JointChange * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_JointChange_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_JointChange *arg1 = (mio::curve::Curve_JointChange *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_JointChange_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_JointChange_evaluate" "', argument " "1"" of type '" "mio::curve::Curve_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_JointChange * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_JointChange_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Curve_JointChange const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_JointChange_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_JointChange *arg1 = (mio::curve::Curve_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_JointChange_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_JointChange_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Curve_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_JointChange * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_JointChange const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_JointChange_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_JointChange *arg1 = (mio::curve::Curve_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_JointChange_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_JointChange_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Curve_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_JointChange * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Curve_JointChange const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Curve_JointChange___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Curve_JointChange *arg1 = (mio::curve::Curve_JointChange *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Curve_JointChange___call__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Curve_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Curve_JointChange___call__" "', argument " "1"" of type '" "mio::curve::Curve_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Curve_JointChange * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Curve_JointChange___call__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Curve_JointChange const *)arg1)->operator ()(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Curve_JointChange_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Curve_JointChange, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Polyline_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::Polyline_float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Polyline_float" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::curve::Polyline_float *)new mio::curve::Polyline_float((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_float, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_float",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::Polyline_float *)new mio::curve::Polyline_float();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_float, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_float(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Polyline_float__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Polyline_float__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Polyline_float'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::Polyline_float::Polyline_float(char const *)\n"
    "    mio::curve::Polyline_float::Polyline_float()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Polyline_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Polyline_float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Polyline_float" "', argument " "1"" of type '" "mio::curve::Polyline_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_zero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_zero",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_zero" "', argument " "1"" of type '" "mio::curve::Polyline_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_float const *)arg1)->zero();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_interpolate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  float *arg2 = 0 ;
  float *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  float temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_interpolate",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_interpolate" "', argument " "1"" of type '" "mio::curve::Polyline_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_float_interpolate" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Polyline_float_interpolate" "', argument " "3"" of type '" "float""'");
  } 
  temp3 = static_cast< float >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Polyline_float_interpolate" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_float const *)arg1)->interpolate((float const &)*arg2,(float const &)*arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_evaluate" "', argument " "1"" of type '" "mio::curve::Polyline_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_float_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_float const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Polyline_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_float const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Polyline_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_float const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_get_control_point_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_get_control_point_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_get_control_point_count" "', argument " "1"" of type '" "mio::curve::Polyline_float const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      result = (int)((mio::curve::Polyline_float const *)arg1)->get_control_point_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_set_control_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  float arg2 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_set_control_point",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_set_control_point" "', argument " "1"" of type '" "mio::curve::Polyline_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_float_set_control_point" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Polyline_float_set_control_point" "', argument " "3"" of type '" "float""'");
  } 
  temp3 = static_cast< float >(val3);
  arg3 = &temp3;
  {
    try 
    {
      (arg1)->set_control_point(arg2,(float const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_float_get_control_point_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_float_get_control_point_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_float_get_control_point_iterator" "', argument " "1"" of type '" "mio::curve::Polyline_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      result = (arg1)->get_control_point_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPointIterator_float(static_cast< const mio::curve::PolylineControlPointIterator_float& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Polyline_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Polyline_float, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PolylineControlPoint_float_time_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_float *arg1 = (mio::curve::PolylineControlPoint_float *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_float_time_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_float_time_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolylineControlPoint_float_time_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_float_time_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_float *arg1 = (mio::curve::PolylineControlPoint_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_float_time_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_float_time_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_float * >(argp1);
  result = (float) ((arg1)->time);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_float_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_float *arg1 = (mio::curve::PolylineControlPoint_float *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_float_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_float_value_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_float * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolylineControlPoint_float_value_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_float_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_float *arg1 = (mio::curve::PolylineControlPoint_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_float_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_float_value_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_float * >(argp1);
  result = (float) ((arg1)->value);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPoint_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::curve::PolylineControlPoint_float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPoint_float",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PolylineControlPoint_float" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PolylineControlPoint_float" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PolylineControlPoint_float" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try 
    {
      result = (mio::curve::PolylineControlPoint_float *)new mio::curve::PolylineControlPoint_float(arg1,*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPoint_float, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPoint_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_float *arg1 = (mio::curve::PolylineControlPoint_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPoint_float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPoint_float" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_float * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPoint_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPoint_float, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_float",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_float *)new mio::curve::PolylineControlPointIterator_float();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_float *arg1 = (mio::curve::Polyline_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_float *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PolylineControlPointIterator_float" "', argument " "1"" of type '" "mio::curve::Polyline_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_float * >(argp1);
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_float *)new mio::curve::PolylineControlPointIterator_float(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_float(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_PolylineControlPointIterator_float__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__curve__Polyline_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PolylineControlPointIterator_float__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_PolylineControlPointIterator_float'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::PolylineControlPointIterator_float::PolylineControlPointIterator_float()\n"
    "    mio::curve::PolylineControlPointIterator_float::PolylineControlPointIterator_float(mio::curve::Polyline_float *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPointIterator_float(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_float *arg1 = (mio::curve::PolylineControlPointIterator_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPointIterator_float",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPointIterator_float" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_float * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_float_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_float *arg1 = (mio::curve::PolylineControlPointIterator_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_float_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_float_has_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_float * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_float_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_float *arg1 = (mio::curve::PolylineControlPointIterator_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_float > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_float_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_float_get_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_float * >(argp1);
  {
    try 
    {
      result = (arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_float(static_cast< const mio::curve::PolylineControlPoint_float& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_float, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_float_peek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_float *arg1 = (mio::curve::PolylineControlPointIterator_float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_float > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_float_peek",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_float_peek" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_float *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_float * >(argp1);
  {
    try 
    {
      result = (arg1)->peek();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_float(static_cast< const mio::curve::PolylineControlPoint_float& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_float, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPointIterator_float_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPointIterator_float, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Polyline_Vector3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::Polyline_Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Polyline_Vector3" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::curve::Polyline_Vector3 *)new mio::curve::Polyline_Vector3((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_Vector3, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_Vector3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_Vector3",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::Polyline_Vector3 *)new mio::curve::Polyline_Vector3();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_Vector3, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_Vector3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Polyline_Vector3__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Polyline_Vector3__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Polyline_Vector3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::Polyline_Vector3::Polyline_Vector3(char const *)\n"
    "    mio::curve::Polyline_Vector3::Polyline_Vector3()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Polyline_Vector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Polyline_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Polyline_Vector3" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_zero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_zero",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_zero" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      result = ((mio::curve::Polyline_Vector3 const *)arg1)->zero();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_interpolate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  mio::Vector3 *arg2 = 0 ;
  mio::Vector3 *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_interpolate",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_interpolate" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Polyline_Vector3_interpolate" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_Vector3_interpolate" "', argument " "2"" of type '" "mio::Vector3 const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Polyline_Vector3_interpolate" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_Vector3_interpolate" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Polyline_Vector3_interpolate" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      result = ((mio::curve::Polyline_Vector3 const *)arg1)->interpolate((mio::Vector3 const &)*arg2,(mio::Vector3 const &)*arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_evaluate" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_Vector3_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Polyline_Vector3 const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Vector3(static_cast< const mio::Vector3& >(result))), SWIGTYPE_p_mio__Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_Vector3 const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_Vector3 const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_get_control_point_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_get_control_point_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_get_control_point_count" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      result = (int)((mio::curve::Polyline_Vector3 const *)arg1)->get_control_point_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_set_control_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  float arg2 ;
  mio::Vector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_set_control_point",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_set_control_point" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_Vector3_set_control_point" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Vector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Polyline_Vector3_set_control_point" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_Vector3_set_control_point" "', argument " "3"" of type '" "mio::Vector3 const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Vector3 * >(argp3);
  {
    try 
    {
      (arg1)->set_control_point(arg2,(mio::Vector3 const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Vector3_get_control_point_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_Vector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Vector3_get_control_point_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Vector3_get_control_point_iterator" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      result = (arg1)->get_control_point_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPointIterator_Vector3(static_cast< const mio::curve::PolylineControlPointIterator_Vector3& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Polyline_Vector3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Polyline_Vector3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PolylineControlPoint_Vector3_time_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Vector3 *arg1 = (mio::curve::PolylineControlPoint_Vector3 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Vector3_time_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Vector3_time_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Vector3 * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolylineControlPoint_Vector3_time_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_Vector3_time_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Vector3 *arg1 = (mio::curve::PolylineControlPoint_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Vector3_time_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Vector3_time_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Vector3 * >(argp1);
  result = (float) ((arg1)->time);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_Vector3_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Vector3 *arg1 = (mio::curve::PolylineControlPoint_Vector3 *) 0 ;
  mio::Vector3 *arg2 = (mio::Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Vector3_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Vector3_value_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Vector3 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Vector3, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PolylineControlPoint_Vector3_value_set" "', argument " "2"" of type '" "mio::Vector3 *""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  if (arg1) (arg1)->value = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_Vector3_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Vector3 *arg1 = (mio::curve::PolylineControlPoint_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Vector3_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Vector3_value_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Vector3 * >(argp1);
  result = (mio::Vector3 *)& ((arg1)->value);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Vector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPoint_Vector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Vector3 *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::curve::PolylineControlPoint_Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPoint_Vector3",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PolylineControlPoint_Vector3" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Vector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PolylineControlPoint_Vector3" "', argument " "2"" of type '" "mio::Vector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PolylineControlPoint_Vector3" "', argument " "2"" of type '" "mio::Vector3 &""'"); 
  }
  arg2 = reinterpret_cast< mio::Vector3 * >(argp2);
  {
    try 
    {
      result = (mio::curve::PolylineControlPoint_Vector3 *)new mio::curve::PolylineControlPoint_Vector3(arg1,*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPoint_Vector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Vector3 *arg1 = (mio::curve::PolylineControlPoint_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPoint_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPoint_Vector3" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Vector3 * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPoint_Vector3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_Vector3__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_Vector3",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_Vector3 *)new mio::curve::PolylineControlPointIterator_Vector3();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_Vector3__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Vector3 *arg1 = (mio::curve::Polyline_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_Vector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PolylineControlPointIterator_Vector3" "', argument " "1"" of type '" "mio::curve::Polyline_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Vector3 * >(argp1);
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_Vector3 *)new mio::curve::PolylineControlPointIterator_Vector3(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_Vector3(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_PolylineControlPointIterator_Vector3__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__curve__Polyline_Vector3, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PolylineControlPointIterator_Vector3__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_PolylineControlPointIterator_Vector3'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::PolylineControlPointIterator_Vector3::PolylineControlPointIterator_Vector3()\n"
    "    mio::curve::PolylineControlPointIterator_Vector3::PolylineControlPointIterator_Vector3(mio::curve::Polyline_Vector3 *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPointIterator_Vector3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Vector3 *arg1 = (mio::curve::PolylineControlPointIterator_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPointIterator_Vector3",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPointIterator_Vector3" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Vector3 * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_Vector3_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Vector3 *arg1 = (mio::curve::PolylineControlPointIterator_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_Vector3_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_Vector3_has_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Vector3 * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_Vector3_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Vector3 *arg1 = (mio::curve::PolylineControlPointIterator_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_Vector3 > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_Vector3_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_Vector3_get_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Vector3 * >(argp1);
  {
    try 
    {
      result = (arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_Vector3(static_cast< const mio::curve::PolylineControlPoint_Vector3& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_Vector3_peek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Vector3 *arg1 = (mio::curve::PolylineControlPointIterator_Vector3 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_Vector3 > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_Vector3_peek",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_Vector3_peek" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Vector3 *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Vector3 * >(argp1);
  {
    try 
    {
      result = (arg1)->peek();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_Vector3(static_cast< const mio::curve::PolylineControlPoint_Vector3& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_Vector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPointIterator_Vector3_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Vector3, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Polyline_Quaternion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::Polyline_Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Polyline_Quaternion" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::curve::Polyline_Quaternion *)new mio::curve::Polyline_Quaternion((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_Quaternion, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_Quaternion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_Quaternion",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::Polyline_Quaternion *)new mio::curve::Polyline_Quaternion();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_Quaternion, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_Quaternion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Polyline_Quaternion__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Polyline_Quaternion__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Polyline_Quaternion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::Polyline_Quaternion::Polyline_Quaternion(char const *)\n"
    "    mio::curve::Polyline_Quaternion::Polyline_Quaternion()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Polyline_Quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Polyline_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Polyline_Quaternion" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_zero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_zero",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_zero" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      result = ((mio::curve::Polyline_Quaternion const *)arg1)->zero();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_interpolate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  mio::Quaternion *arg2 = 0 ;
  mio::Quaternion *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_interpolate",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_interpolate" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Polyline_Quaternion_interpolate" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_Quaternion_interpolate" "', argument " "2"" of type '" "mio::Quaternion const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Polyline_Quaternion_interpolate" "', argument " "3"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_Quaternion_interpolate" "', argument " "3"" of type '" "mio::Quaternion const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Quaternion * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Polyline_Quaternion_interpolate" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      result = ((mio::curve::Polyline_Quaternion const *)arg1)->interpolate((mio::Quaternion const &)*arg2,(mio::Quaternion const &)*arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_evaluate" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_Quaternion_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Polyline_Quaternion const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::Quaternion(static_cast< const mio::Quaternion& >(result))), SWIGTYPE_p_mio__Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_Quaternion const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_Quaternion const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_get_control_point_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_get_control_point_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_get_control_point_count" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      result = (int)((mio::curve::Polyline_Quaternion const *)arg1)->get_control_point_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_set_control_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  float arg2 ;
  mio::Quaternion *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_set_control_point",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_set_control_point" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_Quaternion_set_control_point" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__Quaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Polyline_Quaternion_set_control_point" "', argument " "3"" of type '" "mio::Quaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_Quaternion_set_control_point" "', argument " "3"" of type '" "mio::Quaternion const &""'"); 
  }
  arg3 = reinterpret_cast< mio::Quaternion * >(argp3);
  {
    try 
    {
      (arg1)->set_control_point(arg2,(mio::Quaternion const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_Quaternion_get_control_point_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_Quaternion result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_Quaternion_get_control_point_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_Quaternion_get_control_point_iterator" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      result = (arg1)->get_control_point_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPointIterator_Quaternion(static_cast< const mio::curve::PolylineControlPointIterator_Quaternion& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Polyline_Quaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Polyline_Quaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PolylineControlPoint_Quaternion_time_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Quaternion *arg1 = (mio::curve::PolylineControlPoint_Quaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Quaternion_time_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Quaternion_time_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Quaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolylineControlPoint_Quaternion_time_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_Quaternion_time_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Quaternion *arg1 = (mio::curve::PolylineControlPoint_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Quaternion_time_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Quaternion_time_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Quaternion * >(argp1);
  result = (float) ((arg1)->time);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_Quaternion_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Quaternion *arg1 = (mio::curve::PolylineControlPoint_Quaternion *) 0 ;
  mio::Quaternion *arg2 = (mio::Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Quaternion_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Quaternion_value_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Quaternion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PolylineControlPoint_Quaternion_value_set" "', argument " "2"" of type '" "mio::Quaternion *""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  if (arg1) (arg1)->value = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_Quaternion_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Quaternion *arg1 = (mio::curve::PolylineControlPoint_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_Quaternion_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_Quaternion_value_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Quaternion * >(argp1);
  result = (mio::Quaternion *)& ((arg1)->value);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Quaternion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPoint_Quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::Quaternion *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::curve::PolylineControlPoint_Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPoint_Quaternion",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PolylineControlPoint_Quaternion" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Quaternion,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PolylineControlPoint_Quaternion" "', argument " "2"" of type '" "mio::Quaternion &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PolylineControlPoint_Quaternion" "', argument " "2"" of type '" "mio::Quaternion &""'"); 
  }
  arg2 = reinterpret_cast< mio::Quaternion * >(argp2);
  {
    try 
    {
      result = (mio::curve::PolylineControlPoint_Quaternion *)new mio::curve::PolylineControlPoint_Quaternion(arg1,*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPoint_Quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_Quaternion *arg1 = (mio::curve::PolylineControlPoint_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPoint_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPoint_Quaternion" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_Quaternion * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPoint_Quaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_Quaternion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_Quaternion",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_Quaternion *)new mio::curve::PolylineControlPointIterator_Quaternion();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_Quaternion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_Quaternion *arg1 = (mio::curve::Polyline_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_Quaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PolylineControlPointIterator_Quaternion" "', argument " "1"" of type '" "mio::curve::Polyline_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_Quaternion * >(argp1);
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_Quaternion *)new mio::curve::PolylineControlPointIterator_Quaternion(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_Quaternion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_PolylineControlPointIterator_Quaternion__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__curve__Polyline_Quaternion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PolylineControlPointIterator_Quaternion__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_PolylineControlPointIterator_Quaternion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::PolylineControlPointIterator_Quaternion::PolylineControlPointIterator_Quaternion()\n"
    "    mio::curve::PolylineControlPointIterator_Quaternion::PolylineControlPointIterator_Quaternion(mio::curve::Polyline_Quaternion *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPointIterator_Quaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Quaternion *arg1 = (mio::curve::PolylineControlPointIterator_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPointIterator_Quaternion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPointIterator_Quaternion" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Quaternion * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_Quaternion_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Quaternion *arg1 = (mio::curve::PolylineControlPointIterator_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_Quaternion_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_Quaternion_has_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Quaternion * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_Quaternion_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Quaternion *arg1 = (mio::curve::PolylineControlPointIterator_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_Quaternion > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_Quaternion_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_Quaternion_get_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Quaternion * >(argp1);
  {
    try 
    {
      result = (arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_Quaternion(static_cast< const mio::curve::PolylineControlPoint_Quaternion& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_Quaternion_peek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_Quaternion *arg1 = (mio::curve::PolylineControlPointIterator_Quaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_Quaternion > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_Quaternion_peek",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_Quaternion_peek" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_Quaternion *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_Quaternion * >(argp1);
  {
    try 
    {
      result = (arg1)->peek();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_Quaternion(static_cast< const mio::curve::PolylineControlPoint_Quaternion& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_Quaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPointIterator_Quaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPointIterator_Quaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Polyline_JointChange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::Polyline_JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Polyline_JointChange" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::curve::Polyline_JointChange *)new mio::curve::Polyline_JointChange((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_JointChange, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_JointChange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Polyline_JointChange",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::Polyline_JointChange *)new mio::curve::Polyline_JointChange();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Polyline_JointChange, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Polyline_JointChange(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Polyline_JointChange__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Polyline_JointChange__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Polyline_JointChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::Polyline_JointChange::Polyline_JointChange(char const *)\n"
    "    mio::curve::Polyline_JointChange::Polyline_JointChange()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Polyline_JointChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Polyline_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Polyline_JointChange" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_zero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_zero",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_zero" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      result = ((mio::curve::Polyline_JointChange const *)arg1)->zero();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_interpolate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  mio::rigging::JointChange *arg2 = 0 ;
  mio::rigging::JointChange *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_interpolate",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_interpolate" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Polyline_JointChange_interpolate" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_JointChange_interpolate" "', argument " "2"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Polyline_JointChange_interpolate" "', argument " "3"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_JointChange_interpolate" "', argument " "3"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg3 = reinterpret_cast< mio::rigging::JointChange * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Polyline_JointChange_interpolate" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try 
    {
      result = ((mio::curve::Polyline_JointChange const *)arg1)->interpolate((mio::rigging::JointChange const &)*arg2,(mio::rigging::JointChange const &)*arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_evaluate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_evaluate" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_JointChange_evaluate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = ((mio::curve::Polyline_JointChange const *)arg1)->evaluate(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::rigging::JointChange(static_cast< const mio::rigging::JointChange& >(result))), SWIGTYPE_p_mio__rigging__JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_get_range_lower_bound" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_JointChange const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_get_range_upper_bound" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      result = (float)((mio::curve::Polyline_JointChange const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_get_control_point_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_get_control_point_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_get_control_point_count" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange const *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      result = (int)((mio::curve::Polyline_JointChange const *)arg1)->get_control_point_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_set_control_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  float arg2 ;
  mio::rigging::JointChange *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_set_control_point",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_set_control_point" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polyline_JointChange_set_control_point" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mio__rigging__JointChange,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Polyline_JointChange_set_control_point" "', argument " "3"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polyline_JointChange_set_control_point" "', argument " "3"" of type '" "mio::rigging::JointChange const &""'"); 
  }
  arg3 = reinterpret_cast< mio::rigging::JointChange * >(argp3);
  {
    try 
    {
      (arg1)->set_control_point(arg2,(mio::rigging::JointChange const &)*arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polyline_JointChange_get_control_point_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_JointChange result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Polyline_JointChange_get_control_point_iterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polyline_JointChange_get_control_point_iterator" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      result = (arg1)->get_control_point_iterator();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPointIterator_JointChange(static_cast< const mio::curve::PolylineControlPointIterator_JointChange& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Polyline_JointChange_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__Polyline_JointChange, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PolylineControlPoint_JointChange_time_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_JointChange *arg1 = (mio::curve::PolylineControlPoint_JointChange *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_JointChange_time_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_JointChange_time_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_JointChange * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolylineControlPoint_JointChange_time_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_JointChange_time_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_JointChange *arg1 = (mio::curve::PolylineControlPoint_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_JointChange_time_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_JointChange_time_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_JointChange * >(argp1);
  result = (float) ((arg1)->time);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_JointChange_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_JointChange *arg1 = (mio::curve::PolylineControlPoint_JointChange *) 0 ;
  mio::rigging::JointChange *arg2 = (mio::rigging::JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_JointChange_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_JointChange_value_set" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_JointChange * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PolylineControlPoint_JointChange_value_set" "', argument " "2"" of type '" "mio::rigging::JointChange *""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  if (arg1) (arg1)->value = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPoint_JointChange_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_JointChange *arg1 = (mio::curve::PolylineControlPoint_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPoint_JointChange_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPoint_JointChange_value_get" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_JointChange * >(argp1);
  result = (mio::rigging::JointChange *)& ((arg1)->value);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__JointChange, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPoint_JointChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  mio::rigging::JointChange *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::curve::PolylineControlPoint_JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPoint_JointChange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PolylineControlPoint_JointChange" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__JointChange,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PolylineControlPoint_JointChange" "', argument " "2"" of type '" "mio::rigging::JointChange &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PolylineControlPoint_JointChange" "', argument " "2"" of type '" "mio::rigging::JointChange &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::JointChange * >(argp2);
  {
    try 
    {
      result = (mio::curve::PolylineControlPoint_JointChange *)new mio::curve::PolylineControlPoint_JointChange(arg1,*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPoint_JointChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPoint_JointChange *arg1 = (mio::curve::PolylineControlPoint_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPoint_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPoint_JointChange" "', argument " "1"" of type '" "mio::curve::PolylineControlPoint_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPoint_JointChange * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPoint_JointChange_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_JointChange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_JointChange",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_JointChange *)new mio::curve::PolylineControlPointIterator_JointChange();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_JointChange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::Polyline_JointChange *arg1 = (mio::curve::Polyline_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::curve::PolylineControlPointIterator_JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PolylineControlPointIterator_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__Polyline_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PolylineControlPointIterator_JointChange" "', argument " "1"" of type '" "mio::curve::Polyline_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::Polyline_JointChange * >(argp1);
  {
    try 
    {
      result = (mio::curve::PolylineControlPointIterator_JointChange *)new mio::curve::PolylineControlPointIterator_JointChange(arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PolylineControlPointIterator_JointChange(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_PolylineControlPointIterator_JointChange__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__curve__Polyline_JointChange, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PolylineControlPointIterator_JointChange__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_PolylineControlPointIterator_JointChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::curve::PolylineControlPointIterator_JointChange::PolylineControlPointIterator_JointChange()\n"
    "    mio::curve::PolylineControlPointIterator_JointChange::PolylineControlPointIterator_JointChange(mio::curve::Polyline_JointChange *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PolylineControlPointIterator_JointChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_JointChange *arg1 = (mio::curve::PolylineControlPointIterator_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PolylineControlPointIterator_JointChange",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolylineControlPointIterator_JointChange" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_JointChange * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_JointChange_has_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_JointChange *arg1 = (mio::curve::PolylineControlPointIterator_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_JointChange_has_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_JointChange_has_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_JointChange * >(argp1);
  {
    try 
    {
      result = (bool)(arg1)->has_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_JointChange_get_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_JointChange *arg1 = (mio::curve::PolylineControlPointIterator_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_JointChange > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_JointChange_get_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_JointChange_get_next" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_JointChange * >(argp1);
  {
    try 
    {
      result = (arg1)->get_next();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_JointChange(static_cast< const mio::curve::PolylineControlPoint_JointChange& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolylineControlPointIterator_JointChange_peek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::curve::PolylineControlPointIterator_JointChange *arg1 = (mio::curve::PolylineControlPointIterator_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< mio::curve::PolylineControlPoint_JointChange > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PolylineControlPointIterator_JointChange_peek",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolylineControlPointIterator_JointChange_peek" "', argument " "1"" of type '" "mio::curve::PolylineControlPointIterator_JointChange *""'"); 
  }
  arg1 = reinterpret_cast< mio::curve::PolylineControlPointIterator_JointChange * >(argp1);
  {
    try 
    {
      result = (arg1)->peek();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new mio::curve::PolylineControlPoint_JointChange(static_cast< const mio::curve::PolylineControlPoint_JointChange& >(result))), SWIGTYPE_p_mio__curve__PolylineControlPoint_JointChange, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolylineControlPointIterator_JointChange_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__curve__PolylineControlPointIterator_JointChange, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PoseAnimation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::PoseAnimation *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PoseAnimation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PoseAnimation" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::rigging::PoseAnimation *)new mio::rigging::PoseAnimation((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__PoseAnimation, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoseAnimation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_PoseAnimation",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::rigging::PoseAnimation *)new mio::rigging::PoseAnimation();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__PoseAnimation, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PoseAnimation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_PoseAnimation__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_PoseAnimation__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_PoseAnimation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::PoseAnimation::PoseAnimation(char const *)\n"
    "    mio::rigging::PoseAnimation::PoseAnimation()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PoseAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_PoseAnimation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoseAnimation" "', argument " "1"" of type '" "mio::rigging::PoseAnimation *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_joint_curve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::curve::Curve_JointChange *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_get_joint_curve",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_get_joint_curve" "', argument " "1"" of type '" "mio::rigging::PoseAnimation *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoseAnimation_get_joint_curve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::curve::Curve_JointChange *)(arg1)->get_joint_curve((char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__curve__Curve_JointChange, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_set_joint_curve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  char *arg2 = (char *) 0 ;
  mio::curve::Curve_JointChange *arg3 = (mio::curve::Curve_JointChange *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_set_joint_curve",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_set_joint_curve" "', argument " "1"" of type '" "mio::rigging::PoseAnimation *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoseAnimation_set_joint_curve" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__curve__Curve_JointChange, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PoseAnimation_set_joint_curve" "', argument " "3"" of type '" "mio::curve::Curve_JointChange *""'"); 
  }
  arg3 = reinterpret_cast< mio::curve::Curve_JointChange * >(argp3);
  {
    try 
    {
      (arg1)->set_joint_curve((char const *)arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_pose__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  float arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_get_pose",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_get_pose" "', argument " "1"" of type '" "mio::rigging::PoseAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoseAnimation_get_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PoseAnimation_get_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PoseAnimation_get_pose" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PoseAnimation_get_pose" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try 
    {
      ((mio::rigging::PoseAnimation const *)arg1)->get_pose(*arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_pose__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_get_pose",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_get_pose" "', argument " "1"" of type '" "mio::rigging::PoseAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoseAnimation_get_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PoseAnimation_get_pose" "', argument " "2"" of type '" "mio::rigging::Pose &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PoseAnimation_get_pose" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try 
    {
      ((mio::rigging::PoseAnimation const *)arg1)->get_pose(*arg2,arg3);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_pose__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::rigging::Pose *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_get_pose",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_get_pose" "', argument " "1"" of type '" "mio::rigging::PoseAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoseAnimation_get_pose" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try 
    {
      result = (mio::rigging::Pose *)((mio::rigging::PoseAnimation const *)arg1)->get_pose(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Pose, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_pose(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__PoseAnimation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PoseAnimation_get_pose__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__PoseAnimation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PoseAnimation_get_pose__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__rigging__PoseAnimation, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__rigging__Pose, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_PoseAnimation_get_pose__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PoseAnimation_get_pose'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::rigging::PoseAnimation::get_pose(mio::rigging::Pose &,float,bool) const\n"
    "    mio::rigging::PoseAnimation::get_pose(mio::rigging::Pose &,float) const\n"
    "    mio::rigging::PoseAnimation::get_pose(float) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_update_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_update_range",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_update_range" "', argument " "1"" of type '" "mio::rigging::PoseAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  {
    try 
    {
      ((mio::rigging::PoseAnimation const *)arg1)->update_range();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_range_lower_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_get_range_lower_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_get_range_lower_bound" "', argument " "1"" of type '" "mio::rigging::PoseAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  {
    try 
    {
      result = (float)((mio::rigging::PoseAnimation const *)arg1)->get_range_lower_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoseAnimation_get_range_upper_bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::rigging::PoseAnimation *arg1 = (mio::rigging::PoseAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"PoseAnimation_get_range_upper_bound",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__rigging__PoseAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoseAnimation_get_range_upper_bound" "', argument " "1"" of type '" "mio::rigging::PoseAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< mio::rigging::PoseAnimation * >(argp1);
  {
    try 
    {
      result = (float)((mio::rigging::PoseAnimation const *)arg1)->get_range_upper_bound();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PoseAnimation_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__rigging__PoseAnimation, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Node__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::Node *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Node",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Node" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::scenegraph::Node *)new mio::scenegraph::Node((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Node, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Node__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Node *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Node",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::scenegraph::Node *)new mio::scenegraph::Node();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Node, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Node(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Node__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Node__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Node'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::scenegraph::Node::Node(char const *)\n"
    "    mio::scenegraph::Node::Node()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Node_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Node *arg1 = (mio::scenegraph::Node *) 0 ;
  mio::scenegraph::NodeVisitor *arg2 = (mio::scenegraph::NodeVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Node_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Node, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Node_accept" "', argument " "1"" of type '" "mio::scenegraph::Node *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Node * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Node_accept" "', argument " "2"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Node(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Node *arg1 = (mio::scenegraph::Node *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Node",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Node, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Node" "', argument " "1"" of type '" "mio::scenegraph::Node *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Node * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Node_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__scenegraph__Node, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TransformNode__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::TransformNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TransformNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TransformNode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::scenegraph::TransformNode *)new mio::scenegraph::TransformNode((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__TransformNode, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TransformNode__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TransformNode",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::scenegraph::TransformNode *)new mio::scenegraph::TransformNode();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__TransformNode, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TransformNode__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::scenegraph::TransformNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TransformNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Transform,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TransformNode" "', argument " "1"" of type '" "mio::Transform const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TransformNode" "', argument " "1"" of type '" "mio::Transform const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TransformNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try 
    {
      result = (mio::scenegraph::TransformNode *)new mio::scenegraph::TransformNode((mio::Transform const &)*arg1,(char const *)arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__TransformNode, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TransformNode__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::Transform *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::TransformNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TransformNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mio__Transform,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TransformNode" "', argument " "1"" of type '" "mio::Transform const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TransformNode" "', argument " "1"" of type '" "mio::Transform const &""'"); 
  }
  arg1 = reinterpret_cast< mio::Transform * >(argp1);
  {
    try 
    {
      result = (mio::scenegraph::TransformNode *)new mio::scenegraph::TransformNode((mio::Transform const &)*arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__TransformNode, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TransformNode(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_TransformNode__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Transform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TransformNode__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TransformNode__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mio__Transform, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TransformNode__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_TransformNode'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::scenegraph::TransformNode::TransformNode(char const *)\n"
    "    mio::scenegraph::TransformNode::TransformNode()\n"
    "    mio::scenegraph::TransformNode::TransformNode(mio::Transform const &,char const *)\n"
    "    mio::scenegraph::TransformNode::TransformNode(mio::Transform const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TransformNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *arg1 = (mio::scenegraph::TransformNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TransformNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__TransformNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TransformNode" "', argument " "1"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransformNode_get_child(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *arg1 = (mio::scenegraph::TransformNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::Node *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TransformNode_get_child",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransformNode_get_child" "', argument " "1"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp1);
  {
    try 
    {
      result = (mio::scenegraph::Node *)(arg1)->get_child();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Node, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransformNode_set_child(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *arg1 = (mio::scenegraph::TransformNode *) 0 ;
  mio::scenegraph::Node *arg2 = (mio::scenegraph::Node *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TransformNode_set_child",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransformNode_set_child" "', argument " "1"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__Node, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransformNode_set_child" "', argument " "2"" of type '" "mio::scenegraph::Node *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::Node * >(argp2);
  {
    try 
    {
      (arg1)->set_child(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransformNode_get_transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *arg1 = (mio::scenegraph::TransformNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::Transform *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TransformNode_get_transform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransformNode_get_transform" "', argument " "1"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp1);
  {
    try 
    {
      result = (mio::Transform *) &(arg1)->get_transform();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__Transform, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransformNode_set_transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *arg1 = (mio::scenegraph::TransformNode *) 0 ;
  mio::Transform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TransformNode_set_transform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransformNode_set_transform" "', argument " "1"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__Transform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransformNode_set_transform" "', argument " "2"" of type '" "mio::Transform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransformNode_set_transform" "', argument " "2"" of type '" "mio::Transform const &""'"); 
  }
  arg2 = reinterpret_cast< mio::Transform * >(argp2);
  {
    try 
    {
      (arg1)->set_transform((mio::Transform const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransformNode_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::TransformNode *arg1 = (mio::scenegraph::TransformNode *) 0 ;
  mio::scenegraph::NodeVisitor *arg2 = (mio::scenegraph::NodeVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TransformNode_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransformNode_accept" "', argument " "1"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransformNode_accept" "', argument " "2"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TransformNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__scenegraph__TransformNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Group__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::Group *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Group",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Group" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::scenegraph::Group *)new mio::scenegraph::Group((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Group, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Group__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_Group",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::scenegraph::Group *)new mio::scenegraph::Group();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Group, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Group(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Group__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Group__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Group'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::scenegraph::Group::Group(char const *)\n"
    "    mio::scenegraph::Group::Group()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Group(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *arg1 = (mio::scenegraph::Group *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_Group",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Group, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Group" "', argument " "1"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Group * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Group_append_child(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *arg1 = (mio::scenegraph::Group *) 0 ;
  mio::scenegraph::Node *arg2 = (mio::scenegraph::Node *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Group_append_child",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Group_append_child" "', argument " "1"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Group * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__Node, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Group_append_child" "', argument " "2"" of type '" "mio::scenegraph::Node *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::Node * >(argp2);
  {
    try 
    {
      (arg1)->append_child(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Group__get_child(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *arg1 = (mio::scenegraph::Group *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::scenegraph::Node *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Group__get_child",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Group__get_child" "', argument " "1"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Group * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Group__get_child" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::scenegraph::Node *)(arg1)->_get_child(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Node, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Group_get_child(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *arg1 = (mio::scenegraph::Group *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mio::scenegraph::Node *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Group_get_child",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Group_get_child" "', argument " "1"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Group * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Group_get_child" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try 
    {
      result = (mio::scenegraph::Node *)(arg1)->get_child(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__Node, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Group_get_children_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *arg1 = (mio::scenegraph::Group *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Group_get_children_count",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Group_get_children_count" "', argument " "1"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Group * >(argp1);
  {
    try 
    {
      result = (int)(arg1)->get_children_count();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Group_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::Group *arg1 = (mio::scenegraph::Group *) 0 ;
  mio::scenegraph::NodeVisitor *arg2 = (mio::scenegraph::NodeVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Group_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Group_accept" "', argument " "1"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::Group * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Group_accept" "', argument " "2"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Group_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__scenegraph__Group, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SimplePrimitive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::SimplePrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SimplePrimitive",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimplePrimitive" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::scenegraph::SimplePrimitive *)new mio::scenegraph::SimplePrimitive((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__SimplePrimitive, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimplePrimitive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SimplePrimitive",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::scenegraph::SimplePrimitive *)new mio::scenegraph::SimplePrimitive();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__SimplePrimitive, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimplePrimitive__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  mio::texture::TextureMapping *arg2 = (mio::texture::TextureMapping *) 0 ;
  mio::material::MaterialMapping *arg3 = (mio::material::MaterialMapping *) 0 ;
  mio::material::MaterialList *arg4 = (mio::material::MaterialList *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  mio::scenegraph::SimplePrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SimplePrimitive",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimplePrimitive" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimplePrimitive" "', argument " "2"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMapping * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimplePrimitive" "', argument " "3"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg3 = reinterpret_cast< mio::material::MaterialMapping * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SimplePrimitive" "', argument " "4"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg4 = reinterpret_cast< mio::material::MaterialList * >(argp4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_SimplePrimitive" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  {
    try 
    {
      result = (mio::scenegraph::SimplePrimitive *)new mio::scenegraph::SimplePrimitive(arg1,arg2,arg3,arg4,(char const *)arg5);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__SimplePrimitive, SWIG_POINTER_NEW |  0 );
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimplePrimitive__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::Mesh *arg1 = (mio::geometry::Mesh *) 0 ;
  mio::texture::TextureMapping *arg2 = (mio::texture::TextureMapping *) 0 ;
  mio::material::MaterialMapping *arg3 = (mio::material::MaterialMapping *) 0 ;
  mio::material::MaterialList *arg4 = (mio::material::MaterialList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  mio::scenegraph::SimplePrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SimplePrimitive",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimplePrimitive" "', argument " "1"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::Mesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimplePrimitive" "', argument " "2"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMapping * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimplePrimitive" "', argument " "3"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg3 = reinterpret_cast< mio::material::MaterialMapping * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SimplePrimitive" "', argument " "4"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg4 = reinterpret_cast< mio::material::MaterialList * >(argp4);
  {
    try 
    {
      result = (mio::scenegraph::SimplePrimitive *)new mio::scenegraph::SimplePrimitive(arg1,arg2,arg3,arg4);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__SimplePrimitive, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimplePrimitive(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimplePrimitive__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimplePrimitive__SWIG_0(self, args);
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__geometry__Mesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__texture__TextureMapping, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__material__MaterialMapping, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mio__material__MaterialList, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_SimplePrimitive__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__geometry__Mesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__texture__TextureMapping, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__material__MaterialMapping, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mio__material__MaterialList, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsCharPtrAndSize(argv[4], 0, NULL, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_SimplePrimitive__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimplePrimitive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::scenegraph::SimplePrimitive::SimplePrimitive(char const *)\n"
    "    mio::scenegraph::SimplePrimitive::SimplePrimitive()\n"
    "    mio::scenegraph::SimplePrimitive::SimplePrimitive(mio::geometry::Mesh *,mio::texture::TextureMapping *,mio::material::MaterialMapping *,mio::material::MaterialList *,char const *)\n"
    "    mio::scenegraph::SimplePrimitive::SimplePrimitive(mio::geometry::Mesh *,mio::texture::TextureMapping *,mio::material::MaterialMapping *,mio::material::MaterialList *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimplePrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SimplePrimitive",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimplePrimitive" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_get_mesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::geometry::Mesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_get_mesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_get_mesh" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  {
    try 
    {
      result = (mio::geometry::Mesh *)(arg1)->get_mesh();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_set_mesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  mio::geometry::Mesh *arg2 = (mio::geometry::Mesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_set_mesh",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_set_mesh" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__geometry__Mesh, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimplePrimitive_set_mesh" "', argument " "2"" of type '" "mio::geometry::Mesh *""'"); 
  }
  arg2 = reinterpret_cast< mio::geometry::Mesh * >(argp2);
  {
    try 
    {
      (arg1)->set_mesh(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_get_material_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_get_material_mapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_get_material_mapping" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  {
    try 
    {
      result = (mio::material::MaterialMapping *)(arg1)->get_material_mapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_set_material_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  mio::material::MaterialMapping *arg2 = (mio::material::MaterialMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_set_material_mapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_set_material_mapping" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimplePrimitive_set_material_mapping" "', argument " "2"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialMapping * >(argp2);
  {
    try 
    {
      (arg1)->set_material_mapping(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_get_texture_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::TextureMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_get_texture_mapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_get_texture_mapping" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  {
    try 
    {
      result = (mio::texture::TextureMapping *)(arg1)->get_texture_mapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_set_texture_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  mio::texture::TextureMapping *arg2 = (mio::texture::TextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_set_texture_mapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_set_texture_mapping" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimplePrimitive_set_texture_mapping" "', argument " "2"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMapping * >(argp2);
  {
    try 
    {
      (arg1)->set_texture_mapping(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_get_material_list(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_get_material_list",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_get_material_list" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  {
    try 
    {
      result = (mio::material::MaterialList *)(arg1)->get_material_list();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_set_material_list(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  mio::material::MaterialList *arg2 = (mio::material::MaterialList *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_set_material_list",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_set_material_list" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimplePrimitive_set_material_list" "', argument " "2"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialList * >(argp2);
  {
    try 
    {
      (arg1)->set_material_list(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimplePrimitive_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::SimplePrimitive *arg1 = (mio::scenegraph::SimplePrimitive *) 0 ;
  mio::scenegraph::NodeVisitor *arg2 = (mio::scenegraph::NodeVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SimplePrimitive_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimplePrimitive_accept" "', argument " "1"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimplePrimitive_accept" "', argument " "2"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimplePrimitive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__scenegraph__SimplePrimitive, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RiggedPrimitive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::RiggedPrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_RiggedPrimitive",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RiggedPrimitive" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    try 
    {
      result = (mio::scenegraph::RiggedPrimitive *)new mio::scenegraph::RiggedPrimitive((char const *)arg1);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RiggedPrimitive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_RiggedPrimitive",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::scenegraph::RiggedPrimitive *)new mio::scenegraph::RiggedPrimitive();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RiggedPrimitive__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  mio::texture::TextureMapping *arg2 = (mio::texture::TextureMapping *) 0 ;
  mio::material::MaterialMapping *arg3 = (mio::material::MaterialMapping *) 0 ;
  mio::material::MaterialList *arg4 = (mio::material::MaterialList *) 0 ;
  mio::rigging::Armature *arg5 = (mio::rigging::Armature *) 0 ;
  mio::skinning::IndexedJointWeightMapping *arg6 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  char *arg7 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  int res7 ;
  char *buf7 = 0 ;
  int alloc7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  mio::scenegraph::RiggedPrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_RiggedPrimitive",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RiggedPrimitive" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RiggedPrimitive" "', argument " "2"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMapping * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RiggedPrimitive" "', argument " "3"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg3 = reinterpret_cast< mio::material::MaterialMapping * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_RiggedPrimitive" "', argument " "4"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg4 = reinterpret_cast< mio::material::MaterialList * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_RiggedPrimitive" "', argument " "5"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg5 = reinterpret_cast< mio::rigging::Armature * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_RiggedPrimitive" "', argument " "6"" of type '" "mio::skinning::IndexedJointWeightMapping *""'"); 
  }
  arg6 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp6);
  res7 = SWIG_AsCharPtrAndSize(obj6, &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "new_RiggedPrimitive" "', argument " "7"" of type '" "char const *""'");
  }
  arg7 = reinterpret_cast< char * >(buf7);
  {
    try 
    {
      result = (mio::scenegraph::RiggedPrimitive *)new mio::scenegraph::RiggedPrimitive(arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, SWIG_POINTER_NEW |  0 );
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  result->inc_ref();
  return resultobj;
fail:
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RiggedPrimitive__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::IndexedMesh *arg1 = (mio::geometry::IndexedMesh *) 0 ;
  mio::texture::TextureMapping *arg2 = (mio::texture::TextureMapping *) 0 ;
  mio::material::MaterialMapping *arg3 = (mio::material::MaterialMapping *) 0 ;
  mio::material::MaterialList *arg4 = (mio::material::MaterialList *) 0 ;
  mio::rigging::Armature *arg5 = (mio::rigging::Armature *) 0 ;
  mio::skinning::IndexedJointWeightMapping *arg6 = (mio::skinning::IndexedJointWeightMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  mio::scenegraph::RiggedPrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_RiggedPrimitive",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RiggedPrimitive" "', argument " "1"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RiggedPrimitive" "', argument " "2"" of type '" "mio::texture::TextureMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::TextureMapping * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RiggedPrimitive" "', argument " "3"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg3 = reinterpret_cast< mio::material::MaterialMapping * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_RiggedPrimitive" "', argument " "4"" of type '" "mio::material::MaterialList *""'"); 
  }
  arg4 = reinterpret_cast< mio::material::MaterialList * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_RiggedPrimitive" "', argument " "5"" of type '" "mio::rigging::Armature *""'"); 
  }
  arg5 = reinterpret_cast< mio::rigging::Armature * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_RiggedPrimitive" "', argument " "6"" of type '" "mio::skinning::IndexedJointWeightMapping *""'"); 
  }
  arg6 = reinterpret_cast< mio::skinning::IndexedJointWeightMapping * >(argp6);
  {
    try 
    {
      result = (mio::scenegraph::RiggedPrimitive *)new mio::scenegraph::RiggedPrimitive(arg1,arg2,arg3,arg4,arg5,arg6);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, SWIG_POINTER_NEW |  0 );
  result->inc_ref();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RiggedPrimitive(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_RiggedPrimitive__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_RiggedPrimitive__SWIG_0(self, args);
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__geometry__IndexedMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__texture__TextureMapping, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__material__MaterialMapping, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mio__material__MaterialList, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_RiggedPrimitive__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mio__geometry__IndexedMesh, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mio__texture__TextureMapping, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mio__material__MaterialMapping, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mio__material__MaterialList, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mio__rigging__Armature, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                int res = SWIG_AsCharPtrAndSize(argv[6], 0, NULL, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_new_RiggedPrimitive__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_RiggedPrimitive'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mio::scenegraph::RiggedPrimitive::RiggedPrimitive(char const *)\n"
    "    mio::scenegraph::RiggedPrimitive::RiggedPrimitive()\n"
    "    mio::scenegraph::RiggedPrimitive::RiggedPrimitive(mio::geometry::IndexedMesh *,mio::texture::TextureMapping *,mio::material::MaterialMapping *,mio::material::MaterialList *,mio::rigging::Armature *,mio::skinning::IndexedJointWeightMapping *,char const *)\n"
    "    mio::scenegraph::RiggedPrimitive::RiggedPrimitive(mio::geometry::IndexedMesh *,mio::texture::TextureMapping *,mio::material::MaterialMapping *,mio::material::MaterialList *,mio::rigging::Armature *,mio::skinning::IndexedJointWeightMapping *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RiggedPrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_RiggedPrimitive",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RiggedPrimitive" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      arg1->dec_ref();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_morphed_primitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::scenegraph::SimplePrimitive *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_morphed_primitive",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_morphed_primitive" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::scenegraph::SimplePrimitive *)(arg1)->get_morphed_primitive();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_rest_mesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::geometry::IndexedMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_rest_mesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_rest_mesh" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::geometry::IndexedMesh *)(arg1)->get_rest_mesh();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_moprhed_mesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::geometry::IndexedMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_moprhed_mesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_moprhed_mesh" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::geometry::IndexedMesh *)(arg1)->get_moprhed_mesh();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_texture_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::TextureMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_texture_mapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_texture_mapping" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::texture::TextureMapping *)(arg1)->get_texture_mapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__TextureMapping, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_material_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_material_mapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_material_mapping" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::material::MaterialMapping *)(arg1)->get_material_mapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_material_list(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialList *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_material_list",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_material_list" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::material::MaterialList *)(arg1)->get_material_list();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_rest_armature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_rest_armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_rest_armature" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)(arg1)->get_rest_armature();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_morphed_armature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::rigging::Armature *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_morphed_armature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_morphed_armature" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::rigging::Armature *)(arg1)->get_morphed_armature();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__rigging__Armature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_get_joint_weight_mapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mio::skinning::IndexedJointWeightMapping *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_get_joint_weight_mapping",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_get_joint_weight_mapping" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      result = (mio::skinning::IndexedJointWeightMapping *)(arg1)->get_joint_weight_mapping();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__skinning__IndexedJointWeightMapping, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_update_rest_joint_transforms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_update_rest_joint_transforms",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_update_rest_joint_transforms" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      (arg1)->update_rest_joint_transforms();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_update_morphed_joint_transforms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_update_morphed_joint_transforms",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_update_morphed_joint_transforms" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  {
    try 
    {
      (arg1)->update_morphed_joint_transforms();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_morph(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  mio::rigging::Pose *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_morph",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_morph" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mio__rigging__Pose,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RiggedPrimitive_morph" "', argument " "2"" of type '" "mio::rigging::Pose const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RiggedPrimitive_morph" "', argument " "2"" of type '" "mio::rigging::Pose const &""'"); 
  }
  arg2 = reinterpret_cast< mio::rigging::Pose * >(argp2);
  {
    try 
    {
      (arg1)->morph((mio::rigging::Pose const &)*arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RiggedPrimitive_accept(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::RiggedPrimitive *arg1 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  mio::scenegraph::NodeVisitor *arg2 = (mio::scenegraph::NodeVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"RiggedPrimitive_accept",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RiggedPrimitive_accept" "', argument " "1"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RiggedPrimitive_accept" "', argument " "2"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp2);
  {
    try 
    {
      (arg1)->accept(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RiggedPrimitive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MeshVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  mio::geometry::MeshVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MeshVisitor",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try 
    {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mio::geometry::MeshVisitor *)new SwigDirector_MeshVisitor(arg1); 
      } else {
        SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
        SWIG_fail;
      }
      
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__geometry__MeshVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MeshVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::MeshVisitor *arg1 = (mio::geometry::MeshVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MeshVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__MeshVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MeshVisitor" "', argument " "1"" of type '" "mio::geometry::MeshVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::MeshVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeshVisitor_visit_IndexedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::MeshVisitor *arg1 = (mio::geometry::MeshVisitor *) 0 ;
  mio::geometry::IndexedMesh *arg2 = (mio::geometry::IndexedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"MeshVisitor_visit_IndexedMesh",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__MeshVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeshVisitor_visit_IndexedMesh" "', argument " "1"" of type '" "mio::geometry::MeshVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::MeshVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__geometry__IndexedMesh, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeshVisitor_visit_IndexedMesh" "', argument " "2"" of type '" "mio::geometry::IndexedMesh *""'"); 
  }
  arg2 = reinterpret_cast< mio::geometry::IndexedMesh * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::geometry::MeshVisitor::visit_IndexedMesh(arg2);
        } else {
          (arg1)->visit_IndexedMesh(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MeshVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::geometry::MeshVisitor *arg1 = (mio::geometry::MeshVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"disown_MeshVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__geometry__MeshVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MeshVisitor" "', argument " "1"" of type '" "mio::geometry::MeshVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::geometry::MeshVisitor * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MeshVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__geometry__MeshVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_MaterialVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialVisitor *arg1 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MaterialVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MaterialVisitor" "', argument " "1"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialVisitor_visit_PhongMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialVisitor *arg1 = (mio::material::MaterialVisitor *) 0 ;
  mio::material::PhongMaterial *arg2 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialVisitor_visit_PhongMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialVisitor_visit_PhongMaterial" "', argument " "1"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialVisitor_visit_PhongMaterial" "', argument " "2"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::PhongMaterial * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::material::MaterialVisitor::visit_PhongMaterial(arg2);
        } else {
          (arg1)->visit_PhongMaterial(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialVisitor_visit_TexturedPhongMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialVisitor *arg1 = (mio::material::MaterialVisitor *) 0 ;
  mio::material::TexturedPhongMaterial *arg2 = (mio::material::TexturedPhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialVisitor_visit_TexturedPhongMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialVisitor_visit_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__TexturedPhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialVisitor_visit_TexturedPhongMaterial" "', argument " "2"" of type '" "mio::material::TexturedPhongMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::TexturedPhongMaterial * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::material::MaterialVisitor::visit_TexturedPhongMaterial(arg2);
        } else {
          (arg1)->visit_TexturedPhongMaterial(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialVisitor_visit_MqoMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialVisitor *arg1 = (mio::material::MaterialVisitor *) 0 ;
  mio::material::MqoMaterial *arg2 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialVisitor_visit_MqoMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialVisitor_visit_MqoMaterial" "', argument " "1"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialVisitor_visit_MqoMaterial" "', argument " "2"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MqoMaterial * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::material::MaterialVisitor::visit_MqoMaterial(arg2);
        } else {
          (arg1)->visit_MqoMaterial(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialVisitor_visit_TexturedMqoMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialVisitor *arg1 = (mio::material::MaterialVisitor *) 0 ;
  mio::material::TexturedMqoMaterial *arg2 = (mio::material::TexturedMqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialVisitor_visit_TexturedMqoMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialVisitor_visit_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__TexturedMqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialVisitor_visit_TexturedMqoMaterial" "', argument " "2"" of type '" "mio::material::TexturedMqoMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::TexturedMqoMaterial * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::material::MaterialVisitor::visit_TexturedMqoMaterial(arg2);
        } else {
          (arg1)->visit_TexturedMqoMaterial(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaterialVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MaterialVisitor",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try 
    {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mio::material::MaterialVisitor *)new SwigDirector_MaterialVisitor(arg1); 
      } else {
        result = (mio::material::MaterialVisitor *)new mio::material::MaterialVisitor(); 
      }
      
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MaterialVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialVisitor *arg1 = (mio::material::MaterialVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"disown_MaterialVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MaterialVisitor" "', argument " "1"" of type '" "mio::material::MaterialVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialVisitor * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MaterialVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__MaterialVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_MaterialMappingVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMappingVisitor *arg1 = (mio::material::MaterialMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MaterialMappingVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMappingVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MaterialMappingVisitor" "', argument " "1"" of type '" "mio::material::MaterialMappingVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMappingVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaterialMappingVisitor_visit_ByPolygonMaterialMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMappingVisitor *arg1 = (mio::material::MaterialMappingVisitor *) 0 ;
  mio::material::MaterialMapping *arg2 = (mio::material::MaterialMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"MaterialMappingVisitor_visit_ByPolygonMaterialMapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaterialMappingVisitor_visit_ByPolygonMaterialMapping" "', argument " "1"" of type '" "mio::material::MaterialMappingVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMappingVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MaterialMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaterialMappingVisitor_visit_ByPolygonMaterialMapping" "', argument " "2"" of type '" "mio::material::MaterialMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MaterialMapping * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::material::MaterialMappingVisitor::visit_ByPolygonMaterialMapping(arg2);
        } else {
          (arg1)->visit_ByPolygonMaterialMapping(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaterialMappingVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  mio::material::MaterialMappingVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MaterialMappingVisitor",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try 
    {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mio::material::MaterialMappingVisitor *)new SwigDirector_MaterialMappingVisitor(arg1); 
      } else {
        result = (mio::material::MaterialMappingVisitor *)new mio::material::MaterialMappingVisitor(); 
      }
      
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__material__MaterialMappingVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MaterialMappingVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::material::MaterialMappingVisitor *arg1 = (mio::material::MaterialMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"disown_MaterialMappingVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__material__MaterialMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MaterialMappingVisitor" "', argument " "1"" of type '" "mio::material::MaterialMappingVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::material::MaterialMappingVisitor * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MaterialMappingVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__material__MaterialMappingVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TextureVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::TextureVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TextureVisitor",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try 
    {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mio::texture::TextureVisitor *)new SwigDirector_TextureVisitor(arg1); 
      } else {
        result = (mio::texture::TextureVisitor *)new mio::texture::TextureVisitor(); 
      }
      
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__TextureVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TextureVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureVisitor *arg1 = (mio::texture::TextureVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TextureVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TextureVisitor" "', argument " "1"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureVisitor_visit_ILTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureVisitor *arg1 = (mio::texture::TextureVisitor *) 0 ;
  mio::texture::ILTexture *arg2 = (mio::texture::ILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureVisitor_visit_ILTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureVisitor_visit_ILTexture" "', argument " "1"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__ILTexture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TextureVisitor_visit_ILTexture" "', argument " "2"" of type '" "mio::texture::ILTexture *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::ILTexture * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::texture::TextureVisitor::visit_ILTexture(arg2);
        } else {
          (arg1)->visit_ILTexture(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureVisitor_visit_LazyILTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureVisitor *arg1 = (mio::texture::TextureVisitor *) 0 ;
  mio::texture::LazyILTexture *arg2 = (mio::texture::LazyILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureVisitor_visit_LazyILTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureVisitor_visit_LazyILTexture" "', argument " "1"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__LazyILTexture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TextureVisitor_visit_LazyILTexture" "', argument " "2"" of type '" "mio::texture::LazyILTexture *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::LazyILTexture * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::texture::TextureVisitor::visit_LazyILTexture(arg2);
        } else {
          (arg1)->visit_LazyILTexture(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_TextureVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureVisitor *arg1 = (mio::texture::TextureVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"disown_TextureVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_TextureVisitor" "', argument " "1"" of type '" "mio::texture::TextureVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureVisitor * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TextureVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__TextureVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TextureMappingVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  mio::texture::TextureMappingVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TextureMappingVisitor",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try 
    {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mio::texture::TextureMappingVisitor *)new SwigDirector_TextureMappingVisitor(arg1); 
      } else {
        result = (mio::texture::TextureMappingVisitor *)new mio::texture::TextureMappingVisitor(); 
      }
      
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__texture__TextureMappingVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TextureMappingVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMappingVisitor *arg1 = (mio::texture::TextureMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TextureMappingVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMappingVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TextureMappingVisitor" "', argument " "1"" of type '" "mio::texture::TextureMappingVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMappingVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TextureMappingVisitor_visit_IndexedTextureMapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMappingVisitor *arg1 = (mio::texture::TextureMappingVisitor *) 0 ;
  mio::texture::IndexedTextureMapping *arg2 = (mio::texture::IndexedTextureMapping *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if(!PyArg_UnpackTuple(args,(char *)"TextureMappingVisitor_visit_IndexedTextureMapping",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TextureMappingVisitor_visit_IndexedTextureMapping" "', argument " "1"" of type '" "mio::texture::TextureMappingVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMappingVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__IndexedTextureMapping, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TextureMappingVisitor_visit_IndexedTextureMapping" "', argument " "2"" of type '" "mio::texture::IndexedTextureMapping *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::IndexedTextureMapping * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try 
      {
        if (upcall) {
          (arg1)->mio::texture::TextureMappingVisitor::visit_IndexedTextureMapping(arg2);
        } else {
          (arg1)->visit_IndexedTextureMapping(arg2);
        }
      } 
      catch (mio::IndexException &e) 
      {
        SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
      }
      catch (mio::TypeException &e) 
      {
        SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
      }
      catch (mio::ValueException &e) 
      {
        SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
      }
      catch (std::exception &e)
      {
        SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
      }
      catch (...)
      {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_TextureMappingVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::texture::TextureMappingVisitor *arg1 = (mio::texture::TextureMappingVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"disown_TextureMappingVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__texture__TextureMappingVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_TextureMappingVisitor" "', argument " "1"" of type '" "mio::texture::TextureMappingVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::texture::TextureMappingVisitor * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TextureMappingVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__texture__TextureMappingVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_NodeVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::NodeVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_NodeVisitor",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::scenegraph::NodeVisitor *)new mio::scenegraph::NodeVisitor();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__scenegraph__NodeVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NodeVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::NodeVisitor *arg1 = (mio::scenegraph::NodeVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_NodeVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__NodeVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NodeVisitor" "', argument " "1"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeVisitor_visit_SimplePrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::NodeVisitor *arg1 = (mio::scenegraph::NodeVisitor *) 0 ;
  mio::scenegraph::SimplePrimitive *arg2 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NodeVisitor_visit_SimplePrimitive",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeVisitor_visit_SimplePrimitive" "', argument " "1"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeVisitor_visit_SimplePrimitive" "', argument " "2"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp2);
  {
    try 
    {
      (arg1)->visit_SimplePrimitive(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeVisitor_visit_Group(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::NodeVisitor *arg1 = (mio::scenegraph::NodeVisitor *) 0 ;
  mio::scenegraph::Group *arg2 = (mio::scenegraph::Group *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NodeVisitor_visit_Group",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeVisitor_visit_Group" "', argument " "1"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeVisitor_visit_Group" "', argument " "2"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::Group * >(argp2);
  {
    try 
    {
      (arg1)->visit_Group(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeVisitor_visit_TransformNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::NodeVisitor *arg1 = (mio::scenegraph::NodeVisitor *) 0 ;
  mio::scenegraph::TransformNode *arg2 = (mio::scenegraph::TransformNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NodeVisitor_visit_TransformNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeVisitor_visit_TransformNode" "', argument " "1"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeVisitor_visit_TransformNode" "', argument " "2"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp2);
  {
    try 
    {
      (arg1)->visit_TransformNode(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NodeVisitor_visit_RiggedPrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::scenegraph::NodeVisitor *arg1 = (mio::scenegraph::NodeVisitor *) 0 ;
  mio::scenegraph::RiggedPrimitive *arg2 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"NodeVisitor_visit_RiggedPrimitive",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__scenegraph__NodeVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NodeVisitor_visit_RiggedPrimitive" "', argument " "1"" of type '" "mio::scenegraph::NodeVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::scenegraph::NodeVisitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NodeVisitor_visit_RiggedPrimitive" "', argument " "2"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp2);
  {
    try 
    {
      (arg1)->visit_RiggedPrimitive(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NodeVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__scenegraph__NodeVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_OmniVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  mio::visitor::OmniVisitor *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_OmniVisitor",1,1,&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try 
    {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mio::visitor::OmniVisitor *)new SwigDirector_OmniVisitor(arg1); 
      } else {
        result = (mio::visitor::OmniVisitor *)new mio::visitor::OmniVisitor(); 
      }
      
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__visitor__OmniVisitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OmniVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::visitor::OmniVisitor *arg1 = (mio::visitor::OmniVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_OmniVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__visitor__OmniVisitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OmniVisitor" "', argument " "1"" of type '" "mio::visitor::OmniVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::visitor::OmniVisitor * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_OmniVisitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::visitor::OmniVisitor *arg1 = (mio::visitor::OmniVisitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"disown_OmniVisitor",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__visitor__OmniVisitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_OmniVisitor" "', argument " "1"" of type '" "mio::visitor::OmniVisitor *""'"); 
  }
  arg1 = reinterpret_cast< mio::visitor::OmniVisitor * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OmniVisitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__visitor__OmniVisitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GLRenderer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_GLRenderer",0,0)) SWIG_fail;
  {
    try 
    {
      result = (mio::gl::GLRenderer *)new mio::gl::GLRenderer();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mio__gl__GLRenderer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GLRenderer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_GLRenderer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GLRenderer" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  {
    try 
    {
      delete arg1;
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_SimplePrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::scenegraph::SimplePrimitive *arg2 = (mio::scenegraph::SimplePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_SimplePrimitive",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_SimplePrimitive" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__SimplePrimitive, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_SimplePrimitive" "', argument " "2"" of type '" "mio::scenegraph::SimplePrimitive *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::SimplePrimitive * >(argp2);
  {
    try 
    {
      (arg1)->visit_SimplePrimitive(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_Group(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::scenegraph::Group *arg2 = (mio::scenegraph::Group *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_Group",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_Group" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__Group, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_Group" "', argument " "2"" of type '" "mio::scenegraph::Group *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::Group * >(argp2);
  {
    try 
    {
      (arg1)->visit_Group(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_TransformNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::scenegraph::TransformNode *arg2 = (mio::scenegraph::TransformNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_TransformNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_TransformNode" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__TransformNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_TransformNode" "', argument " "2"" of type '" "mio::scenegraph::TransformNode *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::TransformNode * >(argp2);
  {
    try 
    {
      (arg1)->visit_TransformNode(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_RiggedPrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::scenegraph::RiggedPrimitive *arg2 = (mio::scenegraph::RiggedPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_RiggedPrimitive",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_RiggedPrimitive" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__scenegraph__RiggedPrimitive, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_RiggedPrimitive" "', argument " "2"" of type '" "mio::scenegraph::RiggedPrimitive *""'"); 
  }
  arg2 = reinterpret_cast< mio::scenegraph::RiggedPrimitive * >(argp2);
  {
    try 
    {
      (arg1)->visit_RiggedPrimitive(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_PhongMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::material::PhongMaterial *arg2 = (mio::material::PhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_PhongMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_PhongMaterial" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__PhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_PhongMaterial" "', argument " "2"" of type '" "mio::material::PhongMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::PhongMaterial * >(argp2);
  {
    try 
    {
      (arg1)->visit_PhongMaterial(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_TexturedPhongMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::material::TexturedPhongMaterial *arg2 = (mio::material::TexturedPhongMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_TexturedPhongMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_TexturedPhongMaterial" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__TexturedPhongMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_TexturedPhongMaterial" "', argument " "2"" of type '" "mio::material::TexturedPhongMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::TexturedPhongMaterial * >(argp2);
  {
    try 
    {
      (arg1)->visit_TexturedPhongMaterial(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_MqoMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::material::MqoMaterial *arg2 = (mio::material::MqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_MqoMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_MqoMaterial" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__MqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_MqoMaterial" "', argument " "2"" of type '" "mio::material::MqoMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::MqoMaterial * >(argp2);
  {
    try 
    {
      (arg1)->visit_MqoMaterial(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_TexturedMqoMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::material::TexturedMqoMaterial *arg2 = (mio::material::TexturedMqoMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_TexturedMqoMaterial",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_TexturedMqoMaterial" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__material__TexturedMqoMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_TexturedMqoMaterial" "', argument " "2"" of type '" "mio::material::TexturedMqoMaterial *""'"); 
  }
  arg2 = reinterpret_cast< mio::material::TexturedMqoMaterial * >(argp2);
  {
    try 
    {
      (arg1)->visit_TexturedMqoMaterial(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_ILTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::texture::ILTexture *arg2 = (mio::texture::ILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_ILTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_ILTexture" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__ILTexture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_ILTexture" "', argument " "2"" of type '" "mio::texture::ILTexture *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::ILTexture * >(argp2);
  {
    try 
    {
      (arg1)->visit_ILTexture(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_visit_LazyILTexture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  mio::texture::LazyILTexture *arg2 = (mio::texture::LazyILTexture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_visit_LazyILTexture",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_visit_LazyILTexture" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mio__texture__LazyILTexture, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GLRenderer_visit_LazyILTexture" "', argument " "2"" of type '" "mio::texture::LazyILTexture *""'"); 
  }
  arg2 = reinterpret_cast< mio::texture::LazyILTexture * >(argp2);
  {
    try 
    {
      (arg1)->visit_LazyILTexture(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_reset_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_reset_state",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_reset_state" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  {
    try 
    {
      (arg1)->reset_state();
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_set_draw_normals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_set_draw_normals",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_set_draw_normals" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GLRenderer_set_draw_normals" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try 
    {
      (arg1)->set_draw_normals(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_set_draw_wireframes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_set_draw_wireframes",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_set_draw_wireframes" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GLRenderer_set_draw_wireframes" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try 
    {
      (arg1)->set_draw_wireframes(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GLRenderer_set_draw_surface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mio::gl::GLRenderer *arg1 = (mio::gl::GLRenderer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GLRenderer_set_draw_surface",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mio__gl__GLRenderer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GLRenderer_set_draw_surface" "', argument " "1"" of type '" "mio::gl::GLRenderer *""'"); 
  }
  arg1 = reinterpret_cast< mio::gl::GLRenderer * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GLRenderer_set_draw_surface" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try 
    {
      (arg1)->set_draw_surface(arg2);
    } 
    catch (mio::IndexException &e) 
    {
      SWIG_exception(SWIG_IndexError, const_cast<char*>(e.what()));
    }
    catch (mio::TypeException &e) 
    {
      SWIG_exception(SWIG_TypeError, const_cast<char*>(e.what()));
    }
    catch (mio::ValueException &e) 
    {
      SWIG_exception(SWIG_ValueError, const_cast<char*>(e.what()));
    }
    catch (std::exception &e)
    {
      SWIG_exception(SWIG_RuntimeError, const_cast<char*>(e.what()));
    }
    catch (...)
    {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GLRenderer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mio__gl__GLRenderer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"Vector3_x_set", _wrap_Vector3_x_set, METH_VARARGS, NULL},
	 { (char *)"Vector3_x_get", _wrap_Vector3_x_get, METH_VARARGS, NULL},
	 { (char *)"Vector3_y_set", _wrap_Vector3_y_set, METH_VARARGS, NULL},
	 { (char *)"Vector3_y_get", _wrap_Vector3_y_get, METH_VARARGS, NULL},
	 { (char *)"Vector3_z_set", _wrap_Vector3_z_set, METH_VARARGS, NULL},
	 { (char *)"Vector3_z_get", _wrap_Vector3_z_get, METH_VARARGS, NULL},
	 { (char *)"new_Vector3", _wrap_new_Vector3, METH_VARARGS, NULL},
	 { (char *)"Vector3___add__", _wrap_Vector3___add__, METH_VARARGS, NULL},
	 { (char *)"Vector3___iadd__", _wrap_Vector3___iadd__, METH_VARARGS, NULL},
	 { (char *)"Vector3___sub__", _wrap_Vector3___sub__, METH_VARARGS, NULL},
	 { (char *)"Vector3___isub__", _wrap_Vector3___isub__, METH_VARARGS, NULL},
	 { (char *)"Vector3___eq__", _wrap_Vector3___eq__, METH_VARARGS, NULL},
	 { (char *)"Vector3___mul__", _wrap_Vector3___mul__, METH_VARARGS, NULL},
	 { (char *)"Vector3___imul__", _wrap_Vector3___imul__, METH_VARARGS, NULL},
	 { (char *)"Vector3___div__", _wrap_Vector3___div__, METH_VARARGS, NULL},
	 { (char *)"Vector3___idiv__", _wrap_Vector3___idiv__, METH_VARARGS, NULL},
	 { (char *)"Vector3___neg__", _wrap_Vector3___neg__, METH_VARARGS, NULL},
	 { (char *)"Vector3___ne__", _wrap_Vector3___ne__, METH_VARARGS, NULL},
	 { (char *)"Vector3_fill_array_3", _wrap_Vector3_fill_array_3, METH_VARARGS, NULL},
	 { (char *)"Vector3_fill_array_4", _wrap_Vector3_fill_array_4, METH_VARARGS, NULL},
	 { (char *)"Vector3_length_squared", _wrap_Vector3_length_squared, METH_VARARGS, NULL},
	 { (char *)"Vector3_length", _wrap_Vector3_length, METH_VARARGS, NULL},
	 { (char *)"Vector3___copy__", _wrap_Vector3___copy__, METH_VARARGS, NULL},
	 { (char *)"Vector3___deepcopy__", _wrap_Vector3___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Vector3_is_near", _wrap_Vector3_is_near, METH_VARARGS, NULL},
	 { (char *)"Vector3___getitem__", _wrap_Vector3___getitem__, METH_VARARGS, NULL},
	 { (char *)"Vector3___setitem__", _wrap_Vector3___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_Vector3", _wrap_delete_Vector3, METH_VARARGS, NULL},
	 { (char *)"Vector3_swigregister", Vector3_swigregister, METH_VARARGS, NULL},
	 { (char *)"absdot", _wrap_absdot, METH_VARARGS, NULL},
	 { (char *)"cross", _wrap_cross, METH_VARARGS, NULL},
	 { (char *)"coordinate_system", _wrap_coordinate_system, METH_VARARGS, NULL},
	 { (char *)"spherical_direction", _wrap_spherical_direction, METH_VARARGS, NULL},
	 { (char *)"spherical_theta", _wrap_spherical_theta, METH_VARARGS, NULL},
	 { (char *)"spherical_phi", _wrap_spherical_phi, METH_VARARGS, NULL},
	 { (char *)"Point3_x_set", _wrap_Point3_x_set, METH_VARARGS, NULL},
	 { (char *)"Point3_x_get", _wrap_Point3_x_get, METH_VARARGS, NULL},
	 { (char *)"Point3_y_set", _wrap_Point3_y_set, METH_VARARGS, NULL},
	 { (char *)"Point3_y_get", _wrap_Point3_y_get, METH_VARARGS, NULL},
	 { (char *)"Point3_z_set", _wrap_Point3_z_set, METH_VARARGS, NULL},
	 { (char *)"Point3_z_get", _wrap_Point3_z_get, METH_VARARGS, NULL},
	 { (char *)"new_Point3", _wrap_new_Point3, METH_VARARGS, NULL},
	 { (char *)"Point3___sub__", _wrap_Point3___sub__, METH_VARARGS, NULL},
	 { (char *)"Point3___isub__", _wrap_Point3___isub__, METH_VARARGS, NULL},
	 { (char *)"Point3___iadd__", _wrap_Point3___iadd__, METH_VARARGS, NULL},
	 { (char *)"Point3___add__", _wrap_Point3___add__, METH_VARARGS, NULL},
	 { (char *)"Point3___mul__", _wrap_Point3___mul__, METH_VARARGS, NULL},
	 { (char *)"Point3___imul__", _wrap_Point3___imul__, METH_VARARGS, NULL},
	 { (char *)"Point3___div__", _wrap_Point3___div__, METH_VARARGS, NULL},
	 { (char *)"Point3___idiv__", _wrap_Point3___idiv__, METH_VARARGS, NULL},
	 { (char *)"Point3___eq__", _wrap_Point3___eq__, METH_VARARGS, NULL},
	 { (char *)"Point3___ne__", _wrap_Point3___ne__, METH_VARARGS, NULL},
	 { (char *)"Point3_fill_array_3", _wrap_Point3_fill_array_3, METH_VARARGS, NULL},
	 { (char *)"Point3_fill_array_4", _wrap_Point3_fill_array_4, METH_VARARGS, NULL},
	 { (char *)"Point3___copy__", _wrap_Point3___copy__, METH_VARARGS, NULL},
	 { (char *)"Point3___deepcopy__", _wrap_Point3___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Point3_is_near", _wrap_Point3_is_near, METH_VARARGS, NULL},
	 { (char *)"Point3___getitem__", _wrap_Point3___getitem__, METH_VARARGS, NULL},
	 { (char *)"Point3___setitem__", _wrap_Point3___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_Point3", _wrap_delete_Point3, METH_VARARGS, NULL},
	 { (char *)"Point3_swigregister", Point3_swigregister, METH_VARARGS, NULL},
	 { (char *)"distance", _wrap_distance, METH_VARARGS, NULL},
	 { (char *)"distance_squared", _wrap_distance_squared, METH_VARARGS, NULL},
	 { (char *)"new_Ray", _wrap_new_Ray, METH_VARARGS, NULL},
	 { (char *)"Ray___call__", _wrap_Ray___call__, METH_VARARGS, NULL},
	 { (char *)"Ray_origin_set", _wrap_Ray_origin_set, METH_VARARGS, NULL},
	 { (char *)"Ray_origin_get", _wrap_Ray_origin_get, METH_VARARGS, NULL},
	 { (char *)"Ray_direction_set", _wrap_Ray_direction_set, METH_VARARGS, NULL},
	 { (char *)"Ray_direction_get", _wrap_Ray_direction_get, METH_VARARGS, NULL},
	 { (char *)"delete_Ray", _wrap_delete_Ray, METH_VARARGS, NULL},
	 { (char *)"Ray_swigregister", Ray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Box", _wrap_new_Box, METH_VARARGS, NULL},
	 { (char *)"Box_overlaps", _wrap_Box_overlaps, METH_VARARGS, NULL},
	 { (char *)"Box_inside", _wrap_Box_inside, METH_VARARGS, NULL},
	 { (char *)"Box_expand", _wrap_Box_expand, METH_VARARGS, NULL},
	 { (char *)"Box_volume", _wrap_Box_volume, METH_VARARGS, NULL},
	 { (char *)"Box_surface_area", _wrap_Box_surface_area, METH_VARARGS, NULL},
	 { (char *)"Box_diameter", _wrap_Box_diameter, METH_VARARGS, NULL},
	 { (char *)"Box_centroid", _wrap_Box_centroid, METH_VARARGS, NULL},
	 { (char *)"Box_maximum_extent", _wrap_Box_maximum_extent, METH_VARARGS, NULL},
	 { (char *)"Box_bounding_sphere", _wrap_Box_bounding_sphere, METH_VARARGS, NULL},
	 { (char *)"Box_intersect_predicate", _wrap_Box_intersect_predicate, METH_VARARGS, NULL},
	 { (char *)"Box_min_point_set", _wrap_Box_min_point_set, METH_VARARGS, NULL},
	 { (char *)"Box_min_point_get", _wrap_Box_min_point_get, METH_VARARGS, NULL},
	 { (char *)"Box_max_point_set", _wrap_Box_max_point_set, METH_VARARGS, NULL},
	 { (char *)"Box_max_point_get", _wrap_Box_max_point_get, METH_VARARGS, NULL},
	 { (char *)"delete_Box", _wrap_delete_Box, METH_VARARGS, NULL},
	 { (char *)"Box_swigregister", Box_swigregister, METH_VARARGS, NULL},
	 { (char *)"union_", _wrap_union_, METH_VARARGS, NULL},
	 { (char *)"__lshift__", _wrap___lshift__, METH_VARARGS, NULL},
	 { (char *)"new_Matrix4x4", _wrap_new_Matrix4x4, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4__get", _wrap_Matrix4x4__get, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4__set", _wrap_Matrix4x4__set, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4___mul__", _wrap_Matrix4x4___mul__, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_get_column_major_array", _wrap_Matrix4x4_get_column_major_array, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4___copy__", _wrap_Matrix4x4___copy__, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4___deepcopy__", _wrap_Matrix4x4___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_is_near", _wrap_Matrix4x4_is_near, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_identity", _wrap_Matrix4x4_identity, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_translate", _wrap_Matrix4x4_translate, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_translate_x", _wrap_Matrix4x4_translate_x, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_translate_y", _wrap_Matrix4x4_translate_y, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_translate_z", _wrap_Matrix4x4_translate_z, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_scale", _wrap_Matrix4x4_scale, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_scale_x", _wrap_Matrix4x4_scale_x, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_scale_y", _wrap_Matrix4x4_scale_y, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_scale_z", _wrap_Matrix4x4_scale_z, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_rotate", _wrap_Matrix4x4_rotate, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_rotate_x", _wrap_Matrix4x4_rotate_x, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_rotate_y", _wrap_Matrix4x4_rotate_y, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_rotate_z", _wrap_Matrix4x4_rotate_z, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_look_at", _wrap_Matrix4x4_look_at, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4___getitem__", _wrap_Matrix4x4___getitem__, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4___setitem__", _wrap_Matrix4x4___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_Matrix4x4", _wrap_delete_Matrix4x4, METH_VARARGS, NULL},
	 { (char *)"Matrix4x4_swigregister", Matrix4x4_swigregister, METH_VARARGS, NULL},
	 { (char *)"transpose", _wrap_transpose, METH_VARARGS, NULL},
	 { (char *)"det", _wrap_det, METH_VARARGS, NULL},
	 { (char *)"Transform_m_set", _wrap_Transform_m_set, METH_VARARGS, NULL},
	 { (char *)"Transform_m_get", _wrap_Transform_m_get, METH_VARARGS, NULL},
	 { (char *)"Transform_mi_set", _wrap_Transform_mi_set, METH_VARARGS, NULL},
	 { (char *)"Transform_mi_get", _wrap_Transform_mi_get, METH_VARARGS, NULL},
	 { (char *)"Transform_mit_set", _wrap_Transform_mit_set, METH_VARARGS, NULL},
	 { (char *)"Transform_mit_get", _wrap_Transform_mit_get, METH_VARARGS, NULL},
	 { (char *)"new_Transform", _wrap_new_Transform, METH_VARARGS, NULL},
	 { (char *)"Transform___mul__", _wrap_Transform___mul__, METH_VARARGS, NULL},
	 { (char *)"Transform___imul__", _wrap_Transform___imul__, METH_VARARGS, NULL},
	 { (char *)"Transform_identity", _wrap_Transform_identity, METH_VARARGS, NULL},
	 { (char *)"Transform_translate", _wrap_Transform_translate, METH_VARARGS, NULL},
	 { (char *)"Transform_translate_x", _wrap_Transform_translate_x, METH_VARARGS, NULL},
	 { (char *)"Transform_translate_y", _wrap_Transform_translate_y, METH_VARARGS, NULL},
	 { (char *)"Transform_translate_z", _wrap_Transform_translate_z, METH_VARARGS, NULL},
	 { (char *)"Transform_scale", _wrap_Transform_scale, METH_VARARGS, NULL},
	 { (char *)"Transform_scale_x", _wrap_Transform_scale_x, METH_VARARGS, NULL},
	 { (char *)"Transform_scale_y", _wrap_Transform_scale_y, METH_VARARGS, NULL},
	 { (char *)"Transform_scale_z", _wrap_Transform_scale_z, METH_VARARGS, NULL},
	 { (char *)"Transform_rotate", _wrap_Transform_rotate, METH_VARARGS, NULL},
	 { (char *)"Transform_rotate_x", _wrap_Transform_rotate_x, METH_VARARGS, NULL},
	 { (char *)"Transform_rotate_y", _wrap_Transform_rotate_y, METH_VARARGS, NULL},
	 { (char *)"Transform_rotate_z", _wrap_Transform_rotate_z, METH_VARARGS, NULL},
	 { (char *)"delete_Transform", _wrap_delete_Transform, METH_VARARGS, NULL},
	 { (char *)"Transform_swigregister", Transform_swigregister, METH_VARARGS, NULL},
	 { (char *)"Quaternion_x_set", _wrap_Quaternion_x_set, METH_VARARGS, NULL},
	 { (char *)"Quaternion_x_get", _wrap_Quaternion_x_get, METH_VARARGS, NULL},
	 { (char *)"Quaternion_y_set", _wrap_Quaternion_y_set, METH_VARARGS, NULL},
	 { (char *)"Quaternion_y_get", _wrap_Quaternion_y_get, METH_VARARGS, NULL},
	 { (char *)"Quaternion_z_set", _wrap_Quaternion_z_set, METH_VARARGS, NULL},
	 { (char *)"Quaternion_z_get", _wrap_Quaternion_z_get, METH_VARARGS, NULL},
	 { (char *)"Quaternion_w_set", _wrap_Quaternion_w_set, METH_VARARGS, NULL},
	 { (char *)"Quaternion_w_get", _wrap_Quaternion_w_get, METH_VARARGS, NULL},
	 { (char *)"new_Quaternion", _wrap_new_Quaternion, METH_VARARGS, NULL},
	 { (char *)"Quaternion___add__", _wrap_Quaternion___add__, METH_VARARGS, NULL},
	 { (char *)"Quaternion___iadd__", _wrap_Quaternion___iadd__, METH_VARARGS, NULL},
	 { (char *)"Quaternion___sub__", _wrap_Quaternion___sub__, METH_VARARGS, NULL},
	 { (char *)"Quaternion___isub__", _wrap_Quaternion___isub__, METH_VARARGS, NULL},
	 { (char *)"Quaternion___mul__", _wrap_Quaternion___mul__, METH_VARARGS, NULL},
	 { (char *)"Quaternion___imul__", _wrap_Quaternion___imul__, METH_VARARGS, NULL},
	 { (char *)"Quaternion_get_matrix", _wrap_Quaternion_get_matrix, METH_VARARGS, NULL},
	 { (char *)"Quaternion___copy__", _wrap_Quaternion___copy__, METH_VARARGS, NULL},
	 { (char *)"Quaternion___deepcopy__", _wrap_Quaternion___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Quaternion_is_near", _wrap_Quaternion_is_near, METH_VARARGS, NULL},
	 { (char *)"Quaternion_rotate", _wrap_Quaternion_rotate, METH_VARARGS, NULL},
	 { (char *)"delete_Quaternion", _wrap_delete_Quaternion, METH_VARARGS, NULL},
	 { (char *)"Quaternion_swigregister", Quaternion_swigregister, METH_VARARGS, NULL},
	 { (char *)"conjugate", _wrap_conjugate, METH_VARARGS, NULL},
	 { (char *)"norm", _wrap_norm, METH_VARARGS, NULL},
	 { (char *)"norm_squared", _wrap_norm_squared, METH_VARARGS, NULL},
	 { (char *)"normalize", _wrap_normalize, METH_VARARGS, NULL},
	 { (char *)"inverse", _wrap_inverse, METH_VARARGS, NULL},
	 { (char *)"dot", _wrap_dot, METH_VARARGS, NULL},
	 { (char *)"slerp", _wrap_slerp, METH_VARARGS, NULL},
	 { (char *)"Rgb_r_set", _wrap_Rgb_r_set, METH_VARARGS, NULL},
	 { (char *)"Rgb_r_get", _wrap_Rgb_r_get, METH_VARARGS, NULL},
	 { (char *)"Rgb_g_set", _wrap_Rgb_g_set, METH_VARARGS, NULL},
	 { (char *)"Rgb_g_get", _wrap_Rgb_g_get, METH_VARARGS, NULL},
	 { (char *)"Rgb_b_set", _wrap_Rgb_b_set, METH_VARARGS, NULL},
	 { (char *)"Rgb_b_get", _wrap_Rgb_b_get, METH_VARARGS, NULL},
	 { (char *)"new_Rgb", _wrap_new_Rgb, METH_VARARGS, NULL},
	 { (char *)"Rgb___sub__", _wrap_Rgb___sub__, METH_VARARGS, NULL},
	 { (char *)"Rgb___add__", _wrap_Rgb___add__, METH_VARARGS, NULL},
	 { (char *)"Rgb___iadd__", _wrap_Rgb___iadd__, METH_VARARGS, NULL},
	 { (char *)"Rgb___mul__", _wrap_Rgb___mul__, METH_VARARGS, NULL},
	 { (char *)"Rgb___imul__", _wrap_Rgb___imul__, METH_VARARGS, NULL},
	 { (char *)"Rgb___div__", _wrap_Rgb___div__, METH_VARARGS, NULL},
	 { (char *)"Rgb___copy__", _wrap_Rgb___copy__, METH_VARARGS, NULL},
	 { (char *)"Rgb___deepcopy__", _wrap_Rgb___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Rgb_is_near", _wrap_Rgb_is_near, METH_VARARGS, NULL},
	 { (char *)"Rgb___getitem__", _wrap_Rgb___getitem__, METH_VARARGS, NULL},
	 { (char *)"Rgb___setitem__", _wrap_Rgb___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_Rgb", _wrap_delete_Rgb, METH_VARARGS, NULL},
	 { (char *)"Rgb_swigregister", Rgb_swigregister, METH_VARARGS, NULL},
	 { (char *)"Rgba_r_set", _wrap_Rgba_r_set, METH_VARARGS, NULL},
	 { (char *)"Rgba_r_get", _wrap_Rgba_r_get, METH_VARARGS, NULL},
	 { (char *)"Rgba_g_set", _wrap_Rgba_g_set, METH_VARARGS, NULL},
	 { (char *)"Rgba_g_get", _wrap_Rgba_g_get, METH_VARARGS, NULL},
	 { (char *)"Rgba_b_set", _wrap_Rgba_b_set, METH_VARARGS, NULL},
	 { (char *)"Rgba_b_get", _wrap_Rgba_b_get, METH_VARARGS, NULL},
	 { (char *)"Rgba_a_set", _wrap_Rgba_a_set, METH_VARARGS, NULL},
	 { (char *)"Rgba_a_get", _wrap_Rgba_a_get, METH_VARARGS, NULL},
	 { (char *)"new_Rgba", _wrap_new_Rgba, METH_VARARGS, NULL},
	 { (char *)"Rgba___sub__", _wrap_Rgba___sub__, METH_VARARGS, NULL},
	 { (char *)"Rgba___add__", _wrap_Rgba___add__, METH_VARARGS, NULL},
	 { (char *)"Rgba___iadd__", _wrap_Rgba___iadd__, METH_VARARGS, NULL},
	 { (char *)"Rgba___mul__", _wrap_Rgba___mul__, METH_VARARGS, NULL},
	 { (char *)"Rgba___imul__", _wrap_Rgba___imul__, METH_VARARGS, NULL},
	 { (char *)"Rgba___div__", _wrap_Rgba___div__, METH_VARARGS, NULL},
	 { (char *)"Rgba_fill_array_4", _wrap_Rgba_fill_array_4, METH_VARARGS, NULL},
	 { (char *)"Rgba_get_pointer", _wrap_Rgba_get_pointer, METH_VARARGS, NULL},
	 { (char *)"Rgba___copy__", _wrap_Rgba___copy__, METH_VARARGS, NULL},
	 { (char *)"Rgba___deepcopy__", _wrap_Rgba___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Rgba_is_near", _wrap_Rgba_is_near, METH_VARARGS, NULL},
	 { (char *)"Rgba___getitem__", _wrap_Rgba___getitem__, METH_VARARGS, NULL},
	 { (char *)"Rgba___setitem__", _wrap_Rgba___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_Rgba", _wrap_delete_Rgba, METH_VARARGS, NULL},
	 { (char *)"Rgba_swigregister", Rgba_swigregister, METH_VARARGS, NULL},
	 { (char *)"__add__", _wrap___add__, METH_VARARGS, NULL},
	 { (char *)"__mul__", _wrap___mul__, METH_VARARGS, NULL},
	 { (char *)"new_Int3", _wrap_new_Int3, METH_VARARGS, NULL},
	 { (char *)"Int3__get", _wrap_Int3__get, METH_VARARGS, NULL},
	 { (char *)"Int3__set", _wrap_Int3__set, METH_VARARGS, NULL},
	 { (char *)"Int3___getitem__", _wrap_Int3___getitem__, METH_VARARGS, NULL},
	 { (char *)"Int3___setitem__", _wrap_Int3___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_Int3", _wrap_delete_Int3, METH_VARARGS, NULL},
	 { (char *)"Int3_swigregister", Int3_swigregister, METH_VARARGS, NULL},
	 { (char *)"Uv_u_set", _wrap_Uv_u_set, METH_VARARGS, NULL},
	 { (char *)"Uv_u_get", _wrap_Uv_u_get, METH_VARARGS, NULL},
	 { (char *)"Uv_v_set", _wrap_Uv_v_set, METH_VARARGS, NULL},
	 { (char *)"Uv_v_get", _wrap_Uv_v_get, METH_VARARGS, NULL},
	 { (char *)"new_Uv", _wrap_new_Uv, METH_VARARGS, NULL},
	 { (char *)"Uv___eq__", _wrap_Uv___eq__, METH_VARARGS, NULL},
	 { (char *)"delete_Uv", _wrap_delete_Uv, METH_VARARGS, NULL},
	 { (char *)"Uv_swigregister", Uv_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ReferenceCounted", _wrap_new_ReferenceCounted, METH_VARARGS, NULL},
	 { (char *)"delete_ReferenceCounted", _wrap_delete_ReferenceCounted, METH_VARARGS, NULL},
	 { (char *)"ReferenceCounted_inc_ref", _wrap_ReferenceCounted_inc_ref, METH_VARARGS, NULL},
	 { (char *)"ReferenceCounted_dec_ref", _wrap_ReferenceCounted_dec_ref, METH_VARARGS, NULL},
	 { (char *)"ReferenceCounted_get_ref_count", _wrap_ReferenceCounted_get_ref_count, METH_VARARGS, NULL},
	 { (char *)"ReferenceCounted_swigregister", ReferenceCounted_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MioObject", _wrap_new_MioObject, METH_VARARGS, NULL},
	 { (char *)"delete_MioObject", _wrap_delete_MioObject, METH_VARARGS, NULL},
	 { (char *)"MioObject_get_uid", _wrap_MioObject_get_uid, METH_VARARGS, NULL},
	 { (char *)"MioObject_set_uid", _wrap_MioObject_set_uid, METH_VARARGS, NULL},
	 { (char *)"MioObject_swigregister", MioObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Mesh", _wrap_delete_Mesh, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_bounding_box", _wrap_Mesh_get_bounding_box, METH_VARARGS, NULL},
	 { (char *)"Mesh__get_vertex", _wrap_Mesh__get_vertex, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_vertex", _wrap_Mesh_get_vertex, METH_VARARGS, NULL},
	 { (char *)"Mesh__get_normal", _wrap_Mesh__get_normal, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_normal", _wrap_Mesh_get_normal, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_polygon_count", _wrap_Mesh_get_polygon_count, METH_VARARGS, NULL},
	 { (char *)"Mesh__get_polygon_vertex_count", _wrap_Mesh__get_polygon_vertex_count, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_polygon_vertex_count", _wrap_Mesh_get_polygon_vertex_count, METH_VARARGS, NULL},
	 { (char *)"Mesh__get_polygon_vertex", _wrap_Mesh__get_polygon_vertex, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_polygon_vertex", _wrap_Mesh_get_polygon_vertex, METH_VARARGS, NULL},
	 { (char *)"Mesh__get_polygon_normal", _wrap_Mesh__get_polygon_normal, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_polygon_normal", _wrap_Mesh_get_polygon_normal, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_vertex_count", _wrap_Mesh_get_vertex_count, METH_VARARGS, NULL},
	 { (char *)"Mesh_get_normal_count", _wrap_Mesh_get_normal_count, METH_VARARGS, NULL},
	 { (char *)"Mesh_accept", _wrap_Mesh_accept, METH_VARARGS, NULL},
	 { (char *)"Mesh_swigregister", Mesh_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IndexedMesh", _wrap_new_IndexedMesh, METH_VARARGS, NULL},
	 { (char *)"delete_IndexedMesh", _wrap_delete_IndexedMesh, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_accept", _wrap_IndexedMesh_accept, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_get_bounding_box", _wrap_IndexedMesh_get_bounding_box, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_validate_bounding_box", _wrap_IndexedMesh_validate_bounding_box, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_invalidate_bounding_box", _wrap_IndexedMesh_invalidate_bounding_box, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_vertex", _wrap_IndexedMesh__get_vertex, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_normal", _wrap_IndexedMesh__get_normal, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_get_vertex_count", _wrap_IndexedMesh_get_vertex_count, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_get_normal_count", _wrap_IndexedMesh_get_normal_count, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_append_vertex", _wrap_IndexedMesh_append_vertex, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_append_normal", _wrap_IndexedMesh_append_normal, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__set_normal", _wrap_IndexedMesh__set_normal, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_set_normal", _wrap_IndexedMesh_set_normal, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__set_vertex", _wrap_IndexedMesh__set_vertex, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_set_vertex", _wrap_IndexedMesh_set_vertex, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_append_new_polygon", _wrap_IndexedMesh_append_new_polygon, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_append_vertex_normal_index_to_last_polygon", _wrap_IndexedMesh_append_vertex_normal_index_to_last_polygon, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_get_polygon_count", _wrap_IndexedMesh_get_polygon_count, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_polygon_vertex_count", _wrap_IndexedMesh__get_polygon_vertex_count, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_polygon_vertex", _wrap_IndexedMesh__get_polygon_vertex, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_polygon_normal", _wrap_IndexedMesh__get_polygon_normal, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_polygon_vertex_index", _wrap_IndexedMesh__get_polygon_vertex_index, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_get_polygon_vertex_index", _wrap_IndexedMesh_get_polygon_vertex_index, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh__get_polygon_normal_index", _wrap_IndexedMesh__get_polygon_normal_index, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_get_polygon_normal_index", _wrap_IndexedMesh_get_polygon_normal_index, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh___copy__", _wrap_IndexedMesh___copy__, METH_VARARGS, NULL},
	 { (char *)"IndexedMesh_swigregister", IndexedMesh_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GLTexture", _wrap_new_GLTexture, METH_VARARGS, NULL},
	 { (char *)"delete_GLTexture", _wrap_delete_GLTexture, METH_VARARGS, NULL},
	 { (char *)"GLTexture_bind", _wrap_GLTexture_bind, METH_VARARGS, NULL},
	 { (char *)"GLTexture_download", _wrap_GLTexture_download, METH_VARARGS, NULL},
	 { (char *)"GLTexture_build_mipmap", _wrap_GLTexture_build_mipmap, METH_VARARGS, NULL},
	 { (char *)"GLTexture_swigregister", GLTexture_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ILImage", _wrap_new_ILImage, METH_VARARGS, NULL},
	 { (char *)"delete_ILImage", _wrap_delete_ILImage, METH_VARARGS, NULL},
	 { (char *)"ILImage_get_file_name", _wrap_ILImage_get_file_name, METH_VARARGS, NULL},
	 { (char *)"ILImage_build_mipmap", _wrap_ILImage_build_mipmap, METH_VARARGS, NULL},
	 { (char *)"ILImage_bind", _wrap_ILImage_bind, METH_VARARGS, NULL},
	 { (char *)"ILImage_get_texture", _wrap_ILImage_get_texture, METH_VARARGS, NULL},
	 { (char *)"ILImage_get_image_id", _wrap_ILImage_get_image_id, METH_VARARGS, NULL},
	 { (char *)"ILImage_swigregister", ILImage_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_ILImageService", _wrap_delete_ILImageService, METH_VARARGS, NULL},
	 { (char *)"ILImageService_get_image", _wrap_ILImageService_get_image, METH_VARARGS, NULL},
	 { (char *)"ILImageService_has_image_with_file_name", _wrap_ILImageService_has_image_with_file_name, METH_VARARGS, NULL},
	 { (char *)"ILImageService_has_image_with_id", _wrap_ILImageService_has_image_with_id, METH_VARARGS, NULL},
	 { (char *)"ILImageService_remove", _wrap_ILImageService_remove, METH_VARARGS, NULL},
	 { (char *)"ILImageService_v", _wrap_ILImageService_v, METH_VARARGS, NULL},
	 { (char *)"ILImageService_init", _wrap_ILImageService_init, METH_VARARGS, NULL},
	 { (char *)"ILImageService_swigregister", ILImageService_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Texture", _wrap_new_Texture, METH_VARARGS, NULL},
	 { (char *)"delete_Texture", _wrap_delete_Texture, METH_VARARGS, NULL},
	 { (char *)"Texture_accept", _wrap_Texture_accept, METH_VARARGS, NULL},
	 { (char *)"Texture_swigregister", Texture_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_TextureMapping", _wrap_delete_TextureMapping, METH_VARARGS, NULL},
	 { (char *)"TextureMapping_get_polygon_count", _wrap_TextureMapping_get_polygon_count, METH_VARARGS, NULL},
	 { (char *)"TextureMapping__get_polygon_vertex_count", _wrap_TextureMapping__get_polygon_vertex_count, METH_VARARGS, NULL},
	 { (char *)"TextureMapping_get_polygon_vertex_count", _wrap_TextureMapping_get_polygon_vertex_count, METH_VARARGS, NULL},
	 { (char *)"TextureMapping__get_polygon_tex_coord", _wrap_TextureMapping__get_polygon_tex_coord, METH_VARARGS, NULL},
	 { (char *)"TextureMapping_get_polygon_tex_coord", _wrap_TextureMapping_get_polygon_tex_coord, METH_VARARGS, NULL},
	 { (char *)"TextureMapping_accept", _wrap_TextureMapping_accept, METH_VARARGS, NULL},
	 { (char *)"TextureMapping_swigregister", TextureMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IndexedTextureMapping", _wrap_new_IndexedTextureMapping, METH_VARARGS, NULL},
	 { (char *)"delete_IndexedTextureMapping", _wrap_delete_IndexedTextureMapping, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping__get_tex_coord", _wrap_IndexedTextureMapping__get_tex_coord, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_get_tex_coord", _wrap_IndexedTextureMapping_get_tex_coord, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_append_tex_coord", _wrap_IndexedTextureMapping_append_tex_coord, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_get_tex_coord_count", _wrap_IndexedTextureMapping_get_tex_coord_count, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_get_polygon_count", _wrap_IndexedTextureMapping_get_polygon_count, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping__get_polygon_vertex_count", _wrap_IndexedTextureMapping__get_polygon_vertex_count, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping__get_polygon_tex_coord", _wrap_IndexedTextureMapping__get_polygon_tex_coord, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping__get_polygon_tex_coord_index", _wrap_IndexedTextureMapping__get_polygon_tex_coord_index, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_get_polygon_tex_coord_index", _wrap_IndexedTextureMapping_get_polygon_tex_coord_index, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_append_new_polgon", _wrap_IndexedTextureMapping_append_new_polgon, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_append_tex_coord_index_to_last_polygon", _wrap_IndexedTextureMapping_append_tex_coord_index_to_last_polygon, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_accept", _wrap_IndexedTextureMapping_accept, METH_VARARGS, NULL},
	 { (char *)"IndexedTextureMapping_swigregister", IndexedTextureMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ILTexture", _wrap_new_ILTexture, METH_VARARGS, NULL},
	 { (char *)"delete_ILTexture", _wrap_delete_ILTexture, METH_VARARGS, NULL},
	 { (char *)"ILTexture_get_image", _wrap_ILTexture_get_image, METH_VARARGS, NULL},
	 { (char *)"ILTexture_accept", _wrap_ILTexture_accept, METH_VARARGS, NULL},
	 { (char *)"ILTexture_swigregister", ILTexture_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LazyILTexture", _wrap_new_LazyILTexture, METH_VARARGS, NULL},
	 { (char *)"delete_LazyILTexture", _wrap_delete_LazyILTexture, METH_VARARGS, NULL},
	 { (char *)"LazyILTexture_get_il_texture", _wrap_LazyILTexture_get_il_texture, METH_VARARGS, NULL},
	 { (char *)"LazyILTexture_accept", _wrap_LazyILTexture_accept, METH_VARARGS, NULL},
	 { (char *)"LazyILTexture_swigregister", LazyILTexture_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Material", _wrap_delete_Material, METH_VARARGS, NULL},
	 { (char *)"Material_accept", _wrap_Material_accept, METH_VARARGS, NULL},
	 { (char *)"Material_swigregister", Material_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MaterialList", _wrap_new_MaterialList, METH_VARARGS, NULL},
	 { (char *)"delete_MaterialList", _wrap_delete_MaterialList, METH_VARARGS, NULL},
	 { (char *)"MaterialList_append_material", _wrap_MaterialList_append_material, METH_VARARGS, NULL},
	 { (char *)"MaterialList_get_material_count", _wrap_MaterialList_get_material_count, METH_VARARGS, NULL},
	 { (char *)"MaterialList__get_material", _wrap_MaterialList__get_material, METH_VARARGS, NULL},
	 { (char *)"MaterialList_get_material", _wrap_MaterialList_get_material, METH_VARARGS, NULL},
	 { (char *)"MaterialList_swigregister", MaterialList_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_MaterialMapping", _wrap_delete_MaterialMapping, METH_VARARGS, NULL},
	 { (char *)"MaterialMapping__get_material", _wrap_MaterialMapping__get_material, METH_VARARGS, NULL},
	 { (char *)"MaterialMapping_get_material", _wrap_MaterialMapping_get_material, METH_VARARGS, NULL},
	 { (char *)"MaterialMapping_get_polygon_count", _wrap_MaterialMapping_get_polygon_count, METH_VARARGS, NULL},
	 { (char *)"MaterialMapping_accept", _wrap_MaterialMapping_accept, METH_VARARGS, NULL},
	 { (char *)"MaterialMapping_swigregister", MaterialMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_color_set", _wrap_MqoMaterial_color_set, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_color_get", _wrap_MqoMaterial_color_get, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_ambient_set", _wrap_MqoMaterial_ambient_set, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_ambient_get", _wrap_MqoMaterial_ambient_get, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_diffuse_set", _wrap_MqoMaterial_diffuse_set, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_diffuse_get", _wrap_MqoMaterial_diffuse_get, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_specular_set", _wrap_MqoMaterial_specular_set, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_specular_get", _wrap_MqoMaterial_specular_get, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_emission_set", _wrap_MqoMaterial_emission_set, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_emission_get", _wrap_MqoMaterial_emission_get, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_power_set", _wrap_MqoMaterial_power_set, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_power_get", _wrap_MqoMaterial_power_get, METH_VARARGS, NULL},
	 { (char *)"new_MqoMaterial", _wrap_new_MqoMaterial, METH_VARARGS, NULL},
	 { (char *)"delete_MqoMaterial", _wrap_delete_MqoMaterial, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_accept", _wrap_MqoMaterial_accept, METH_VARARGS, NULL},
	 { (char *)"MqoMaterial_swigregister", MqoMaterial_swigregister, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_ambient_set", _wrap_PhongMaterial_ambient_set, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_ambient_get", _wrap_PhongMaterial_ambient_get, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_diffuse_set", _wrap_PhongMaterial_diffuse_set, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_diffuse_get", _wrap_PhongMaterial_diffuse_get, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_specular_set", _wrap_PhongMaterial_specular_set, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_specular_get", _wrap_PhongMaterial_specular_get, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_emission_set", _wrap_PhongMaterial_emission_set, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_emission_get", _wrap_PhongMaterial_emission_get, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_shininess_set", _wrap_PhongMaterial_shininess_set, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_shininess_get", _wrap_PhongMaterial_shininess_get, METH_VARARGS, NULL},
	 { (char *)"new_PhongMaterial", _wrap_new_PhongMaterial, METH_VARARGS, NULL},
	 { (char *)"delete_PhongMaterial", _wrap_delete_PhongMaterial, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_accept", _wrap_PhongMaterial_accept, METH_VARARGS, NULL},
	 { (char *)"PhongMaterial_swigregister", PhongMaterial_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TexturedMqoMaterial", _wrap_new_TexturedMqoMaterial, METH_VARARGS, NULL},
	 { (char *)"delete_TexturedMqoMaterial", _wrap_delete_TexturedMqoMaterial, METH_VARARGS, NULL},
	 { (char *)"TexturedMqoMaterial_get_texture", _wrap_TexturedMqoMaterial_get_texture, METH_VARARGS, NULL},
	 { (char *)"TexturedMqoMaterial_set_texture", _wrap_TexturedMqoMaterial_set_texture, METH_VARARGS, NULL},
	 { (char *)"TexturedMqoMaterial_accept", _wrap_TexturedMqoMaterial_accept, METH_VARARGS, NULL},
	 { (char *)"TexturedMqoMaterial_swigregister", TexturedMqoMaterial_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TexturedPhongMaterial", _wrap_new_TexturedPhongMaterial, METH_VARARGS, NULL},
	 { (char *)"delete_TexturedPhongMaterial", _wrap_delete_TexturedPhongMaterial, METH_VARARGS, NULL},
	 { (char *)"TexturedPhongMaterial_get_texture", _wrap_TexturedPhongMaterial_get_texture, METH_VARARGS, NULL},
	 { (char *)"TexturedPhongMaterial_set_texture", _wrap_TexturedPhongMaterial_set_texture, METH_VARARGS, NULL},
	 { (char *)"TexturedPhongMaterial_accept", _wrap_TexturedPhongMaterial_accept, METH_VARARGS, NULL},
	 { (char *)"TexturedPhongMaterial_swigregister", TexturedPhongMaterial_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ByPolygonMaterialMapping", _wrap_new_ByPolygonMaterialMapping, METH_VARARGS, NULL},
	 { (char *)"delete_ByPolygonMaterialMapping", _wrap_delete_ByPolygonMaterialMapping, METH_VARARGS, NULL},
	 { (char *)"ByPolygonMaterialMapping__get_material", _wrap_ByPolygonMaterialMapping__get_material, METH_VARARGS, NULL},
	 { (char *)"ByPolygonMaterialMapping_append_mapping", _wrap_ByPolygonMaterialMapping_append_mapping, METH_VARARGS, NULL},
	 { (char *)"ByPolygonMaterialMapping_get_polygon_count", _wrap_ByPolygonMaterialMapping_get_polygon_count, METH_VARARGS, NULL},
	 { (char *)"ByPolygonMaterialMapping_accept", _wrap_ByPolygonMaterialMapping_accept, METH_VARARGS, NULL},
	 { (char *)"ByPolygonMaterialMapping_swigregister", ByPolygonMaterialMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"JointChange_position_set", _wrap_JointChange_position_set, METH_VARARGS, NULL},
	 { (char *)"JointChange_position_get", _wrap_JointChange_position_get, METH_VARARGS, NULL},
	 { (char *)"JointChange_orientation_set", _wrap_JointChange_orientation_set, METH_VARARGS, NULL},
	 { (char *)"JointChange_orientation_get", _wrap_JointChange_orientation_get, METH_VARARGS, NULL},
	 { (char *)"new_JointChange", _wrap_new_JointChange, METH_VARARGS, NULL},
	 { (char *)"JointChange___copy__", _wrap_JointChange___copy__, METH_VARARGS, NULL},
	 { (char *)"JointChange_is_near", _wrap_JointChange_is_near, METH_VARARGS, NULL},
	 { (char *)"delete_JointChange", _wrap_delete_JointChange, METH_VARARGS, NULL},
	 { (char *)"JointChange_swigregister", JointChange_swigregister, METH_VARARGS, NULL},
	 { (char *)"Joint_index_set", _wrap_Joint_index_set, METH_VARARGS, NULL},
	 { (char *)"Joint_index_get", _wrap_Joint_index_get, METH_VARARGS, NULL},
	 { (char *)"Joint_parent_index_set", _wrap_Joint_parent_index_set, METH_VARARGS, NULL},
	 { (char *)"Joint_parent_index_get", _wrap_Joint_parent_index_get, METH_VARARGS, NULL},
	 { (char *)"Joint_position_set", _wrap_Joint_position_set, METH_VARARGS, NULL},
	 { (char *)"Joint_position_get", _wrap_Joint_position_get, METH_VARARGS, NULL},
	 { (char *)"Joint_orientation_set", _wrap_Joint_orientation_set, METH_VARARGS, NULL},
	 { (char *)"Joint_orientation_get", _wrap_Joint_orientation_get, METH_VARARGS, NULL},
	 { (char *)"new_Joint", _wrap_new_Joint, METH_VARARGS, NULL},
	 { (char *)"delete_Joint", _wrap_delete_Joint, METH_VARARGS, NULL},
	 { (char *)"Joint_get_name", _wrap_Joint_get_name, METH_VARARGS, NULL},
	 { (char *)"Joint_get_translation_matrix", _wrap_Joint_get_translation_matrix, METH_VARARGS, NULL},
	 { (char *)"Joint_get_translation_transform", _wrap_Joint_get_translation_transform, METH_VARARGS, NULL},
	 { (char *)"Joint_get_rotation_matrix", _wrap_Joint_get_rotation_matrix, METH_VARARGS, NULL},
	 { (char *)"Joint_get_rotation_transform", _wrap_Joint_get_rotation_transform, METH_VARARGS, NULL},
	 { (char *)"Joint_apply_joint_change", _wrap_Joint_apply_joint_change, METH_VARARGS, NULL},
	 { (char *)"Joint_get_joint_change", _wrap_Joint_get_joint_change, METH_VARARGS, NULL},
	 { (char *)"Joint_swigregister", Joint_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_NameJointChangePair", _wrap_new_NameJointChangePair, METH_VARARGS, NULL},
	 { (char *)"NameJointChangePair_get_name", _wrap_NameJointChangePair_get_name, METH_VARARGS, NULL},
	 { (char *)"NameJointChangePair_get_joint_change", _wrap_NameJointChangePair_get_joint_change, METH_VARARGS, NULL},
	 { (char *)"delete_NameJointChangePair", _wrap_delete_NameJointChangePair, METH_VARARGS, NULL},
	 { (char *)"NameJointChangePair_swigregister", NameJointChangePair_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Pose", _wrap_new_Pose, METH_VARARGS, NULL},
	 { (char *)"delete_Pose", _wrap_delete_Pose, METH_VARARGS, NULL},
	 { (char *)"Pose_has_joint_change_of", _wrap_Pose_has_joint_change_of, METH_VARARGS, NULL},
	 { (char *)"Pose_get_joint_change", _wrap_Pose_get_joint_change, METH_VARARGS, NULL},
	 { (char *)"Pose_set_joint_change", _wrap_Pose_set_joint_change, METH_VARARGS, NULL},
	 { (char *)"Pose_clear", _wrap_Pose_clear, METH_VARARGS, NULL},
	 { (char *)"Pose_get_iterator", _wrap_Pose_get_iterator, METH_VARARGS, NULL},
	 { (char *)"Pose_swigregister", Pose_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_NameJointChangePairIterator", _wrap_new_NameJointChangePairIterator, METH_VARARGS, NULL},
	 { (char *)"delete_NameJointChangePairIterator", _wrap_delete_NameJointChangePairIterator, METH_VARARGS, NULL},
	 { (char *)"NameJointChangePairIterator_has_next", _wrap_NameJointChangePairIterator_has_next, METH_VARARGS, NULL},
	 { (char *)"NameJointChangePairIterator_get_next", _wrap_NameJointChangePairIterator_get_next, METH_VARARGS, NULL},
	 { (char *)"NameJointChangePairIterator_swigregister", NameJointChangePairIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Armature", _wrap_new_Armature, METH_VARARGS, NULL},
	 { (char *)"delete_Armature", _wrap_delete_Armature, METH_VARARGS, NULL},
	 { (char *)"Armature_append_joint", _wrap_Armature_append_joint, METH_VARARGS, NULL},
	 { (char *)"Armature__get_joint", _wrap_Armature__get_joint, METH_VARARGS, NULL},
	 { (char *)"Armature__set_joint_parameter", _wrap_Armature__set_joint_parameter, METH_VARARGS, NULL},
	 { (char *)"Armature_set_joint_parameter", _wrap_Armature_set_joint_parameter, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint", _wrap_Armature_get_joint, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint_count", _wrap_Armature_get_joint_count, METH_VARARGS, NULL},
	 { (char *)"Armature__set_parent", _wrap_Armature__set_parent, METH_VARARGS, NULL},
	 { (char *)"Armature_set_parent", _wrap_Armature_set_parent, METH_VARARGS, NULL},
	 { (char *)"Armature__get_joint_world_position", _wrap_Armature__get_joint_world_position, METH_VARARGS, NULL},
	 { (char *)"Armature__get_joint_world_orientation", _wrap_Armature__get_joint_world_orientation, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint_world_position", _wrap_Armature_get_joint_world_position, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint_world_orientation", _wrap_Armature_get_joint_world_orientation, METH_VARARGS, NULL},
	 { (char *)"Armature__get_joint_to_world_matrix", _wrap_Armature__get_joint_to_world_matrix, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint_to_world_matrix", _wrap_Armature_get_joint_to_world_matrix, METH_VARARGS, NULL},
	 { (char *)"Armature__get_joint_to_world_transform", _wrap_Armature__get_joint_to_world_transform, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint_to_world_transform", _wrap_Armature_get_joint_to_world_transform, METH_VARARGS, NULL},
	 { (char *)"Armature_get_pose", _wrap_Armature_get_pose, METH_VARARGS, NULL},
	 { (char *)"Armature_morph", _wrap_Armature_morph, METH_VARARGS, NULL},
	 { (char *)"Armature___copy__", _wrap_Armature___copy__, METH_VARARGS, NULL},
	 { (char *)"Armature___deepcopy__", _wrap_Armature___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"Armature_get_joint_iterator", _wrap_Armature_get_joint_iterator, METH_VARARGS, NULL},
	 { (char *)"Armature_swigregister", Armature_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_JointIterator", _wrap_new_JointIterator, METH_VARARGS, NULL},
	 { (char *)"delete_JointIterator", _wrap_delete_JointIterator, METH_VARARGS, NULL},
	 { (char *)"JointIterator_has_next", _wrap_JointIterator_has_next, METH_VARARGS, NULL},
	 { (char *)"JointIterator_get_next", _wrap_JointIterator_get_next, METH_VARARGS, NULL},
	 { (char *)"JointIterator_swigregister", JointIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"X_ROTATE_swigconstant", X_ROTATE_swigconstant, METH_VARARGS, NULL},
	 { (char *)"Y_ROTATE_swigconstant", Y_ROTATE_swigconstant, METH_VARARGS, NULL},
	 { (char *)"Z_ROTATE_swigconstant", Z_ROTATE_swigconstant, METH_VARARGS, NULL},
	 { (char *)"X_TRANSLATE_swigconstant", X_TRANSLATE_swigconstant, METH_VARARGS, NULL},
	 { (char *)"Y_TRANSLATE_swigconstant", Y_TRANSLATE_swigconstant, METH_VARARGS, NULL},
	 { (char *)"Z_TRANSLATE_swigconstant", Z_TRANSLATE_swigconstant, METH_VARARGS, NULL},
	 { (char *)"IK_JOINT_PARAMETER_COUNT_swigconstant", IK_JOINT_PARAMETER_COUNT_swigconstant, METH_VARARGS, NULL},
	 { (char *)"new_IKJointParameters", _wrap_new_IKJointParameters, METH_VARARGS, NULL},
	 { (char *)"IKJointParameters___getitem__", _wrap_IKJointParameters___getitem__, METH_VARARGS, NULL},
	 { (char *)"IKJointParameters___setitem__", _wrap_IKJointParameters___setitem__, METH_VARARGS, NULL},
	 { (char *)"IKJointParameters_is_near", _wrap_IKJointParameters_is_near, METH_VARARGS, NULL},
	 { (char *)"IKJointParameters___copy__", _wrap_IKJointParameters___copy__, METH_VARARGS, NULL},
	 { (char *)"IKJointParameters___deepcopy__", _wrap_IKJointParameters___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"delete_IKJointParameters", _wrap_delete_IKJointParameters, METH_VARARGS, NULL},
	 { (char *)"IKJointParameters_swigregister", IKJointParameters_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKEndEffector", _wrap_new_IKEndEffector, METH_VARARGS, NULL},
	 { (char *)"delete_IKEndEffector", _wrap_delete_IKEndEffector, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_get_index", _wrap_IKEndEffector_get_index, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_get_name", _wrap_IKEndEffector_get_name, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_append_ik_joint_index", _wrap_IKEndEffector_append_ik_joint_index, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector___copy__", _wrap_IKEndEffector___copy__, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector___deepcopy__", _wrap_IKEndEffector___deepcopy__, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_get_ik_joint_index_count", _wrap_IKEndEffector_get_ik_joint_index_count, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector__get_ik_joint_index", _wrap_IKEndEffector__get_ik_joint_index, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_get_ik_joint_index", _wrap_IKEndEffector_get_ik_joint_index, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_is_influenced_by", _wrap_IKEndEffector_is_influenced_by, METH_VARARGS, NULL},
	 { (char *)"IKEndEffector_swigregister", IKEndEffector_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKJoint", _wrap_new_IKJoint, METH_VARARGS, NULL},
	 { (char *)"delete_IKJoint", _wrap_delete_IKJoint, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_name", _wrap_IKJoint_get_name, METH_VARARGS, NULL},
	 { (char *)"IKJoint__set_limit", _wrap_IKJoint__set_limit, METH_VARARGS, NULL},
	 { (char *)"IKJoint_set_limit", _wrap_IKJoint_set_limit, METH_VARARGS, NULL},
	 { (char *)"IKJoint__get_lower_bound", _wrap_IKJoint__get_lower_bound, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_lower_bound", _wrap_IKJoint_get_lower_bound, METH_VARARGS, NULL},
	 { (char *)"IKJoint__get_upper_bound", _wrap_IKJoint__get_upper_bound, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_upper_bound", _wrap_IKJoint_get_upper_bound, METH_VARARGS, NULL},
	 { (char *)"IKJoint__enable_parameter", _wrap_IKJoint__enable_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint_enable_parameter", _wrap_IKJoint_enable_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint__disable_parameter", _wrap_IKJoint__disable_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint_disable_parameter", _wrap_IKJoint_disable_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint__is_parameter_enabled", _wrap_IKJoint__is_parameter_enabled, METH_VARARGS, NULL},
	 { (char *)"IKJoint_is_parameter_enabled", _wrap_IKJoint_is_parameter_enabled, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_index", _wrap_IKJoint_get_index, METH_VARARGS, NULL},
	 { (char *)"IKJoint__get_parameter", _wrap_IKJoint__get_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_parameter", _wrap_IKJoint_get_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint__set_parameter", _wrap_IKJoint__set_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint_set_parameter", _wrap_IKJoint_set_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint__get_stiffness", _wrap_IKJoint__get_stiffness, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_stiffness", _wrap_IKJoint_get_stiffness, METH_VARARGS, NULL},
	 { (char *)"IKJoint__set_stiffness", _wrap_IKJoint__set_stiffness, METH_VARARGS, NULL},
	 { (char *)"IKJoint_set_stiffness", _wrap_IKJoint_set_stiffness, METH_VARARGS, NULL},
	 { (char *)"IKJoint_assign_joint_parameters", _wrap_IKJoint_assign_joint_parameters, METH_VARARGS, NULL},
	 { (char *)"IKJoint_set_according_to_joint_change", _wrap_IKJoint_set_according_to_joint_change, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_yaw_quaternion", _wrap_IKJoint_get_yaw_quaternion, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_pitch_quaternion", _wrap_IKJoint_get_pitch_quaternion, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_roll_quaternion", _wrap_IKJoint_get_roll_quaternion, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_rotation_axis_in_joint_space", _wrap_IKJoint_get_rotation_axis_in_joint_space, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_position_change", _wrap_IKJoint_get_position_change, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_orientation_change", _wrap_IKJoint_get_orientation_change, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_yaw", _wrap_IKJoint_get_yaw, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_pitch", _wrap_IKJoint_get_pitch, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_roll", _wrap_IKJoint_get_roll, METH_VARARGS, NULL},
	 { (char *)"IKJoint_rotate", _wrap_IKJoint_rotate, METH_VARARGS, NULL},
	 { (char *)"IKJoint__clamp_parameter", _wrap_IKJoint__clamp_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint_clamp_parameter", _wrap_IKJoint_clamp_parameter, METH_VARARGS, NULL},
	 { (char *)"IKJoint_clamp_all_parameters", _wrap_IKJoint_clamp_all_parameters, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_rotation_axis_to_joint_rotation", _wrap_IKJoint_get_rotation_axis_to_joint_rotation, METH_VARARGS, NULL},
	 { (char *)"IKJoint_set_rotation_to_axis_joint_rotation", _wrap_IKJoint_set_rotation_to_axis_joint_rotation, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_dof", _wrap_IKJoint_get_dof, METH_VARARGS, NULL},
	 { (char *)"IKJoint_get_joint_change", _wrap_IKJoint_get_joint_change, METH_VARARGS, NULL},
	 { (char *)"IKJoint_clear_parameters", _wrap_IKJoint_clear_parameters, METH_VARARGS, NULL},
	 { (char *)"IKJoint_swigregister", IKJoint_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_NamePositionPair", _wrap_new_NamePositionPair, METH_VARARGS, NULL},
	 { (char *)"NamePositionPair_get_name", _wrap_NamePositionPair_get_name, METH_VARARGS, NULL},
	 { (char *)"NamePositionPair_get_position", _wrap_NamePositionPair_get_position, METH_VARARGS, NULL},
	 { (char *)"NamePositionPair_set_position", _wrap_NamePositionPair_set_position, METH_VARARGS, NULL},
	 { (char *)"delete_NamePositionPair", _wrap_delete_NamePositionPair, METH_VARARGS, NULL},
	 { (char *)"NamePositionPair_swigregister", NamePositionPair_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKEndEffectorGoals", _wrap_new_IKEndEffectorGoals, METH_VARARGS, NULL},
	 { (char *)"delete_IKEndEffectorGoals", _wrap_delete_IKEndEffectorGoals, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorGoals_set_end_effector_position", _wrap_IKEndEffectorGoals_set_end_effector_position, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorGoals_get_end_effector_position", _wrap_IKEndEffectorGoals_get_end_effector_position, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorGoals_get_designated_end_effector_count", _wrap_IKEndEffectorGoals_get_designated_end_effector_count, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorGoals_get_end_effector_position_iterator", _wrap_IKEndEffectorGoals_get_end_effector_position_iterator, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorGoals_swigregister", IKEndEffectorGoals_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKEndEffectorPositionIterator", _wrap_new_IKEndEffectorPositionIterator, METH_VARARGS, NULL},
	 { (char *)"delete_IKEndEffectorPositionIterator", _wrap_delete_IKEndEffectorPositionIterator, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorPositionIterator_has_next", _wrap_IKEndEffectorPositionIterator_has_next, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorPositionIterator_get_next", _wrap_IKEndEffectorPositionIterator_get_next, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorPositionIterator_swigregister", IKEndEffectorPositionIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKPose", _wrap_new_IKPose, METH_VARARGS, NULL},
	 { (char *)"delete_IKPose", _wrap_delete_IKPose, METH_VARARGS, NULL},
	 { (char *)"IKPose_get_normal_pose", _wrap_IKPose_get_normal_pose, METH_VARARGS, NULL},
	 { (char *)"IKPose_set_normal_pose", _wrap_IKPose_set_normal_pose, METH_VARARGS, NULL},
	 { (char *)"IKPose_get_end_effector_goals", _wrap_IKPose_get_end_effector_goals, METH_VARARGS, NULL},
	 { (char *)"IKPose_set_end_effector_goals", _wrap_IKPose_set_end_effector_goals, METH_VARARGS, NULL},
	 { (char *)"IKPose_swigregister", IKPose_swigregister, METH_VARARGS, NULL},
	 { (char *)"DEFAULT_MAX_ITERATION_swigconstant", DEFAULT_MAX_ITERATION_swigconstant, METH_VARARGS, NULL},
	 { (char *)"DEFAULT_ERROR_THRESHOLD_swigconstant", DEFAULT_ERROR_THRESHOLD_swigconstant, METH_VARARGS, NULL},
	 { (char *)"new_IKArmature", _wrap_new_IKArmature, METH_VARARGS, NULL},
	 { (char *)"delete_IKArmature", _wrap_delete_IKArmature, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_end_effector_count", _wrap_IKArmature_get_end_effector_count, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_end_effector", _wrap_IKArmature_get_end_effector, METH_VARARGS, NULL},
	 { (char *)"IKArmature_make_end_effector", _wrap_IKArmature_make_end_effector, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_end_effector_iterator", _wrap_IKArmature_get_end_effector_iterator, METH_VARARGS, NULL},
	 { (char *)"IKArmature_add_ik_joint_to_end_effector", _wrap_IKArmature_add_ik_joint_to_end_effector, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_ik_joint_count", _wrap_IKArmature_get_ik_joint_count, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_ik_joint", _wrap_IKArmature_get_ik_joint, METH_VARARGS, NULL},
	 { (char *)"IKArmature_make_ik_joint", _wrap_IKArmature_make_ik_joint, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_ik_joint_iterator", _wrap_IKArmature_get_ik_joint_iterator, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_morphed_armature", _wrap_IKArmature_get_morphed_armature, METH_VARARGS, NULL},
	 { (char *)"IKArmature_get_rest_armature", _wrap_IKArmature_get_rest_armature, METH_VARARGS, NULL},
	 { (char *)"IKArmature_solve", _wrap_IKArmature_solve, METH_VARARGS, NULL},
	 { (char *)"IKArmature_solve_for_pose", _wrap_IKArmature_solve_for_pose, METH_VARARGS, NULL},
	 { (char *)"IKArmature_swigregister", IKArmature_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKEndEffectorIterator", _wrap_new_IKEndEffectorIterator, METH_VARARGS, NULL},
	 { (char *)"delete_IKEndEffectorIterator", _wrap_delete_IKEndEffectorIterator, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorIterator_get_next", _wrap_IKEndEffectorIterator_get_next, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorIterator_has_next", _wrap_IKEndEffectorIterator_has_next, METH_VARARGS, NULL},
	 { (char *)"IKEndEffectorIterator_swigregister", IKEndEffectorIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IKJointIterator", _wrap_new_IKJointIterator, METH_VARARGS, NULL},
	 { (char *)"delete_IKJointIterator", _wrap_delete_IKJointIterator, METH_VARARGS, NULL},
	 { (char *)"IKJointIterator_get_next", _wrap_IKJointIterator_get_next, METH_VARARGS, NULL},
	 { (char *)"IKJointIterator_has_next", _wrap_IKJointIterator_has_next, METH_VARARGS, NULL},
	 { (char *)"IKJointIterator_swigregister", IKJointIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_JointWeightMapping", _wrap_delete_JointWeightMapping, METH_VARARGS, NULL},
	 { (char *)"JointWeightMapping_get_vertex_count", _wrap_JointWeightMapping_get_vertex_count, METH_VARARGS, NULL},
	 { (char *)"JointWeightMapping_get_influencing_joint_count", _wrap_JointWeightMapping_get_influencing_joint_count, METH_VARARGS, NULL},
	 { (char *)"JointWeightMapping_get_influencing_joint_index", _wrap_JointWeightMapping_get_influencing_joint_index, METH_VARARGS, NULL},
	 { (char *)"JointWeightMapping_get_influencing_joint_weight", _wrap_JointWeightMapping_get_influencing_joint_weight, METH_VARARGS, NULL},
	 { (char *)"JointWeightMapping_swigregister", JointWeightMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IndexedJointWeightMapping", _wrap_new_IndexedJointWeightMapping, METH_VARARGS, NULL},
	 { (char *)"delete_IndexedJointWeightMapping", _wrap_delete_IndexedJointWeightMapping, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_get_vertex_count", _wrap_IndexedJointWeightMapping_get_vertex_count, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_append_new_vertex", _wrap_IndexedJointWeightMapping_append_new_vertex, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping__append_joint_weight", _wrap_IndexedJointWeightMapping__append_joint_weight, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_append_joint_weight", _wrap_IndexedJointWeightMapping_append_joint_weight, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping__get_influencing_joint_count", _wrap_IndexedJointWeightMapping__get_influencing_joint_count, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_get_influencing_joint_count", _wrap_IndexedJointWeightMapping_get_influencing_joint_count, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping__get_influencing_joint_index", _wrap_IndexedJointWeightMapping__get_influencing_joint_index, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_get_influencing_joint_index", _wrap_IndexedJointWeightMapping_get_influencing_joint_index, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping__get_influencing_joint_weight", _wrap_IndexedJointWeightMapping__get_influencing_joint_weight, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_get_influencing_joint_weight", _wrap_IndexedJointWeightMapping_get_influencing_joint_weight, METH_VARARGS, NULL},
	 { (char *)"IndexedJointWeightMapping_swigregister", IndexedJointWeightMapping_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Curve_float", _wrap_delete_Curve_float, METH_VARARGS, NULL},
	 { (char *)"Curve_float_evaluate", _wrap_Curve_float_evaluate, METH_VARARGS, NULL},
	 { (char *)"Curve_float_get_range_lower_bound", _wrap_Curve_float_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_float_get_range_upper_bound", _wrap_Curve_float_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_float___call__", _wrap_Curve_float___call__, METH_VARARGS, NULL},
	 { (char *)"Curve_float_swigregister", Curve_float_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Curve_Vector3", _wrap_delete_Curve_Vector3, METH_VARARGS, NULL},
	 { (char *)"Curve_Vector3_evaluate", _wrap_Curve_Vector3_evaluate, METH_VARARGS, NULL},
	 { (char *)"Curve_Vector3_get_range_lower_bound", _wrap_Curve_Vector3_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_Vector3_get_range_upper_bound", _wrap_Curve_Vector3_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_Vector3___call__", _wrap_Curve_Vector3___call__, METH_VARARGS, NULL},
	 { (char *)"Curve_Vector3_swigregister", Curve_Vector3_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Curve_Quaternion", _wrap_delete_Curve_Quaternion, METH_VARARGS, NULL},
	 { (char *)"Curve_Quaternion_evaluate", _wrap_Curve_Quaternion_evaluate, METH_VARARGS, NULL},
	 { (char *)"Curve_Quaternion_get_range_lower_bound", _wrap_Curve_Quaternion_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_Quaternion_get_range_upper_bound", _wrap_Curve_Quaternion_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_Quaternion___call__", _wrap_Curve_Quaternion___call__, METH_VARARGS, NULL},
	 { (char *)"Curve_Quaternion_swigregister", Curve_Quaternion_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Curve_JointChange", _wrap_delete_Curve_JointChange, METH_VARARGS, NULL},
	 { (char *)"Curve_JointChange_evaluate", _wrap_Curve_JointChange_evaluate, METH_VARARGS, NULL},
	 { (char *)"Curve_JointChange_get_range_lower_bound", _wrap_Curve_JointChange_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_JointChange_get_range_upper_bound", _wrap_Curve_JointChange_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Curve_JointChange___call__", _wrap_Curve_JointChange___call__, METH_VARARGS, NULL},
	 { (char *)"Curve_JointChange_swigregister", Curve_JointChange_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Polyline_float", _wrap_new_Polyline_float, METH_VARARGS, NULL},
	 { (char *)"delete_Polyline_float", _wrap_delete_Polyline_float, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_zero", _wrap_Polyline_float_zero, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_interpolate", _wrap_Polyline_float_interpolate, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_evaluate", _wrap_Polyline_float_evaluate, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_get_range_lower_bound", _wrap_Polyline_float_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_get_range_upper_bound", _wrap_Polyline_float_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_get_control_point_count", _wrap_Polyline_float_get_control_point_count, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_set_control_point", _wrap_Polyline_float_set_control_point, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_get_control_point_iterator", _wrap_Polyline_float_get_control_point_iterator, METH_VARARGS, NULL},
	 { (char *)"Polyline_float_swigregister", Polyline_float_swigregister, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_float_time_set", _wrap_PolylineControlPoint_float_time_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_float_time_get", _wrap_PolylineControlPoint_float_time_get, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_float_value_set", _wrap_PolylineControlPoint_float_value_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_float_value_get", _wrap_PolylineControlPoint_float_value_get, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPoint_float", _wrap_new_PolylineControlPoint_float, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPoint_float", _wrap_delete_PolylineControlPoint_float, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_float_swigregister", PolylineControlPoint_float_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPointIterator_float", _wrap_new_PolylineControlPointIterator_float, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPointIterator_float", _wrap_delete_PolylineControlPointIterator_float, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_float_has_next", _wrap_PolylineControlPointIterator_float_has_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_float_get_next", _wrap_PolylineControlPointIterator_float_get_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_float_peek", _wrap_PolylineControlPointIterator_float_peek, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_float_swigregister", PolylineControlPointIterator_float_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Polyline_Vector3", _wrap_new_Polyline_Vector3, METH_VARARGS, NULL},
	 { (char *)"delete_Polyline_Vector3", _wrap_delete_Polyline_Vector3, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_zero", _wrap_Polyline_Vector3_zero, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_interpolate", _wrap_Polyline_Vector3_interpolate, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_evaluate", _wrap_Polyline_Vector3_evaluate, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_get_range_lower_bound", _wrap_Polyline_Vector3_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_get_range_upper_bound", _wrap_Polyline_Vector3_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_get_control_point_count", _wrap_Polyline_Vector3_get_control_point_count, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_set_control_point", _wrap_Polyline_Vector3_set_control_point, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_get_control_point_iterator", _wrap_Polyline_Vector3_get_control_point_iterator, METH_VARARGS, NULL},
	 { (char *)"Polyline_Vector3_swigregister", Polyline_Vector3_swigregister, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Vector3_time_set", _wrap_PolylineControlPoint_Vector3_time_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Vector3_time_get", _wrap_PolylineControlPoint_Vector3_time_get, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Vector3_value_set", _wrap_PolylineControlPoint_Vector3_value_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Vector3_value_get", _wrap_PolylineControlPoint_Vector3_value_get, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPoint_Vector3", _wrap_new_PolylineControlPoint_Vector3, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPoint_Vector3", _wrap_delete_PolylineControlPoint_Vector3, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Vector3_swigregister", PolylineControlPoint_Vector3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPointIterator_Vector3", _wrap_new_PolylineControlPointIterator_Vector3, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPointIterator_Vector3", _wrap_delete_PolylineControlPointIterator_Vector3, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Vector3_has_next", _wrap_PolylineControlPointIterator_Vector3_has_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Vector3_get_next", _wrap_PolylineControlPointIterator_Vector3_get_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Vector3_peek", _wrap_PolylineControlPointIterator_Vector3_peek, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Vector3_swigregister", PolylineControlPointIterator_Vector3_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Polyline_Quaternion", _wrap_new_Polyline_Quaternion, METH_VARARGS, NULL},
	 { (char *)"delete_Polyline_Quaternion", _wrap_delete_Polyline_Quaternion, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_zero", _wrap_Polyline_Quaternion_zero, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_interpolate", _wrap_Polyline_Quaternion_interpolate, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_evaluate", _wrap_Polyline_Quaternion_evaluate, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_get_range_lower_bound", _wrap_Polyline_Quaternion_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_get_range_upper_bound", _wrap_Polyline_Quaternion_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_get_control_point_count", _wrap_Polyline_Quaternion_get_control_point_count, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_set_control_point", _wrap_Polyline_Quaternion_set_control_point, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_get_control_point_iterator", _wrap_Polyline_Quaternion_get_control_point_iterator, METH_VARARGS, NULL},
	 { (char *)"Polyline_Quaternion_swigregister", Polyline_Quaternion_swigregister, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Quaternion_time_set", _wrap_PolylineControlPoint_Quaternion_time_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Quaternion_time_get", _wrap_PolylineControlPoint_Quaternion_time_get, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Quaternion_value_set", _wrap_PolylineControlPoint_Quaternion_value_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Quaternion_value_get", _wrap_PolylineControlPoint_Quaternion_value_get, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPoint_Quaternion", _wrap_new_PolylineControlPoint_Quaternion, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPoint_Quaternion", _wrap_delete_PolylineControlPoint_Quaternion, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_Quaternion_swigregister", PolylineControlPoint_Quaternion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPointIterator_Quaternion", _wrap_new_PolylineControlPointIterator_Quaternion, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPointIterator_Quaternion", _wrap_delete_PolylineControlPointIterator_Quaternion, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Quaternion_has_next", _wrap_PolylineControlPointIterator_Quaternion_has_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Quaternion_get_next", _wrap_PolylineControlPointIterator_Quaternion_get_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Quaternion_peek", _wrap_PolylineControlPointIterator_Quaternion_peek, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_Quaternion_swigregister", PolylineControlPointIterator_Quaternion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Polyline_JointChange", _wrap_new_Polyline_JointChange, METH_VARARGS, NULL},
	 { (char *)"delete_Polyline_JointChange", _wrap_delete_Polyline_JointChange, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_zero", _wrap_Polyline_JointChange_zero, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_interpolate", _wrap_Polyline_JointChange_interpolate, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_evaluate", _wrap_Polyline_JointChange_evaluate, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_get_range_lower_bound", _wrap_Polyline_JointChange_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_get_range_upper_bound", _wrap_Polyline_JointChange_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_get_control_point_count", _wrap_Polyline_JointChange_get_control_point_count, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_set_control_point", _wrap_Polyline_JointChange_set_control_point, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_get_control_point_iterator", _wrap_Polyline_JointChange_get_control_point_iterator, METH_VARARGS, NULL},
	 { (char *)"Polyline_JointChange_swigregister", Polyline_JointChange_swigregister, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_JointChange_time_set", _wrap_PolylineControlPoint_JointChange_time_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_JointChange_time_get", _wrap_PolylineControlPoint_JointChange_time_get, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_JointChange_value_set", _wrap_PolylineControlPoint_JointChange_value_set, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_JointChange_value_get", _wrap_PolylineControlPoint_JointChange_value_get, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPoint_JointChange", _wrap_new_PolylineControlPoint_JointChange, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPoint_JointChange", _wrap_delete_PolylineControlPoint_JointChange, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPoint_JointChange_swigregister", PolylineControlPoint_JointChange_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PolylineControlPointIterator_JointChange", _wrap_new_PolylineControlPointIterator_JointChange, METH_VARARGS, NULL},
	 { (char *)"delete_PolylineControlPointIterator_JointChange", _wrap_delete_PolylineControlPointIterator_JointChange, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_JointChange_has_next", _wrap_PolylineControlPointIterator_JointChange_has_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_JointChange_get_next", _wrap_PolylineControlPointIterator_JointChange_get_next, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_JointChange_peek", _wrap_PolylineControlPointIterator_JointChange_peek, METH_VARARGS, NULL},
	 { (char *)"PolylineControlPointIterator_JointChange_swigregister", PolylineControlPointIterator_JointChange_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PoseAnimation", _wrap_new_PoseAnimation, METH_VARARGS, NULL},
	 { (char *)"delete_PoseAnimation", _wrap_delete_PoseAnimation, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_get_joint_curve", _wrap_PoseAnimation_get_joint_curve, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_set_joint_curve", _wrap_PoseAnimation_set_joint_curve, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_get_pose", _wrap_PoseAnimation_get_pose, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_update_range", _wrap_PoseAnimation_update_range, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_get_range_lower_bound", _wrap_PoseAnimation_get_range_lower_bound, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_get_range_upper_bound", _wrap_PoseAnimation_get_range_upper_bound, METH_VARARGS, NULL},
	 { (char *)"PoseAnimation_swigregister", PoseAnimation_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Node", _wrap_new_Node, METH_VARARGS, NULL},
	 { (char *)"Node_accept", _wrap_Node_accept, METH_VARARGS, NULL},
	 { (char *)"delete_Node", _wrap_delete_Node, METH_VARARGS, NULL},
	 { (char *)"Node_swigregister", Node_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TransformNode", _wrap_new_TransformNode, METH_VARARGS, NULL},
	 { (char *)"delete_TransformNode", _wrap_delete_TransformNode, METH_VARARGS, NULL},
	 { (char *)"TransformNode_get_child", _wrap_TransformNode_get_child, METH_VARARGS, NULL},
	 { (char *)"TransformNode_set_child", _wrap_TransformNode_set_child, METH_VARARGS, NULL},
	 { (char *)"TransformNode_get_transform", _wrap_TransformNode_get_transform, METH_VARARGS, NULL},
	 { (char *)"TransformNode_set_transform", _wrap_TransformNode_set_transform, METH_VARARGS, NULL},
	 { (char *)"TransformNode_accept", _wrap_TransformNode_accept, METH_VARARGS, NULL},
	 { (char *)"TransformNode_swigregister", TransformNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Group", _wrap_new_Group, METH_VARARGS, NULL},
	 { (char *)"delete_Group", _wrap_delete_Group, METH_VARARGS, NULL},
	 { (char *)"Group_append_child", _wrap_Group_append_child, METH_VARARGS, NULL},
	 { (char *)"Group__get_child", _wrap_Group__get_child, METH_VARARGS, NULL},
	 { (char *)"Group_get_child", _wrap_Group_get_child, METH_VARARGS, NULL},
	 { (char *)"Group_get_children_count", _wrap_Group_get_children_count, METH_VARARGS, NULL},
	 { (char *)"Group_accept", _wrap_Group_accept, METH_VARARGS, NULL},
	 { (char *)"Group_swigregister", Group_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SimplePrimitive", _wrap_new_SimplePrimitive, METH_VARARGS, NULL},
	 { (char *)"delete_SimplePrimitive", _wrap_delete_SimplePrimitive, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_get_mesh", _wrap_SimplePrimitive_get_mesh, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_set_mesh", _wrap_SimplePrimitive_set_mesh, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_get_material_mapping", _wrap_SimplePrimitive_get_material_mapping, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_set_material_mapping", _wrap_SimplePrimitive_set_material_mapping, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_get_texture_mapping", _wrap_SimplePrimitive_get_texture_mapping, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_set_texture_mapping", _wrap_SimplePrimitive_set_texture_mapping, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_get_material_list", _wrap_SimplePrimitive_get_material_list, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_set_material_list", _wrap_SimplePrimitive_set_material_list, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_accept", _wrap_SimplePrimitive_accept, METH_VARARGS, NULL},
	 { (char *)"SimplePrimitive_swigregister", SimplePrimitive_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RiggedPrimitive", _wrap_new_RiggedPrimitive, METH_VARARGS, NULL},
	 { (char *)"delete_RiggedPrimitive", _wrap_delete_RiggedPrimitive, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_morphed_primitive", _wrap_RiggedPrimitive_get_morphed_primitive, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_rest_mesh", _wrap_RiggedPrimitive_get_rest_mesh, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_moprhed_mesh", _wrap_RiggedPrimitive_get_moprhed_mesh, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_texture_mapping", _wrap_RiggedPrimitive_get_texture_mapping, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_material_mapping", _wrap_RiggedPrimitive_get_material_mapping, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_material_list", _wrap_RiggedPrimitive_get_material_list, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_rest_armature", _wrap_RiggedPrimitive_get_rest_armature, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_morphed_armature", _wrap_RiggedPrimitive_get_morphed_armature, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_get_joint_weight_mapping", _wrap_RiggedPrimitive_get_joint_weight_mapping, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_update_rest_joint_transforms", _wrap_RiggedPrimitive_update_rest_joint_transforms, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_update_morphed_joint_transforms", _wrap_RiggedPrimitive_update_morphed_joint_transforms, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_morph", _wrap_RiggedPrimitive_morph, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_accept", _wrap_RiggedPrimitive_accept, METH_VARARGS, NULL},
	 { (char *)"RiggedPrimitive_swigregister", RiggedPrimitive_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MeshVisitor", _wrap_new_MeshVisitor, METH_VARARGS, NULL},
	 { (char *)"delete_MeshVisitor", _wrap_delete_MeshVisitor, METH_VARARGS, NULL},
	 { (char *)"MeshVisitor_visit_IndexedMesh", _wrap_MeshVisitor_visit_IndexedMesh, METH_VARARGS, NULL},
	 { (char *)"disown_MeshVisitor", _wrap_disown_MeshVisitor, METH_VARARGS, NULL},
	 { (char *)"MeshVisitor_swigregister", MeshVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_MaterialVisitor", _wrap_delete_MaterialVisitor, METH_VARARGS, NULL},
	 { (char *)"MaterialVisitor_visit_PhongMaterial", _wrap_MaterialVisitor_visit_PhongMaterial, METH_VARARGS, NULL},
	 { (char *)"MaterialVisitor_visit_TexturedPhongMaterial", _wrap_MaterialVisitor_visit_TexturedPhongMaterial, METH_VARARGS, NULL},
	 { (char *)"MaterialVisitor_visit_MqoMaterial", _wrap_MaterialVisitor_visit_MqoMaterial, METH_VARARGS, NULL},
	 { (char *)"MaterialVisitor_visit_TexturedMqoMaterial", _wrap_MaterialVisitor_visit_TexturedMqoMaterial, METH_VARARGS, NULL},
	 { (char *)"new_MaterialVisitor", _wrap_new_MaterialVisitor, METH_VARARGS, NULL},
	 { (char *)"disown_MaterialVisitor", _wrap_disown_MaterialVisitor, METH_VARARGS, NULL},
	 { (char *)"MaterialVisitor_swigregister", MaterialVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_MaterialMappingVisitor", _wrap_delete_MaterialMappingVisitor, METH_VARARGS, NULL},
	 { (char *)"MaterialMappingVisitor_visit_ByPolygonMaterialMapping", _wrap_MaterialMappingVisitor_visit_ByPolygonMaterialMapping, METH_VARARGS, NULL},
	 { (char *)"new_MaterialMappingVisitor", _wrap_new_MaterialMappingVisitor, METH_VARARGS, NULL},
	 { (char *)"disown_MaterialMappingVisitor", _wrap_disown_MaterialMappingVisitor, METH_VARARGS, NULL},
	 { (char *)"MaterialMappingVisitor_swigregister", MaterialMappingVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TextureVisitor", _wrap_new_TextureVisitor, METH_VARARGS, NULL},
	 { (char *)"delete_TextureVisitor", _wrap_delete_TextureVisitor, METH_VARARGS, NULL},
	 { (char *)"TextureVisitor_visit_ILTexture", _wrap_TextureVisitor_visit_ILTexture, METH_VARARGS, NULL},
	 { (char *)"TextureVisitor_visit_LazyILTexture", _wrap_TextureVisitor_visit_LazyILTexture, METH_VARARGS, NULL},
	 { (char *)"disown_TextureVisitor", _wrap_disown_TextureVisitor, METH_VARARGS, NULL},
	 { (char *)"TextureVisitor_swigregister", TextureVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TextureMappingVisitor", _wrap_new_TextureMappingVisitor, METH_VARARGS, NULL},
	 { (char *)"delete_TextureMappingVisitor", _wrap_delete_TextureMappingVisitor, METH_VARARGS, NULL},
	 { (char *)"TextureMappingVisitor_visit_IndexedTextureMapping", _wrap_TextureMappingVisitor_visit_IndexedTextureMapping, METH_VARARGS, NULL},
	 { (char *)"disown_TextureMappingVisitor", _wrap_disown_TextureMappingVisitor, METH_VARARGS, NULL},
	 { (char *)"TextureMappingVisitor_swigregister", TextureMappingVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_NodeVisitor", _wrap_new_NodeVisitor, METH_VARARGS, NULL},
	 { (char *)"delete_NodeVisitor", _wrap_delete_NodeVisitor, METH_VARARGS, NULL},
	 { (char *)"NodeVisitor_visit_SimplePrimitive", _wrap_NodeVisitor_visit_SimplePrimitive, METH_VARARGS, NULL},
	 { (char *)"NodeVisitor_visit_Group", _wrap_NodeVisitor_visit_Group, METH_VARARGS, NULL},
	 { (char *)"NodeVisitor_visit_TransformNode", _wrap_NodeVisitor_visit_TransformNode, METH_VARARGS, NULL},
	 { (char *)"NodeVisitor_visit_RiggedPrimitive", _wrap_NodeVisitor_visit_RiggedPrimitive, METH_VARARGS, NULL},
	 { (char *)"NodeVisitor_swigregister", NodeVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_OmniVisitor", _wrap_new_OmniVisitor, METH_VARARGS, NULL},
	 { (char *)"delete_OmniVisitor", _wrap_delete_OmniVisitor, METH_VARARGS, NULL},
	 { (char *)"disown_OmniVisitor", _wrap_disown_OmniVisitor, METH_VARARGS, NULL},
	 { (char *)"OmniVisitor_swigregister", OmniVisitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GLRenderer", _wrap_new_GLRenderer, METH_VARARGS, NULL},
	 { (char *)"delete_GLRenderer", _wrap_delete_GLRenderer, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_SimplePrimitive", _wrap_GLRenderer_visit_SimplePrimitive, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_Group", _wrap_GLRenderer_visit_Group, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_TransformNode", _wrap_GLRenderer_visit_TransformNode, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_RiggedPrimitive", _wrap_GLRenderer_visit_RiggedPrimitive, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_PhongMaterial", _wrap_GLRenderer_visit_PhongMaterial, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_TexturedPhongMaterial", _wrap_GLRenderer_visit_TexturedPhongMaterial, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_MqoMaterial", _wrap_GLRenderer_visit_MqoMaterial, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_TexturedMqoMaterial", _wrap_GLRenderer_visit_TexturedMqoMaterial, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_ILTexture", _wrap_GLRenderer_visit_ILTexture, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_visit_LazyILTexture", _wrap_GLRenderer_visit_LazyILTexture, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_reset_state", _wrap_GLRenderer_reset_state, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_set_draw_normals", _wrap_GLRenderer_set_draw_normals, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_set_draw_wireframes", _wrap_GLRenderer_set_draw_wireframes, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_set_draw_surface", _wrap_GLRenderer_set_draw_surface, METH_VARARGS, NULL},
	 { (char *)"GLRenderer_swigregister", GLRenderer_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_mio__il__ILImageTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::il::ILImage *) x));
}
static void *_p_mio__ik__IKEndEffectorGoalsTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::ik::IKEndEffectorGoals *) x));
}
static void *_p_mio__geometry__MeshTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::geometry::Mesh *) x));
}
static void *_p_mio__ik__IKArmatureTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::ik::IKArmature *) x));
}
static void *_p_mio__rigging__ArmatureTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::rigging::Armature *) x));
}
static void *_p_mio__curve__Polyline_Vector3To_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::curve::Curve_Vector3 *) ((mio::curve::Polyline_Vector3 *) x));
}
static void *_p_mio__curve__Curve_Vector3To_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::curve::Curve_Vector3 *) x));
}
static void *_p_mio__ik__IKJointTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::ik::IKJoint *) x));
}
static void *_p_mio__gl__GLTextureTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::gl::GLTexture *) x));
}
static void *_p_mio__texture__TextureTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::texture::Texture *) x));
}
static void *_p_mio__texture__ILTextureTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::texture::Texture *) ((mio::texture::ILTexture *) x));
}
static void *_p_mio__texture__LazyILTextureTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::texture::Texture *) ((mio::texture::LazyILTexture *) x));
}
static void *_p_mio__material__TexturedPhongMaterialTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::material::Material *)(mio::material::PhongMaterial *) ((mio::material::TexturedPhongMaterial *) x));
}
static void *_p_mio__material__TexturedMqoMaterialTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::material::Material *)(mio::material::MqoMaterial *) ((mio::material::TexturedMqoMaterial *) x));
}
static void *_p_mio__material__PhongMaterialTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::material::Material *) ((mio::material::PhongMaterial *) x));
}
static void *_p_mio__material__MaterialTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::material::Material *) x));
}
static void *_p_mio__material__MqoMaterialTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::material::Material *) ((mio::material::MqoMaterial *) x));
}
static void *_p_mio__scenegraph__SimplePrimitiveTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::scenegraph::Node *) ((mio::scenegraph::SimplePrimitive *) x));
}
static void *_p_mio__scenegraph__RiggedPrimitiveTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::scenegraph::Node *) ((mio::scenegraph::RiggedPrimitive *) x));
}
static void *_p_mio__rigging__JointTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::rigging::Joint *) x));
}
static void *_p_mio__geometry__IndexedMeshTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::geometry::Mesh *) ((mio::geometry::IndexedMesh *) x));
}
static void *_p_mio__rigging__PoseAnimationTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::rigging::PoseAnimation *) x));
}
static void *_p_mio__curve__Polyline_floatTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::curve::Curve_float *) ((mio::curve::Polyline_float *) x));
}
static void *_p_mio__curve__Curve_floatTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::curve::Curve_float *) x));
}
static void *_p_mio__ik__IKEndEffectorTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::ik::IKEndEffector *) x));
}
static void *_p_mio__material__MaterialListTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::material::MaterialList *) x));
}
static void *_p_mio__scenegraph__TransformNodeTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::scenegraph::Node *) ((mio::scenegraph::TransformNode *) x));
}
static void *_p_mio__ik__IKPoseTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::ik::IKPose *) x));
}
static void *_p_mio__MioObjectTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::MioObject *) x));
}
static void *_p_mio__rigging__PoseTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *)  ((mio::rigging::Pose *) x));
}
static void *_p_mio__scenegraph__GroupTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::scenegraph::Node *) ((mio::scenegraph::Group *) x));
}
static void *_p_mio__scenegraph__NodeTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::scenegraph::Node *) x));
}
static void *_p_mio__curve__Curve_JointChangeTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::curve::Curve_JointChange *) x));
}
static void *_p_mio__curve__Polyline_JointChangeTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::curve::Curve_JointChange *) ((mio::curve::Polyline_JointChange *) x));
}
static void *_p_mio__skinning__IndexedJointWeightMappingTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::skinning::JointWeightMapping *) ((mio::skinning::IndexedJointWeightMapping *) x));
}
static void *_p_mio__skinning__JointWeightMappingTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::skinning::JointWeightMapping *) x));
}
static void *_p_mio__material__ByPolygonMaterialMappingTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::material::MaterialMapping *) ((mio::material::ByPolygonMaterialMapping *) x));
}
static void *_p_mio__texture__TextureMappingTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::texture::TextureMapping *) x));
}
static void *_p_mio__texture__IndexedTextureMappingTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::texture::TextureMapping *) ((mio::texture::IndexedTextureMapping *) x));
}
static void *_p_mio__material__MaterialMappingTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::material::MaterialMapping *) x));
}
static void *_p_mio__curve__Curve_QuaternionTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *) ((mio::curve::Curve_Quaternion *) x));
}
static void *_p_mio__curve__Polyline_QuaternionTo_p_mio__ReferenceCounted(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::ReferenceCounted *) (mio::MioObject *)(mio::curve::Curve_Quaternion *) ((mio::curve::Polyline_Quaternion *) x));
}
static void *_p_mio__skinning__IndexedJointWeightMappingTo_p_mio__skinning__JointWeightMapping(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::skinning::JointWeightMapping *)  ((mio::skinning::IndexedJointWeightMapping *) x));
}
static void *_p_mio__material__ByPolygonMaterialMappingTo_p_mio__material__MaterialMapping(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::MaterialMapping *)  ((mio::material::ByPolygonMaterialMapping *) x));
}
static void *_p_mio__texture__IndexedTextureMappingTo_p_mio__texture__TextureMapping(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::texture::TextureMapping *)  ((mio::texture::IndexedTextureMapping *) x));
}
static void *_p_mio__curve__Polyline_floatTo_p_mio__curve__Curve_float(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::curve::Curve_float *)  ((mio::curve::Polyline_float *) x));
}
static void *_p_mio__il__ILImageTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::il::ILImage *) x));
}
static void *_p_mio__geometry__MeshTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::geometry::Mesh *) x));
}
static void *_p_mio__ik__IKArmatureTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::ik::IKArmature *) x));
}
static void *_p_mio__rigging__ArmatureTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::rigging::Armature *) x));
}
static void *_p_mio__curve__Polyline_Vector3To_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::curve::Curve_Vector3 *) ((mio::curve::Polyline_Vector3 *) x));
}
static void *_p_mio__curve__Curve_Vector3To_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::curve::Curve_Vector3 *) x));
}
static void *_p_mio__gl__GLTextureTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::gl::GLTexture *) x));
}
static void *_p_mio__texture__TextureTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::texture::Texture *) x));
}
static void *_p_mio__texture__ILTextureTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::texture::Texture *) ((mio::texture::ILTexture *) x));
}
static void *_p_mio__texture__LazyILTextureTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::texture::Texture *) ((mio::texture::LazyILTexture *) x));
}
static void *_p_mio__scenegraph__SimplePrimitiveTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::scenegraph::Node *) ((mio::scenegraph::SimplePrimitive *) x));
}
static void *_p_mio__material__TexturedPhongMaterialTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::material::Material *)(mio::material::PhongMaterial *) ((mio::material::TexturedPhongMaterial *) x));
}
static void *_p_mio__material__TexturedMqoMaterialTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::material::Material *)(mio::material::MqoMaterial *) ((mio::material::TexturedMqoMaterial *) x));
}
static void *_p_mio__material__MaterialTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::material::Material *) x));
}
static void *_p_mio__material__MqoMaterialTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::material::Material *) ((mio::material::MqoMaterial *) x));
}
static void *_p_mio__material__PhongMaterialTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::material::Material *) ((mio::material::PhongMaterial *) x));
}
static void *_p_mio__scenegraph__RiggedPrimitiveTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::scenegraph::Node *) ((mio::scenegraph::RiggedPrimitive *) x));
}
static void *_p_mio__geometry__IndexedMeshTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::geometry::Mesh *) ((mio::geometry::IndexedMesh *) x));
}
static void *_p_mio__rigging__PoseAnimationTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::rigging::PoseAnimation *) x));
}
static void *_p_mio__curve__Polyline_floatTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::curve::Curve_float *) ((mio::curve::Polyline_float *) x));
}
static void *_p_mio__curve__Curve_floatTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::curve::Curve_float *) x));
}
static void *_p_mio__scenegraph__TransformNodeTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::scenegraph::Node *) ((mio::scenegraph::TransformNode *) x));
}
static void *_p_mio__material__MaterialListTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::material::MaterialList *) x));
}
static void *_p_mio__scenegraph__GroupTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::scenegraph::Node *) ((mio::scenegraph::Group *) x));
}
static void *_p_mio__scenegraph__NodeTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::scenegraph::Node *) x));
}
static void *_p_mio__curve__Polyline_JointChangeTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::curve::Curve_JointChange *) ((mio::curve::Polyline_JointChange *) x));
}
static void *_p_mio__curve__Curve_JointChangeTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::curve::Curve_JointChange *) x));
}
static void *_p_mio__skinning__IndexedJointWeightMappingTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::skinning::JointWeightMapping *) ((mio::skinning::IndexedJointWeightMapping *) x));
}
static void *_p_mio__skinning__JointWeightMappingTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::skinning::JointWeightMapping *) x));
}
static void *_p_mio__material__ByPolygonMaterialMappingTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::material::MaterialMapping *) ((mio::material::ByPolygonMaterialMapping *) x));
}
static void *_p_mio__texture__TextureMappingTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::texture::TextureMapping *) x));
}
static void *_p_mio__texture__IndexedTextureMappingTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::texture::TextureMapping *) ((mio::texture::IndexedTextureMapping *) x));
}
static void *_p_mio__material__MaterialMappingTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::material::MaterialMapping *) x));
}
static void *_p_mio__curve__Polyline_QuaternionTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *) (mio::curve::Curve_Quaternion *) ((mio::curve::Polyline_Quaternion *) x));
}
static void *_p_mio__curve__Curve_QuaternionTo_p_mio__MioObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::MioObject *)  ((mio::curve::Curve_Quaternion *) x));
}
static void *_p_mio__material__TexturedPhongMaterialTo_p_mio__material__PhongMaterial(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::PhongMaterial *)  ((mio::material::TexturedPhongMaterial *) x));
}
static void *_p_mio__material__TexturedMqoMaterialTo_p_mio__material__MqoMaterial(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::MqoMaterial *)  ((mio::material::TexturedMqoMaterial *) x));
}
static void *_p_mio__material__MqoMaterialTo_p_mio__material__Material(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::Material *)  ((mio::material::MqoMaterial *) x));
}
static void *_p_mio__material__PhongMaterialTo_p_mio__material__Material(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::Material *)  ((mio::material::PhongMaterial *) x));
}
static void *_p_mio__material__TexturedMqoMaterialTo_p_mio__material__Material(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::Material *) (mio::material::MqoMaterial *) ((mio::material::TexturedMqoMaterial *) x));
}
static void *_p_mio__material__TexturedPhongMaterialTo_p_mio__material__Material(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::Material *) (mio::material::PhongMaterial *) ((mio::material::TexturedPhongMaterial *) x));
}
static void *_p_mio__curve__Polyline_QuaternionTo_p_mio__curve__Curve_Quaternion(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::curve::Curve_Quaternion *)  ((mio::curve::Polyline_Quaternion *) x));
}
static void *_p_mio__texture__ILTextureTo_p_mio__texture__Texture(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::texture::Texture *)  ((mio::texture::ILTexture *) x));
}
static void *_p_mio__texture__LazyILTextureTo_p_mio__texture__Texture(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::texture::Texture *)  ((mio::texture::LazyILTexture *) x));
}
static void *_p_mio__curve__Polyline_JointChangeTo_p_mio__curve__Curve_JointChange(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::curve::Curve_JointChange *)  ((mio::curve::Polyline_JointChange *) x));
}
static void *_p_mio__curve__Polyline_Vector3To_p_mio__curve__Curve_Vector3(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::curve::Curve_Vector3 *)  ((mio::curve::Polyline_Vector3 *) x));
}
static void *_p_mio__scenegraph__GroupTo_p_mio__scenegraph__Node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::scenegraph::Node *)  ((mio::scenegraph::Group *) x));
}
static void *_p_mio__scenegraph__SimplePrimitiveTo_p_mio__scenegraph__Node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::scenegraph::Node *)  ((mio::scenegraph::SimplePrimitive *) x));
}
static void *_p_mio__scenegraph__RiggedPrimitiveTo_p_mio__scenegraph__Node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::scenegraph::Node *)  ((mio::scenegraph::RiggedPrimitive *) x));
}
static void *_p_mio__scenegraph__TransformNodeTo_p_mio__scenegraph__Node(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::scenegraph::Node *)  ((mio::scenegraph::TransformNode *) x));
}
static void *_p_mio__geometry__IndexedMeshTo_p_mio__geometry__Mesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::geometry::Mesh *)  ((mio::geometry::IndexedMesh *) x));
}
static void *_p_mio__gl__GLRendererTo_p_mio__scenegraph__NodeVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::scenegraph::NodeVisitor *)  ((mio::gl::GLRenderer *) x));
}
static void *_p_mio__visitor__OmniVisitorTo_p_mio__scenegraph__NodeVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::scenegraph::NodeVisitor *)  ((mio::visitor::OmniVisitor *) x));
}
static void *_p_mio__gl__GLRendererTo_p_mio__material__MaterialVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::MaterialVisitor *)  ((mio::gl::GLRenderer *) x));
}
static void *_p_mio__visitor__OmniVisitorTo_p_mio__material__MaterialVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::MaterialVisitor *)  ((mio::visitor::OmniVisitor *) x));
}
static void *_p_mio__visitor__OmniVisitorTo_p_mio__material__MaterialMappingVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::material::MaterialMappingVisitor *)  ((mio::visitor::OmniVisitor *) x));
}
static void *_p_mio__gl__GLRendererTo_p_mio__texture__TextureVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::texture::TextureVisitor *)  ((mio::gl::GLRenderer *) x));
}
static void *_p_mio__visitor__OmniVisitorTo_p_mio__texture__TextureVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::texture::TextureVisitor *)  ((mio::visitor::OmniVisitor *) x));
}
static void *_p_mio__visitor__OmniVisitorTo_p_mio__texture__TextureMappingVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::texture::TextureMappingVisitor *)  ((mio::visitor::OmniVisitor *) x));
}
static void *_p_mio__visitor__OmniVisitorTo_p_mio__geometry__MeshVisitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mio::geometry::MeshVisitor *)  ((mio::visitor::OmniVisitor *) x));
}
static swig_type_info _swigt__p_GLenum = {"_p_GLenum", "GLenum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GLint = {"_p_GLint", "GLint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GLvoid = {"_p_GLvoid", "GLvoid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ILuint = {"_p_ILuint", "ILuint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___int64 = {"_p___int64", "__int64 *|LONGLONG *|LONG64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_4__float = {"_p_a_4__float", "float (*)[4]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "CHAR *|TCHAR *|char *|CCHAR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "FLOAT *|float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "BOOL *|INT32 *|int *|INT *|INT_PTR *|LONG32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "SHANDLE_PTR *|LONG_PTR *|LONG *|HRESULT *|long *|SSIZE_T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Box = {"_p_mio__Box", "mio::Box *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Int3 = {"_p_mio__Int3", "mio::Int3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Matrix4x4 = {"_p_mio__Matrix4x4", "mio::Matrix4x4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__MioObject = {"_p_mio__MioObject", "mio::MioObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Point3 = {"_p_mio__Point3", "mio::Point3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Quaternion = {"_p_mio__Quaternion", "mio::Quaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Ray = {"_p_mio__Ray", "mio::Ray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ReferenceCounted = {"_p_mio__ReferenceCounted", "mio::ReferenceCounted *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Rgb = {"_p_mio__Rgb", "mio::Rgb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Rgba = {"_p_mio__Rgba", "mio::Rgba *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Transform = {"_p_mio__Transform", "mio::Transform *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Uv = {"_p_mio__Uv", "mio::Uv *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__Vector3 = {"_p_mio__Vector3", "mio::Vector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Curve_JointChange = {"_p_mio__curve__Curve_JointChange", "mio::curve::Curve_JointChange *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Curve_Quaternion = {"_p_mio__curve__Curve_Quaternion", "mio::curve::Curve_Quaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Curve_Vector3 = {"_p_mio__curve__Curve_Vector3", "mio::curve::Curve_Vector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Curve_float = {"_p_mio__curve__Curve_float", "mio::curve::Curve_float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPointIterator_JointChange = {"_p_mio__curve__PolylineControlPointIterator_JointChange", "mio::curve::PolylineControlPointIterator_JointChange *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPointIterator_Quaternion = {"_p_mio__curve__PolylineControlPointIterator_Quaternion", "mio::curve::PolylineControlPointIterator_Quaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPointIterator_Vector3 = {"_p_mio__curve__PolylineControlPointIterator_Vector3", "mio::curve::PolylineControlPointIterator_Vector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPointIterator_float = {"_p_mio__curve__PolylineControlPointIterator_float", "mio::curve::PolylineControlPointIterator_float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPoint_JointChange = {"_p_mio__curve__PolylineControlPoint_JointChange", "mio::curve::PolylineControlPoint_JointChange *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPoint_Quaternion = {"_p_mio__curve__PolylineControlPoint_Quaternion", "mio::curve::PolylineControlPoint_Quaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPoint_Vector3 = {"_p_mio__curve__PolylineControlPoint_Vector3", "mio::curve::PolylineControlPoint_Vector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__PolylineControlPoint_float = {"_p_mio__curve__PolylineControlPoint_float", "mio::curve::PolylineControlPoint_float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Polyline_JointChange = {"_p_mio__curve__Polyline_JointChange", "mio::curve::Polyline_JointChange *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Polyline_Quaternion = {"_p_mio__curve__Polyline_Quaternion", "mio::curve::Polyline_Quaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Polyline_Vector3 = {"_p_mio__curve__Polyline_Vector3", "mio::curve::Polyline_Vector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__curve__Polyline_float = {"_p_mio__curve__Polyline_float", "mio::curve::Polyline_float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__geometry__IndexedMesh = {"_p_mio__geometry__IndexedMesh", "mio::geometry::IndexedMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__geometry__Mesh = {"_p_mio__geometry__Mesh", "mio::geometry::Mesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__geometry__MeshVisitor = {"_p_mio__geometry__MeshVisitor", "mio::geometry::MeshVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__gl__GLRenderer = {"_p_mio__gl__GLRenderer", "mio::gl::GLRenderer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__gl__GLTexture = {"_p_mio__gl__GLTexture", "mio::gl::GLTexture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKArmature = {"_p_mio__ik__IKArmature", "mio::ik::IKArmature *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKEndEffector = {"_p_mio__ik__IKEndEffector", "mio::ik::IKEndEffector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKEndEffectorGoals = {"_p_mio__ik__IKEndEffectorGoals", "mio::ik::IKEndEffectorGoals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKEndEffectorIterator = {"_p_mio__ik__IKEndEffectorIterator", "mio::ik::IKEndEffectorIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKEndEffectorPositionIterator = {"_p_mio__ik__IKEndEffectorPositionIterator", "mio::ik::IKEndEffectorPositionIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKJoint = {"_p_mio__ik__IKJoint", "mio::ik::IKJoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKJointIterator = {"_p_mio__ik__IKJointIterator", "mio::ik::IKJointIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKJointParameters = {"_p_mio__ik__IKJointParameters", "mio::ik::IKJointParameters *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__IKPose = {"_p_mio__ik__IKPose", "mio::ik::IKPose *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__ik__NamePositionPair = {"_p_mio__ik__NamePositionPair", "mio::ik::NamePositionPair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__il__ILImage = {"_p_mio__il__ILImage", "mio::il::ILImage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__il__ILImageService = {"_p_mio__il__ILImageService", "mio::il::ILImageService *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__ByPolygonMaterialMapping = {"_p_mio__material__ByPolygonMaterialMapping", "mio::material::ByPolygonMaterialMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__Material = {"_p_mio__material__Material", "mio::material::Material *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__MaterialList = {"_p_mio__material__MaterialList", "mio::material::MaterialList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__MaterialMapping = {"_p_mio__material__MaterialMapping", "mio::material::MaterialMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__MaterialMappingVisitor = {"_p_mio__material__MaterialMappingVisitor", "mio::material::MaterialMappingVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__MaterialVisitor = {"_p_mio__material__MaterialVisitor", "mio::material::MaterialVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__MqoMaterial = {"_p_mio__material__MqoMaterial", "mio::material::MqoMaterial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__PhongMaterial = {"_p_mio__material__PhongMaterial", "mio::material::PhongMaterial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__TexturedMqoMaterial = {"_p_mio__material__TexturedMqoMaterial", "mio::material::TexturedMqoMaterial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__material__TexturedPhongMaterial = {"_p_mio__material__TexturedPhongMaterial", "mio::material::TexturedPhongMaterial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__Armature = {"_p_mio__rigging__Armature", "mio::rigging::Armature *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__Joint = {"_p_mio__rigging__Joint", "mio::rigging::Joint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__JointChange = {"_p_mio__rigging__JointChange", "mio::rigging::JointChange *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__JointIterator = {"_p_mio__rigging__JointIterator", "mio::rigging::JointIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__NameJointChangePair = {"_p_mio__rigging__NameJointChangePair", "mio::rigging::NameJointChangePair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__NameJointChangePairIterator = {"_p_mio__rigging__NameJointChangePairIterator", "mio::rigging::NameJointChangePairIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__Pose = {"_p_mio__rigging__Pose", "mio::rigging::Pose *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__rigging__PoseAnimation = {"_p_mio__rigging__PoseAnimation", "mio::rigging::PoseAnimation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__scenegraph__Group = {"_p_mio__scenegraph__Group", "mio::scenegraph::Group *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__scenegraph__Node = {"_p_mio__scenegraph__Node", "mio::scenegraph::Node *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__scenegraph__NodeVisitor = {"_p_mio__scenegraph__NodeVisitor", "mio::scenegraph::NodeVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__scenegraph__RiggedPrimitive = {"_p_mio__scenegraph__RiggedPrimitive", "mio::scenegraph::RiggedPrimitive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__scenegraph__SimplePrimitive = {"_p_mio__scenegraph__SimplePrimitive", "mio::scenegraph::SimplePrimitive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__scenegraph__TransformNode = {"_p_mio__scenegraph__TransformNode", "mio::scenegraph::TransformNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__skinning__IndexedJointWeightMapping = {"_p_mio__skinning__IndexedJointWeightMapping", "mio::skinning::IndexedJointWeightMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__skinning__JointWeightMapping = {"_p_mio__skinning__JointWeightMapping", "mio::skinning::JointWeightMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__ILTexture = {"_p_mio__texture__ILTexture", "mio::texture::ILTexture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__IndexedTextureMapping = {"_p_mio__texture__IndexedTextureMapping", "mio::texture::IndexedTextureMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__LazyILTexture = {"_p_mio__texture__LazyILTexture", "mio::texture::LazyILTexture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__Texture = {"_p_mio__texture__Texture", "mio::texture::Texture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__TextureMapping = {"_p_mio__texture__TextureMapping", "mio::texture::TextureMapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__TextureMappingVisitor = {"_p_mio__texture__TextureMappingVisitor", "mio::texture::TextureMappingVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__texture__TextureVisitor = {"_p_mio__texture__TextureVisitor", "mio::texture::TextureVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mio__visitor__OmniVisitor = {"_p_mio__visitor__OmniVisitor", "mio::visitor::OmniVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ostream = {"_p_ostream", "ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "PTCH *|PCTSTR *|LPCTSTR *|LPTCH *|PUTSTR *|LPUTSTR *|PCUTSTR *|LPCUTSTR *|char **|PTSTR *|LPTSTR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_long = {"_p_p_unsigned_long", "unsigned long **|PLCID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "HALF_PTR *|short *|SHORT *|INT16 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed___int64 = {"_p_signed___int64", "INT64 *|signed __int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|INT8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_mio__ik__NamePositionPair_t = {"_p_std__mapT_std__string_mio__ik__NamePositionPair_t", "mio::ik::NamePositionMap *|std::map< std::string,mio::ik::NamePositionPair > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_string = {"_p_string", "string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned___int64 = {"_p_unsigned___int64", "UINT64 *|DWORD64 *|unsigned __int64 *|DWORDLONG *|ULONGLONG *|ULONG64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "FCHAR *|unsigned char *|UCHAR *|BYTE *|TBYTE *|UINT8 *|BOOLEAN *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "UINT32 *|DWORD32 *|UINT *|unsigned int *|UINT_PTR *|ULONG32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "HANDLE_PTR *|DWORD *|ULONG_PTR *|DWORD_PTR *|FLONG *|unsigned long *|ULONG *|SIZE_T *|LCID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "WORD *|UHALF_PTR *|unsigned short *|USHORT *|FSHORT *|LANGID *|UINT16 *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_GLenum,
  &_swigt__p_GLint,
  &_swigt__p_GLvoid,
  &_swigt__p_ILuint,
  &_swigt__p___int64,
  &_swigt__p_a_4__float,
  &_swigt__p_char,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long,
  &_swigt__p_mio__Box,
  &_swigt__p_mio__Int3,
  &_swigt__p_mio__Matrix4x4,
  &_swigt__p_mio__MioObject,
  &_swigt__p_mio__Point3,
  &_swigt__p_mio__Quaternion,
  &_swigt__p_mio__Ray,
  &_swigt__p_mio__ReferenceCounted,
  &_swigt__p_mio__Rgb,
  &_swigt__p_mio__Rgba,
  &_swigt__p_mio__Transform,
  &_swigt__p_mio__Uv,
  &_swigt__p_mio__Vector3,
  &_swigt__p_mio__curve__Curve_JointChange,
  &_swigt__p_mio__curve__Curve_Quaternion,
  &_swigt__p_mio__curve__Curve_Vector3,
  &_swigt__p_mio__curve__Curve_float,
  &_swigt__p_mio__curve__PolylineControlPointIterator_JointChange,
  &_swigt__p_mio__curve__PolylineControlPointIterator_Quaternion,
  &_swigt__p_mio__curve__PolylineControlPointIterator_Vector3,
  &_swigt__p_mio__curve__PolylineControlPointIterator_float,
  &_swigt__p_mio__curve__PolylineControlPoint_JointChange,
  &_swigt__p_mio__curve__PolylineControlPoint_Quaternion,
  &_swigt__p_mio__curve__PolylineControlPoint_Vector3,
  &_swigt__p_mio__curve__PolylineControlPoint_float,
  &_swigt__p_mio__curve__Polyline_JointChange,
  &_swigt__p_mio__curve__Polyline_Quaternion,
  &_swigt__p_mio__curve__Polyline_Vector3,
  &_swigt__p_mio__curve__Polyline_float,
  &_swigt__p_mio__geometry__IndexedMesh,
  &_swigt__p_mio__geometry__Mesh,
  &_swigt__p_mio__geometry__MeshVisitor,
  &_swigt__p_mio__gl__GLRenderer,
  &_swigt__p_mio__gl__GLTexture,
  &_swigt__p_mio__ik__IKArmature,
  &_swigt__p_mio__ik__IKEndEffector,
  &_swigt__p_mio__ik__IKEndEffectorGoals,
  &_swigt__p_mio__ik__IKEndEffectorIterator,
  &_swigt__p_mio__ik__IKEndEffectorPositionIterator,
  &_swigt__p_mio__ik__IKJoint,
  &_swigt__p_mio__ik__IKJointIterator,
  &_swigt__p_mio__ik__IKJointParameters,
  &_swigt__p_mio__ik__IKPose,
  &_swigt__p_mio__ik__NamePositionPair,
  &_swigt__p_mio__il__ILImage,
  &_swigt__p_mio__il__ILImageService,
  &_swigt__p_mio__material__ByPolygonMaterialMapping,
  &_swigt__p_mio__material__Material,
  &_swigt__p_mio__material__MaterialList,
  &_swigt__p_mio__material__MaterialMapping,
  &_swigt__p_mio__material__MaterialMappingVisitor,
  &_swigt__p_mio__material__MaterialVisitor,
  &_swigt__p_mio__material__MqoMaterial,
  &_swigt__p_mio__material__PhongMaterial,
  &_swigt__p_mio__material__TexturedMqoMaterial,
  &_swigt__p_mio__material__TexturedPhongMaterial,
  &_swigt__p_mio__rigging__Armature,
  &_swigt__p_mio__rigging__Joint,
  &_swigt__p_mio__rigging__JointChange,
  &_swigt__p_mio__rigging__JointIterator,
  &_swigt__p_mio__rigging__NameJointChangePair,
  &_swigt__p_mio__rigging__NameJointChangePairIterator,
  &_swigt__p_mio__rigging__Pose,
  &_swigt__p_mio__rigging__PoseAnimation,
  &_swigt__p_mio__scenegraph__Group,
  &_swigt__p_mio__scenegraph__Node,
  &_swigt__p_mio__scenegraph__NodeVisitor,
  &_swigt__p_mio__scenegraph__RiggedPrimitive,
  &_swigt__p_mio__scenegraph__SimplePrimitive,
  &_swigt__p_mio__scenegraph__TransformNode,
  &_swigt__p_mio__skinning__IndexedJointWeightMapping,
  &_swigt__p_mio__skinning__JointWeightMapping,
  &_swigt__p_mio__texture__ILTexture,
  &_swigt__p_mio__texture__IndexedTextureMapping,
  &_swigt__p_mio__texture__LazyILTexture,
  &_swigt__p_mio__texture__Texture,
  &_swigt__p_mio__texture__TextureMapping,
  &_swigt__p_mio__texture__TextureMappingVisitor,
  &_swigt__p_mio__texture__TextureVisitor,
  &_swigt__p_mio__visitor__OmniVisitor,
  &_swigt__p_ostream,
  &_swigt__p_p_char,
  &_swigt__p_p_unsigned_long,
  &_swigt__p_short,
  &_swigt__p_signed___int64,
  &_swigt__p_signed_char,
  &_swigt__p_std__mapT_std__string_mio__ik__NamePositionPair_t,
  &_swigt__p_std__ostream,
  &_swigt__p_string,
  &_swigt__p_unsigned___int64,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_short,
};

static swig_cast_info _swigc__p_GLenum[] = {  {&_swigt__p_GLenum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GLint[] = {  {&_swigt__p_GLint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GLvoid[] = {  {&_swigt__p_GLvoid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ILuint[] = {  {&_swigt__p_ILuint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___int64[] = {  {&_swigt__p___int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_4__float[] = {  {&_swigt__p_a_4__float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Box[] = {  {&_swigt__p_mio__Box, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Int3[] = {  {&_swigt__p_mio__Int3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Matrix4x4[] = {  {&_swigt__p_mio__Matrix4x4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__MioObject[] = {  {&_swigt__p_mio__il__ILImage, _p_mio__il__ILImageTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__scenegraph__Node, _p_mio__scenegraph__NodeTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__ik__IKArmature, _p_mio__ik__IKArmatureTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__rigging__Armature, _p_mio__rigging__ArmatureTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Polyline_Vector3, _p_mio__curve__Polyline_Vector3To_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Curve_Vector3, _p_mio__curve__Curve_Vector3To_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__texture__LazyILTexture, _p_mio__texture__LazyILTextureTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__gl__GLTexture, _p_mio__gl__GLTextureTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__texture__Texture, _p_mio__texture__TextureTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__texture__ILTexture, _p_mio__texture__ILTextureTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__scenegraph__SimplePrimitive, _p_mio__scenegraph__SimplePrimitiveTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__scenegraph__RiggedPrimitive, _p_mio__scenegraph__RiggedPrimitiveTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__Material, _p_mio__material__MaterialTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__TexturedMqoMaterial, _p_mio__material__TexturedMqoMaterialTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__MqoMaterial, _p_mio__material__MqoMaterialTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__TexturedPhongMaterial, _p_mio__material__TexturedPhongMaterialTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__PhongMaterial, _p_mio__material__PhongMaterialTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__geometry__IndexedMesh, _p_mio__geometry__IndexedMeshTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__geometry__Mesh, _p_mio__geometry__MeshTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__rigging__PoseAnimation, _p_mio__rigging__PoseAnimationTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Polyline_float, _p_mio__curve__Polyline_floatTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Curve_float, _p_mio__curve__Curve_floatTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__scenegraph__TransformNode, _p_mio__scenegraph__TransformNodeTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__MaterialList, _p_mio__material__MaterialListTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__MioObject, 0, 0, 0},  {&_swigt__p_mio__curve__Polyline_JointChange, _p_mio__curve__Polyline_JointChangeTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Curve_JointChange, _p_mio__curve__Curve_JointChangeTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__scenegraph__Group, _p_mio__scenegraph__GroupTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__skinning__IndexedJointWeightMapping, _p_mio__skinning__IndexedJointWeightMappingTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__skinning__JointWeightMapping, _p_mio__skinning__JointWeightMappingTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__texture__TextureMapping, _p_mio__texture__TextureMappingTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__texture__IndexedTextureMapping, _p_mio__texture__IndexedTextureMappingTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__ByPolygonMaterialMapping, _p_mio__material__ByPolygonMaterialMappingTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__material__MaterialMapping, _p_mio__material__MaterialMappingTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Polyline_Quaternion, _p_mio__curve__Polyline_QuaternionTo_p_mio__MioObject, 0, 0},  {&_swigt__p_mio__curve__Curve_Quaternion, _p_mio__curve__Curve_QuaternionTo_p_mio__MioObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Point3[] = {  {&_swigt__p_mio__Point3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Quaternion[] = {  {&_swigt__p_mio__Quaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Ray[] = {  {&_swigt__p_mio__Ray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ReferenceCounted[] = {  {&_swigt__p_mio__il__ILImage, _p_mio__il__ILImageTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__ik__IKEndEffectorGoals, _p_mio__ik__IKEndEffectorGoalsTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__rigging__Pose, _p_mio__rigging__PoseTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__scenegraph__Node, _p_mio__scenegraph__NodeTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__ReferenceCounted, 0, 0, 0},  {&_swigt__p_mio__ik__IKArmature, _p_mio__ik__IKArmatureTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__rigging__Armature, _p_mio__rigging__ArmatureTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Polyline_Vector3, _p_mio__curve__Polyline_Vector3To_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Curve_Vector3, _p_mio__curve__Curve_Vector3To_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__ik__IKJoint, _p_mio__ik__IKJointTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__texture__LazyILTexture, _p_mio__texture__LazyILTextureTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__texture__ILTexture, _p_mio__texture__ILTextureTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__texture__Texture, _p_mio__texture__TextureTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__gl__GLTexture, _p_mio__gl__GLTextureTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__scenegraph__SimplePrimitive, _p_mio__scenegraph__SimplePrimitiveTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__scenegraph__RiggedPrimitive, _p_mio__scenegraph__RiggedPrimitiveTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__TexturedPhongMaterial, _p_mio__material__TexturedPhongMaterialTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__PhongMaterial, _p_mio__material__PhongMaterialTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__Material, _p_mio__material__MaterialTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__TexturedMqoMaterial, _p_mio__material__TexturedMqoMaterialTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__MqoMaterial, _p_mio__material__MqoMaterialTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__geometry__IndexedMesh, _p_mio__geometry__IndexedMeshTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__geometry__Mesh, _p_mio__geometry__MeshTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__rigging__PoseAnimation, _p_mio__rigging__PoseAnimationTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Polyline_float, _p_mio__curve__Polyline_floatTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Curve_float, _p_mio__curve__Curve_floatTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__ik__IKEndEffector, _p_mio__ik__IKEndEffectorTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__scenegraph__TransformNode, _p_mio__scenegraph__TransformNodeTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__MaterialList, _p_mio__material__MaterialListTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__rigging__Joint, _p_mio__rigging__JointTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__MioObject, _p_mio__MioObjectTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Polyline_JointChange, _p_mio__curve__Polyline_JointChangeTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Curve_JointChange, _p_mio__curve__Curve_JointChangeTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__scenegraph__Group, _p_mio__scenegraph__GroupTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__MaterialMapping, _p_mio__material__MaterialMappingTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__material__ByPolygonMaterialMapping, _p_mio__material__ByPolygonMaterialMappingTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__texture__IndexedTextureMapping, _p_mio__texture__IndexedTextureMappingTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__texture__TextureMapping, _p_mio__texture__TextureMappingTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__skinning__JointWeightMapping, _p_mio__skinning__JointWeightMappingTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__skinning__IndexedJointWeightMapping, _p_mio__skinning__IndexedJointWeightMappingTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Polyline_Quaternion, _p_mio__curve__Polyline_QuaternionTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__curve__Curve_Quaternion, _p_mio__curve__Curve_QuaternionTo_p_mio__ReferenceCounted, 0, 0},  {&_swigt__p_mio__ik__IKPose, _p_mio__ik__IKPoseTo_p_mio__ReferenceCounted, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Rgb[] = {  {&_swigt__p_mio__Rgb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Rgba[] = {  {&_swigt__p_mio__Rgba, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Transform[] = {  {&_swigt__p_mio__Transform, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Uv[] = {  {&_swigt__p_mio__Uv, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__Vector3[] = {  {&_swigt__p_mio__Vector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Curve_JointChange[] = {  {&_swigt__p_mio__curve__Curve_JointChange, 0, 0, 0},  {&_swigt__p_mio__curve__Polyline_JointChange, _p_mio__curve__Polyline_JointChangeTo_p_mio__curve__Curve_JointChange, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Curve_Quaternion[] = {  {&_swigt__p_mio__curve__Curve_Quaternion, 0, 0, 0},  {&_swigt__p_mio__curve__Polyline_Quaternion, _p_mio__curve__Polyline_QuaternionTo_p_mio__curve__Curve_Quaternion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Curve_Vector3[] = {  {&_swigt__p_mio__curve__Curve_Vector3, 0, 0, 0},  {&_swigt__p_mio__curve__Polyline_Vector3, _p_mio__curve__Polyline_Vector3To_p_mio__curve__Curve_Vector3, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Curve_float[] = {  {&_swigt__p_mio__curve__Curve_float, 0, 0, 0},  {&_swigt__p_mio__curve__Polyline_float, _p_mio__curve__Polyline_floatTo_p_mio__curve__Curve_float, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPointIterator_JointChange[] = {  {&_swigt__p_mio__curve__PolylineControlPointIterator_JointChange, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPointIterator_Quaternion[] = {  {&_swigt__p_mio__curve__PolylineControlPointIterator_Quaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPointIterator_Vector3[] = {  {&_swigt__p_mio__curve__PolylineControlPointIterator_Vector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPointIterator_float[] = {  {&_swigt__p_mio__curve__PolylineControlPointIterator_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPoint_JointChange[] = {  {&_swigt__p_mio__curve__PolylineControlPoint_JointChange, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPoint_Quaternion[] = {  {&_swigt__p_mio__curve__PolylineControlPoint_Quaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPoint_Vector3[] = {  {&_swigt__p_mio__curve__PolylineControlPoint_Vector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__PolylineControlPoint_float[] = {  {&_swigt__p_mio__curve__PolylineControlPoint_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Polyline_JointChange[] = {  {&_swigt__p_mio__curve__Polyline_JointChange, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Polyline_Quaternion[] = {  {&_swigt__p_mio__curve__Polyline_Quaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Polyline_Vector3[] = {  {&_swigt__p_mio__curve__Polyline_Vector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__curve__Polyline_float[] = {  {&_swigt__p_mio__curve__Polyline_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__geometry__IndexedMesh[] = {  {&_swigt__p_mio__geometry__IndexedMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__geometry__Mesh[] = {  {&_swigt__p_mio__geometry__IndexedMesh, _p_mio__geometry__IndexedMeshTo_p_mio__geometry__Mesh, 0, 0},  {&_swigt__p_mio__geometry__Mesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__geometry__MeshVisitor[] = {  {&_swigt__p_mio__geometry__MeshVisitor, 0, 0, 0},  {&_swigt__p_mio__visitor__OmniVisitor, _p_mio__visitor__OmniVisitorTo_p_mio__geometry__MeshVisitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__gl__GLRenderer[] = {  {&_swigt__p_mio__gl__GLRenderer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__gl__GLTexture[] = {  {&_swigt__p_mio__gl__GLTexture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKArmature[] = {  {&_swigt__p_mio__ik__IKArmature, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKEndEffector[] = {  {&_swigt__p_mio__ik__IKEndEffector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKEndEffectorGoals[] = {  {&_swigt__p_mio__ik__IKEndEffectorGoals, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKEndEffectorIterator[] = {  {&_swigt__p_mio__ik__IKEndEffectorIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKEndEffectorPositionIterator[] = {  {&_swigt__p_mio__ik__IKEndEffectorPositionIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKJoint[] = {  {&_swigt__p_mio__ik__IKJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKJointIterator[] = {  {&_swigt__p_mio__ik__IKJointIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKJointParameters[] = {  {&_swigt__p_mio__ik__IKJointParameters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__IKPose[] = {  {&_swigt__p_mio__ik__IKPose, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__ik__NamePositionPair[] = {  {&_swigt__p_mio__ik__NamePositionPair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__il__ILImage[] = {  {&_swigt__p_mio__il__ILImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__il__ILImageService[] = {  {&_swigt__p_mio__il__ILImageService, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__ByPolygonMaterialMapping[] = {  {&_swigt__p_mio__material__ByPolygonMaterialMapping, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__Material[] = {  {&_swigt__p_mio__material__Material, 0, 0, 0},  {&_swigt__p_mio__material__MqoMaterial, _p_mio__material__MqoMaterialTo_p_mio__material__Material, 0, 0},  {&_swigt__p_mio__material__TexturedMqoMaterial, _p_mio__material__TexturedMqoMaterialTo_p_mio__material__Material, 0, 0},  {&_swigt__p_mio__material__PhongMaterial, _p_mio__material__PhongMaterialTo_p_mio__material__Material, 0, 0},  {&_swigt__p_mio__material__TexturedPhongMaterial, _p_mio__material__TexturedPhongMaterialTo_p_mio__material__Material, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__MaterialList[] = {  {&_swigt__p_mio__material__MaterialList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__MaterialMapping[] = {  {&_swigt__p_mio__material__MaterialMapping, 0, 0, 0},  {&_swigt__p_mio__material__ByPolygonMaterialMapping, _p_mio__material__ByPolygonMaterialMappingTo_p_mio__material__MaterialMapping, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__MaterialMappingVisitor[] = {  {&_swigt__p_mio__material__MaterialMappingVisitor, 0, 0, 0},  {&_swigt__p_mio__visitor__OmniVisitor, _p_mio__visitor__OmniVisitorTo_p_mio__material__MaterialMappingVisitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__MaterialVisitor[] = {  {&_swigt__p_mio__gl__GLRenderer, _p_mio__gl__GLRendererTo_p_mio__material__MaterialVisitor, 0, 0},  {&_swigt__p_mio__material__MaterialVisitor, 0, 0, 0},  {&_swigt__p_mio__visitor__OmniVisitor, _p_mio__visitor__OmniVisitorTo_p_mio__material__MaterialVisitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__MqoMaterial[] = {  {&_swigt__p_mio__material__MqoMaterial, 0, 0, 0},  {&_swigt__p_mio__material__TexturedMqoMaterial, _p_mio__material__TexturedMqoMaterialTo_p_mio__material__MqoMaterial, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__PhongMaterial[] = {  {&_swigt__p_mio__material__PhongMaterial, 0, 0, 0},  {&_swigt__p_mio__material__TexturedPhongMaterial, _p_mio__material__TexturedPhongMaterialTo_p_mio__material__PhongMaterial, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__TexturedMqoMaterial[] = {  {&_swigt__p_mio__material__TexturedMqoMaterial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__material__TexturedPhongMaterial[] = {  {&_swigt__p_mio__material__TexturedPhongMaterial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__Armature[] = {  {&_swigt__p_mio__rigging__Armature, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__Joint[] = {  {&_swigt__p_mio__rigging__Joint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__JointChange[] = {  {&_swigt__p_mio__rigging__JointChange, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__JointIterator[] = {  {&_swigt__p_mio__rigging__JointIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__NameJointChangePair[] = {  {&_swigt__p_mio__rigging__NameJointChangePair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__NameJointChangePairIterator[] = {  {&_swigt__p_mio__rigging__NameJointChangePairIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__Pose[] = {  {&_swigt__p_mio__rigging__Pose, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__rigging__PoseAnimation[] = {  {&_swigt__p_mio__rigging__PoseAnimation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__scenegraph__Group[] = {  {&_swigt__p_mio__scenegraph__Group, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__scenegraph__Node[] = {  {&_swigt__p_mio__scenegraph__Group, _p_mio__scenegraph__GroupTo_p_mio__scenegraph__Node, 0, 0},  {&_swigt__p_mio__scenegraph__SimplePrimitive, _p_mio__scenegraph__SimplePrimitiveTo_p_mio__scenegraph__Node, 0, 0},  {&_swigt__p_mio__scenegraph__RiggedPrimitive, _p_mio__scenegraph__RiggedPrimitiveTo_p_mio__scenegraph__Node, 0, 0},  {&_swigt__p_mio__scenegraph__Node, 0, 0, 0},  {&_swigt__p_mio__scenegraph__TransformNode, _p_mio__scenegraph__TransformNodeTo_p_mio__scenegraph__Node, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__scenegraph__NodeVisitor[] = {  {&_swigt__p_mio__gl__GLRenderer, _p_mio__gl__GLRendererTo_p_mio__scenegraph__NodeVisitor, 0, 0},  {&_swigt__p_mio__scenegraph__NodeVisitor, 0, 0, 0},  {&_swigt__p_mio__visitor__OmniVisitor, _p_mio__visitor__OmniVisitorTo_p_mio__scenegraph__NodeVisitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__scenegraph__RiggedPrimitive[] = {  {&_swigt__p_mio__scenegraph__RiggedPrimitive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__scenegraph__SimplePrimitive[] = {  {&_swigt__p_mio__scenegraph__SimplePrimitive, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__scenegraph__TransformNode[] = {  {&_swigt__p_mio__scenegraph__TransformNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__skinning__IndexedJointWeightMapping[] = {  {&_swigt__p_mio__skinning__IndexedJointWeightMapping, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__skinning__JointWeightMapping[] = {  {&_swigt__p_mio__skinning__JointWeightMapping, 0, 0, 0},  {&_swigt__p_mio__skinning__IndexedJointWeightMapping, _p_mio__skinning__IndexedJointWeightMappingTo_p_mio__skinning__JointWeightMapping, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__ILTexture[] = {  {&_swigt__p_mio__texture__ILTexture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__IndexedTextureMapping[] = {  {&_swigt__p_mio__texture__IndexedTextureMapping, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__LazyILTexture[] = {  {&_swigt__p_mio__texture__LazyILTexture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__Texture[] = {  {&_swigt__p_mio__texture__Texture, 0, 0, 0},  {&_swigt__p_mio__texture__ILTexture, _p_mio__texture__ILTextureTo_p_mio__texture__Texture, 0, 0},  {&_swigt__p_mio__texture__LazyILTexture, _p_mio__texture__LazyILTextureTo_p_mio__texture__Texture, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__TextureMapping[] = {  {&_swigt__p_mio__texture__TextureMapping, 0, 0, 0},  {&_swigt__p_mio__texture__IndexedTextureMapping, _p_mio__texture__IndexedTextureMappingTo_p_mio__texture__TextureMapping, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__TextureMappingVisitor[] = {  {&_swigt__p_mio__texture__TextureMappingVisitor, 0, 0, 0},  {&_swigt__p_mio__visitor__OmniVisitor, _p_mio__visitor__OmniVisitorTo_p_mio__texture__TextureMappingVisitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__texture__TextureVisitor[] = {  {&_swigt__p_mio__gl__GLRenderer, _p_mio__gl__GLRendererTo_p_mio__texture__TextureVisitor, 0, 0},  {&_swigt__p_mio__texture__TextureVisitor, 0, 0, 0},  {&_swigt__p_mio__visitor__OmniVisitor, _p_mio__visitor__OmniVisitorTo_p_mio__texture__TextureVisitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mio__visitor__OmniVisitor[] = {  {&_swigt__p_mio__visitor__OmniVisitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ostream[] = {  {&_swigt__p_ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_long[] = {  {&_swigt__p_p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed___int64[] = {  {&_swigt__p_signed___int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_mio__ik__NamePositionPair_t[] = {  {&_swigt__p_std__mapT_std__string_mio__ik__NamePositionPair_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_string[] = {  {&_swigt__p_string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned___int64[] = {  {&_swigt__p_unsigned___int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_GLenum,
  _swigc__p_GLint,
  _swigc__p_GLvoid,
  _swigc__p_ILuint,
  _swigc__p___int64,
  _swigc__p_a_4__float,
  _swigc__p_char,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long,
  _swigc__p_mio__Box,
  _swigc__p_mio__Int3,
  _swigc__p_mio__Matrix4x4,
  _swigc__p_mio__MioObject,
  _swigc__p_mio__Point3,
  _swigc__p_mio__Quaternion,
  _swigc__p_mio__Ray,
  _swigc__p_mio__ReferenceCounted,
  _swigc__p_mio__Rgb,
  _swigc__p_mio__Rgba,
  _swigc__p_mio__Transform,
  _swigc__p_mio__Uv,
  _swigc__p_mio__Vector3,
  _swigc__p_mio__curve__Curve_JointChange,
  _swigc__p_mio__curve__Curve_Quaternion,
  _swigc__p_mio__curve__Curve_Vector3,
  _swigc__p_mio__curve__Curve_float,
  _swigc__p_mio__curve__PolylineControlPointIterator_JointChange,
  _swigc__p_mio__curve__PolylineControlPointIterator_Quaternion,
  _swigc__p_mio__curve__PolylineControlPointIterator_Vector3,
  _swigc__p_mio__curve__PolylineControlPointIterator_float,
  _swigc__p_mio__curve__PolylineControlPoint_JointChange,
  _swigc__p_mio__curve__PolylineControlPoint_Quaternion,
  _swigc__p_mio__curve__PolylineControlPoint_Vector3,
  _swigc__p_mio__curve__PolylineControlPoint_float,
  _swigc__p_mio__curve__Polyline_JointChange,
  _swigc__p_mio__curve__Polyline_Quaternion,
  _swigc__p_mio__curve__Polyline_Vector3,
  _swigc__p_mio__curve__Polyline_float,
  _swigc__p_mio__geometry__IndexedMesh,
  _swigc__p_mio__geometry__Mesh,
  _swigc__p_mio__geometry__MeshVisitor,
  _swigc__p_mio__gl__GLRenderer,
  _swigc__p_mio__gl__GLTexture,
  _swigc__p_mio__ik__IKArmature,
  _swigc__p_mio__ik__IKEndEffector,
  _swigc__p_mio__ik__IKEndEffectorGoals,
  _swigc__p_mio__ik__IKEndEffectorIterator,
  _swigc__p_mio__ik__IKEndEffectorPositionIterator,
  _swigc__p_mio__ik__IKJoint,
  _swigc__p_mio__ik__IKJointIterator,
  _swigc__p_mio__ik__IKJointParameters,
  _swigc__p_mio__ik__IKPose,
  _swigc__p_mio__ik__NamePositionPair,
  _swigc__p_mio__il__ILImage,
  _swigc__p_mio__il__ILImageService,
  _swigc__p_mio__material__ByPolygonMaterialMapping,
  _swigc__p_mio__material__Material,
  _swigc__p_mio__material__MaterialList,
  _swigc__p_mio__material__MaterialMapping,
  _swigc__p_mio__material__MaterialMappingVisitor,
  _swigc__p_mio__material__MaterialVisitor,
  _swigc__p_mio__material__MqoMaterial,
  _swigc__p_mio__material__PhongMaterial,
  _swigc__p_mio__material__TexturedMqoMaterial,
  _swigc__p_mio__material__TexturedPhongMaterial,
  _swigc__p_mio__rigging__Armature,
  _swigc__p_mio__rigging__Joint,
  _swigc__p_mio__rigging__JointChange,
  _swigc__p_mio__rigging__JointIterator,
  _swigc__p_mio__rigging__NameJointChangePair,
  _swigc__p_mio__rigging__NameJointChangePairIterator,
  _swigc__p_mio__rigging__Pose,
  _swigc__p_mio__rigging__PoseAnimation,
  _swigc__p_mio__scenegraph__Group,
  _swigc__p_mio__scenegraph__Node,
  _swigc__p_mio__scenegraph__NodeVisitor,
  _swigc__p_mio__scenegraph__RiggedPrimitive,
  _swigc__p_mio__scenegraph__SimplePrimitive,
  _swigc__p_mio__scenegraph__TransformNode,
  _swigc__p_mio__skinning__IndexedJointWeightMapping,
  _swigc__p_mio__skinning__JointWeightMapping,
  _swigc__p_mio__texture__ILTexture,
  _swigc__p_mio__texture__IndexedTextureMapping,
  _swigc__p_mio__texture__LazyILTexture,
  _swigc__p_mio__texture__Texture,
  _swigc__p_mio__texture__TextureMapping,
  _swigc__p_mio__texture__TextureMappingVisitor,
  _swigc__p_mio__texture__TextureVisitor,
  _swigc__p_mio__visitor__OmniVisitor,
  _swigc__p_ostream,
  _swigc__p_p_char,
  _swigc__p_p_unsigned_long,
  _swigc__p_short,
  _swigc__p_signed___int64,
  _swigc__p_signed_char,
  _swigc__p_std__mapT_std__string_mio__ik__NamePositionPair_t,
  _swigc__p_std__ostream,
  _swigc__p_string,
  _swigc__p_unsigned___int64,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_short,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

